
(in-package :lxm)

(define-words :pos W::v :templ AGENT-THEME-XP-TEMPL
 :words (
  (W::STOP
   (wordfeats (W::morph (:forms (-vb) :nom w::stop)))
   (SENSES
    ((EXAMPLE "He stopped the rioting")
     (LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ cause-effect-xp-templ (xp (% w::vp (w::vform w::ing))))
     )
    ((EXAMPLE "he/the truck stopped")
     (LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ affected-templ)
     (meta-data :origin fruit-carts :entry-date 20050308 :change-date nil :comments nil)
     )
    ((LF-PARENT ONT::STOP)
     (example "the computers/managers stopped working")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL affected-effect-xp-templ (xp (% w::vp (w::vform w::ing))))
     )
    ((LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-affected-xp-TEMPL)
     (EXAMPLE "He/The storm stopped the fair/the truck")
     )
    ((LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL effect-TEMPL)
     (EXAMPLE "The rioting stopped")
     )
     ((meta-data :origin wordnet-3.0 :entry-date 20090528 :change-date nil :comments nil)
     (LF-PARENT ONT::stop)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "The hospital stops visitors from smoking")
     )
    )
   )

  (w::arrest
     (wordfeats (W::morph (:forms (-vb) :nom w::arrest)))
     (senses
      ((lf-parent ont::stop)
       (example "arrest the process")
       (templ cause-affected-xp-templ)	     
       (meta-data :origin calo-ontology :entry-date 20060713 :change-date 20090506 :comments caloy3)
       )
      )
     )
  
    (w::diagram
     (senses
      ((lf-parent ont::describe)
       (example "diagram this object")
       (templ agent-theme-xp-templ)	     
       (meta-data :origin calo-ontology :entry-date 20060713 :change-date 20090506 :comments caloy3)
       )
      )
     )

    
  (w::rain
   (senses
    ((LF-PARENT ont::precipitating)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL EXPLETIVE-TEMPL)
     (EXAMPLE "it started raining")
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date nil :comments caloy3 :vn ("weather-57") :wn ("rain%2:43:00"))
     )
    )
   )
   (w::snow
   (senses
    ((LF-PARENT ont::precipitating)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL EXPLETIVE-TEMPL)
     (EXAMPLE "it started snowing")
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date nil :comments caloy3)
     )
    )
   )

   (w::hail
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("hail%2:32:02"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::precipitating)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL EXPLETIVE-TEMPL)
     (EXAMPLE "it started hailing")
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date nil :comments caloy3)
     )    
    )
   )
   (w::greet
    (wordfeats (W::morph (:forms (-vb) :nom w::greeting)))
   (senses
    ((LF-PARENT ONT::greet)
     (TEMPL agent-addressee-TEMPL)
     (EXAMPLE "he greeted them")
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date 20090508 :comments caloy3 :vn ("judgement-33") :wn ("?greet%2:31:00" "greet%2:32:00"))
     )    
    )
   )

   (w::welcome
     (wordfeats (W::morph (:forms (-vb) :nom w::welcome)))
   (senses
    ((LF-PARENT ONT::welcome)
     (TEMPL agent-addressee-TEMPL)
     (EXAMPLE "he welcomed the guests")
     (meta-data :origin calo-ontology :entry-date 20060125 :change-date 20090508 :comments meeting-understanding)
     )
    )
   )

   (W::adjourn
   (SENSES
    ((LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-affected-XP-TEMPL)
     (EXAMPLE "let's adjourn the meeting")
     (meta-data :origin calo-ontology :entry-date 20060106 :change-date nil :comments meeting-understanding)
     )
    )
   )

  (W::end
   (wordfeats (W::morph (:forms (-vb) :nom w::end)))
   (SENSES
    ((EXAMPLE "He/It ended the document/meeting")
     (LF-PARENT ONT::STOP)
     (templ cause-affected-xp-templ)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     )
    ((LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL affected-TEMPL)
     (EXAMPLE "The meeting/story ended")
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     )
    )
   )
  
  (W::terminate
    (wordfeats (W::morph (:forms (-vb) :nom w::termination)))
   (SENSES
    ((EXAMPLE "He terminated the meeting/document")
     (LF-PARENT ONT::STOP)
     (templ cause-effect-xp-templ)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050831 :change-date nil :comments nil :vn ("stop-55.4"))
     )
    ((LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL affected-TEMPL)
     (EXAMPLE "The program terminated")
     (meta-data :origin task-learning :entry-date 20050831 :change-date nil :comments nil)
     )
    )
   )

  (W::tape
   (SENSES
    ((EXAMPLE "tape this conversation john")
     (LF-PARENT ONT::RECORD)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
      (meta-data :origin calo-ontology :entry-date 20051214 :change-date nil :comments Break-contact :vn ("transcribe-25.4") :wn ("tape%2:32:00" "tape%2:32:03"))
     )
    ((LF-PARENT ONT::ATTACH)
     (example "tape the message to the window")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-CO-THEME-optional-TEMPL (xp (% W::pp (W::ptype W::to))))
      (meta-data :origin calo-ontology :entry-date 20051214 :change-date nil :comments Break-contact)
     )
    )
   )
  (W::disrupt
   (wordfeats (W::morph (:forms (-vb) :nom w::disruption)))
   (SENSES
    ((LF-PARENT ONT::hindering)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     (EXAMPLE "The storm disrupted the activity/signal")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Break-contact)
     )
    )
   )
  
  (W::interrupt
   (wordfeats (W::morph (:forms (-vb) :nom w::interruption)))
   (SENSES
    ((LF-PARENT ONT::hindering)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     (EXAMPLE "The storm interrupted the activity/signal")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Break-contact)
     )
    )
   )

   (W::intervene
   (wordfeats (W::morph (:forms (-vb) :nom w::intervention)))
   (SENSES
    ((LF-PARENT ONT::hindering)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     (EXAMPLE "The storm interrupted the activity/signal")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Break-contact)
     )
    )
   )

  (W::obstruct
   (wordfeats (W::morph (:forms (-vb) :nom w::obstruction)))
   (SENSES
    ((LF-PARENT ONT::hindering)
     (meta-data :origin cardiac :entry-date 20090403 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    )
   )
  (W::intrude
   (wordfeats (W::morph (:forms (-vb) :nom w::intrusion)))
   (SENSES
    ((LF-PARENT ONT::hindering)
     (meta-data :origin cardiac :entry-date 20090403 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    )
   )

   (W::congest
    (wordfeats (W::morph (:forms (-vb) :nom w::congestion)))
   (SENSES
    ((LF-PARENT ONT::hindering)
     (meta-data :origin cardiac :entry-date 20090406 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    )
   )
  
 (W::BLOCK
     (wordfeats (W::morph (:forms (-vb) :nom w::block)))
   (SENSES
    ((LF-PARENT ONT::hindering)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2)
     (example "the intrusion detector blocked the hacker/signal" "he blocked the door")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It blocks him from doing something")
     )
    )
   )

   (W::unBLOCK
   (SENSES
    ((LF-PARENT ONT::hindering)
     (meta-data :origin calo-ontology :entry-date 20060523 :change-date nil :comments nil)
     (example "he unblocked the signal")
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    )
   )
   
  (W::flood
   (SENSES
    ((LF-PARENT ONT::flooding)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the river flooded")
     (templ theme-templ)
     )
    ((LF-PARENT ONT::flooding)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the river flooded the house")
     (templ cause-theme-xp-templ)
     )
    )
   )

;    (W::fld
;   (SENSES
;    ((LF-PARENT ONT::flood)
;     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
;     (templ-group cause-theme-alternation)
;     )
;    )
;   )
    
  (W::reach
   (SENSES
    ((LF-PARENT ONT::ARRIVE-AT)
     (example "the train reached boston")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TO-LOC-XP-TEMPL (xp (% W::np)))
     )
    ((LF-PARENT ONT::REACH)
     (example "the piston reached its lower limit")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-GOAL-XP-TEMPL (xp (% W::np)))
     (preference .97) ; prefer agentive sense
     )
    ((LF-PARENT ONT::REACH)
     (example "he reached a conclusion") ;; not a goal
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-GOAL-XP-TEMPL (xp (% W::np)))
     )
    )
   )
   (w::quantify
      (senses
       ((lf-parent ont::register)
        (templ agent-property-xp-templ)
	(meta-data :origin chf :entry-date 20070809 :change-date 20090910 :comments chf-dialogues)
	)
       ))
  (W::visit
    (wordfeats (W::morph (:forms (-vb) :past W::visited :ing W::visiting)))
   (SENSES
    ((LF-PARENT ONT::PASS)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "the truck visits new york")
     (TEMPL THEME-VIA-XP-TEMPL)
     )
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments chf-dialogues)
     (LF-PARENT ONT::SPEND-TIME)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he was visiting yesterday")
     (TEMPL AGENT-TEMPL)
     )
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments chf-dialogues)
     (LF-PARENT ONT::SPEND-TIME)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he was visiting his parents yesterday")
     )
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments chf-dialogues)
     (LF-PARENT ONT::SPEND-TIME)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he was visiting with his parents yesterday")
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::with))))
     )
    )
   )
  (W::deliver
   (wordfeats (W::morph (:forms (-vb) :past W::delivered :ing W::delivering :nom w::delivery)))
   (SENSES
    ((LF-PARENT ONT::DELIVER)
     (example "the truck delivered the oranges to avon")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )
    ((LF-PARENT ONT::deliver)
     (example "deliver the oranges to boston")
     )
    )
   )
  ((W::take (W::off))
   (wordfeats (W::morph (:forms (-vb) :past W::took :pastpart W::taken :ing W::taking)))
   (SENSES
    ((LF-PARENT ONT::cause-off)
     (example "take off the coat/take the coat off")
     (SEM (F::Aspect F::bounded) (F::time-span F::extended) (F::cause F::agentive))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  ((W::cart (W::off))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
     (TEMPL agent-theme-xp-templ) ; like shuttle
;     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
     (TEMPL instrument-theme-templ) ; like shuttle
;     (PREFERENCE 0.96)
     )
    )
   )
  ((W::take (W::out))
   (wordfeats (W::morph (:forms (-vb) :past W::took :pastpart W::taken :ing W::taking)))
   (SENSES
    ((EXAMPLE "take out those lights")
     (LF-PARENT ONT::cause-out-of)
     (SEM (F::Aspect F::bounded) (F::time-span F::atomic) (F::cause F::agentive))
     )
    )
   )

  (W::take
   (wordfeats (W::morph (:forms (-vb) :past W::took :pastpart W::taken :ing W::taking)))
   (SENSES
    ((EXAMPLE "He took the aspirin")
     (LF-PARENT ONT::consume)
     (SEM (F::cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-affected-xp-templ)
     )
    ;;;; Take a path, e.g., The truck takes the route to Avon
    ((LF-PARENT ONT::MOVE-by-means)
     (SEM (F::Aspect F::bounded) (F::time-span F::extended))
     (TEMPL THEME-ALONG-TEMPL)
     )
    ((LF-PARENT ONT::TAKE-TIME)
     (example "the plan took [him] 5 hours")
     (TEMPL THEME-AFFECTED-DURATION-TEMPL)
     )
    
    ;;;; it takes 5 hours to complete the plan
    ((LF-PARENT ONT::TAKE-TIME)
     (example "it takes 5 hours to complete the plan")
     (TEMPL THEME-AFFECTED-DURATION-EXPLETIVE-TEMPL)
     (SEM (F::Aspect F::stage-level))
     )
    
    ((LF-PARENT ONT::TAKE-TIME)
     (example "he took 5 hour to work") 
     (TEMPL AFFECTED-DURATION-COMPLEX-SUBJCONTROL-TEMPL)
     )
    ;;;; too specific - but need to resolve this issue with instrument vs agent
    ;;;; the truck takes the cargo to Avon
;    ((LF-PARENT ONT::removing)
;     (SEM (F::Aspect F::bounded) (F::time-span F::extended))
;     (TEMPL INSTRUMENT-THEME-TEMPL)
;     (PREFERENCE 0.98)
;     )
    ;;;; Take the truck/cargo to Avon
;    ((LF-PARENT ONT::removing)
;     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::time-span F::extended) (F::trajectory +))
;     (PREFERENCE 0.99)
;     )
    ;;;; take notes, pictures
    ((LF-PARENT ONT::Acquire)
     (SEM (F::Cause F::agentive) (F::Aspect F::unbounded) (F::time-span F::extended))
     (PREFERENCE 0.98)
     )
    ;;;; take a city the preference is low, so that motion senses,
    ;;;; which are more salient for mobile objects, come up on top
    ((LF-PARENT ONT::appropriate)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::time-span F::atomic))
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::SELECT)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
;     (preference 1.0) ;; for plow
     )
    ((LF-PARENT ONT::is-compatible-with)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended) (f::trajectory -))
     (example "that projector takes european voltage")
     (templ affected-theme-xp-templ)
     (meta-data :origin calo :entry-date 20050308 :change-date nil :comments projector-corpus)
     )
    ((LF-PARENT ONT::take)
     (example "take action" "take a shower")
     (meta-data :origin asma :entry-date 20111005)
     (templ cause-effect-xp-templ)
     (SEM (F::Aspect F::dynamic) (F::Time-span F::extended))
     )
    )
   )
  
  (W::choose
   (wordfeats (W::morph (:forms (-vb) :past W::chose :pastpart W::chosen)))
   (SENSES
   ((LF-PARENT ONT::SELECT)
    (example "choose this one")
    (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
    )
   ((meta-data :origin plow :entry-date 20060531 :change-date nil :comments nil)
    (LF-PARENT ONT::SELECT)
    (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
    (EXAMPLE "choose red")
    (templ agent-theme-pred-templ)
    )
   )
  )

  (W::prefer
   (wordfeats (W::morph (:forms (-vb) :past W::preferred)))
   (SENSES
   ((LF-PARENT ONT::want)
    (example "I prefer this one")
    (templ experiencer-theme-xp-templ)
    )
   ((LF-PARENT ONT::WANT)
    (TEMPL EXPERIENCER-effect-SUBJCONTROL-TEMPL)
    (meta-data :origin task-learning :entry-date 20060208 :change-date nil :comments nil)
    (EXAMPLE "I prefer to go")
    )
   ((LF-PARENT ONT::WANT)
    (TEMPL EXPERIENCER-effect-OBJCONTROL-TEMPL)
    (meta-data :origin task-learning :entry-date 20060208 :change-date nil :comments nil)
    (EXAMPLE "I prefer him to go")
    )
   )
  )
  
  ((W::take W::care)
   (wordfeats (W::morph (:forms (-vb) :past W::took :pastpart W::taken)))
   (SENSES
    (;;(LF-PARENT ONT::managing)
     (lf-parent  ont::calm-manage-regulate-watch-handle-cover-takecare-run) ;; 20120521 GUM change new parent 
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he took care of the problem")
     (TEMPL agent-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::of))))
     )    
    )
   )

  (W::spend
   (wordfeats (W::morph (:forms (-vb) :past W::spent :ing W::spending)))
   (SENSES
    ((meta-data :origin monroe :entry-date 20031219 :change-date nil :comments s11 :vn ("consume-65-1"))
     (LF-PARENT ONT::spend-TIME)
     (TEMPL THEME-duration-TEMPL)
     (example "he spent 5 hours")
     )
    ((meta-data :origin calo :entry-date 20031219 :change-date nil :comments nil :vn ("consume-65-1"))
       (LF-PARENT ONT::spend-time)
     (TEMPL AGENT-duration-THEME-TEMPL (xp (% W::PP (W::ptype (? pt W::for W::on)))))
     (example "he spent 5 hours on/for it")
     )
    ((meta-data :origin calo :entry-date 20031219 :change-date nil :comments nil)
     (LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-cost-TEMPL)
     (example "he spent 5 dollars")
     )
    ((meta-data :origin calo :entry-date 20031219 :change-date nil :comments nil)
     (LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-COST-THEME-TEMPL (xp (% W::PP (W::ptype (? pt W::for W::on)))))
     (example "he spent 5 dollars on/for it")
     )
    )
   )
  (W::bid
   (wordfeats (W::morph (:forms (-vb) :past W::bid :ing W::bidding)))
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050930 :change-date nil :comments nil)
     (LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-COST-TEMPL)
     (example "he bid 5 dollars")
     )
    ((meta-data :origin task-learning :entry-date 20050930 :change-date nil :comments nil)
     (LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-COST-THEME-TEMPL (xp (% W::PP (W::ptype (? pt W::for W::on)))))
     (example "he bid 5 dollars on/for it")
     )
    ((meta-data :origin task-learning :entry-date 20050930 :change-date nil :comments nil)
     (LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? pt W::for W::on)))))
     (example "he bid on/for it")
     )
    )
   )
  (W::afford
   (wordfeats (W::morph (:forms NIL)) (W::vform W::base))
   (SENSES
    ((meta-data :origin calo :entry-date 20040420 :change-date 20090508 :comments caloy1v4)
     (LF-PARENT ONT::afford)
     (TEMPL AGENT-COST-TEMPL)
     (example "he can afford 5 dollars")
     )
   ((meta-data :origin calo :entry-date 20040420 :change-date 20090508 :comments caloy1v4)
     (LF-PARENT ONT::afford)
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "he can afford that computer")
     )
    ((meta-data :origin calo :entry-date 20040420 :change-date 20090508 :comments caloy1v4)
     (LF-PARENT ONT::afford)
     (TEMPL AGENT-EFFECT-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
     (example "he can afford to spend five dollars")
     )
    )
   )
  
  (W::select
   (SENSES
    ((meta-data :origin calo :entry-date 20060414 :change-date nil :comments nil :vn ("characterize-29.2") :wn ("select%2:31:00"))
     (LF-PARENT ONT::SELECT)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "select that plan/option")
     )
    ((meta-data :origin plow :entry-date 20060531 :change-date nil :comments nil :vn ("characterize-29.2") :wn ("select%2:31:00"))
     (LF-PARENT ONT::SELECT)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "select red")
     (templ agent-theme-pred-templ)
     )
    )
   )
  (W::deselect
   (SENSES
    ((LF-PARENT ONT::DESELECT)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "deselect that checkbox")
     (meta-data :origin task-learning :entry-date 20050815 :change-date nil :comments nil)
     )
    ((meta-data :origin plow :entry-date 20060531 :change-date nil :comments nil :vn ("characterize-29.2") :wn ("select%2:31:00"))
     (LF-PARENT ONT::DESELECT)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "deselect red")
     (templ agent-theme-pred-templ)
     )
    )
   )
  (w::spell
   (senses
    ((lf-parent ont::encoding)
     (example "spell the word for me")
     (templ agent-theme-addressee-optional-templ (xp1 (% w::NP)) (xp2 (% w::pp (w::ptype w::for))))	     
     (meta-data :origin task-learning :entry-date 20050815 :change-date nil :comments nil)
    )
   ))
  (w::misspell
   (senses
    ((lf-parent ont::encoding)
     (example "you misspelled the word")
     (templ agent-theme-addressee-optional-templ (xp1 (% w::NP)) (xp2 (% w::pp (w::ptype w::for))))	     
     (meta-data :origin task-learning :entry-date 20050912 :change-date nil :comments nil)
    )
   ))
  (w::pronounce
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("dub-29.3") :wn ("pronounce%2:32:00" "pronounce%2:32:01"))
     (LF-PARENT ONT::naming)
     (TEMPL cognizer-theme-bare-predicate-templ) ; like call
     (PREFERENCE 0.96)
     )
    ((lf-parent ont::encoding)
     (example "pronounce the word for me")
     (templ agent-theme-addressee-optional-templ (xp1 (% w::NP)) (xp2 (% w::pp (w::ptype w::for))))	     
     (meta-data :origin task-learning :entry-date 20050815 :change-date nil :comments nil)
    )
   ))
  
  (W::relate
   (wordfeats (W::morph (:forms (-vb))))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("relate%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (TEMPL agent-addressee-iobj-theme-templ) ; like say
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (EXAMPLE "relate this to that")
     (LF-PARENT ONT::ASSOCIATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-CO-THEME-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (EXAMPLE "this related to that")
     (LF-PARENT ONT::ASSOCIATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-CO-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )
   (W::pertain
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (EXAMPLE "this pertains to that")
     (LF-PARENT ONT::ASSOCIATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-CO-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )
  (W::bill
   (SENSES
    ((meta-data :origin calo :entry-date 20040407 :change-date nil :comments y1-variations)
     (EXAMPLE "bill it to my account")
     (LF-PARENT ONT::commerce-collect)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    ((meta-data :origin calo :entry-date 20040407 :change-date nil :comments y1-variations)
     (EXAMPLE "bill my account")
     (LF-PARENT ONT::commerce-collect)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-SOURCE-TEMPL)
     )
    )
   )
   (W::charge
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("charge%2:33:00" "charge%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20040407 :change-date nil :comments y1-variations)
     (EXAMPLE "charge it to my account")
     (LF-PARENT ONT::commerce-collect)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-TEMPL (xp (% W::pp (W::ptype (? pt W::to W::on)))))
     )
    ((meta-data :origin calo :entry-date 20040407 :change-date nil :comments y1-variations)
     (EXAMPLE "charge my account")
     (LF-PARENT ONT::commerce-collect)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-SOURCE-TEMPL)
     )
    ((meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)
     (EXAMPLE "charge the battery")
     (LF-PARENT ONT::fill-container)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
   ;; 20080922 generalizing this from ont::change-device-state b.c. restrictions too tight --
   ;; require :theme to be (f::form f::object)
    (w::ignite
     (senses
      ((lf-parent ont::explode)
       (example "the compression ignites the fuel")
       (templ cause-theme-xp-templ)
       (meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)
       )
      ((lf-parent ont::explode)
	(example "the fuel ignites")
	(templ theme-templ)
	(meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)	
	)	    
      ))
  (w::fight
    (wordfeats (W::morph (:forms (-vb) :past W::fought :ing w::fighting)))
     (senses
      ((lf-parent ont::fighting)
       (example "he fought the proposal")
       (templ agent-theme-xp-templ)
       (meta-data :origin step :entry-date 20080630 :change-date nil :comments nil)
       )
      ((lf-parent ont::fighting)
       (example "he fought (with/for/against them)")
       (templ agent-templ)
       (meta-data :origin step :entry-date 20080630 :change-date nil :comments nil)
       )
      ((lf-parent ont::fighting)
       (example "he fought to breath")
       (TEMPL AGENT-EFFECT-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
       (meta-data :origin cardiac :entry-date 20080630 :change-date nil :comments nil)
       )
      ))
       (w::struggle
     (senses
      ((lf-parent ont::fighting)
       (example "he struggled with/for/against the proposal")
       (templ agent-templ)
       (meta-data :origin step :entry-date 20080630 :change-date nil :comments nil)
       )
       ((lf-parent ont::fighting)
       (example "he struggled to breath")
       (TEMPL AGENT-EFFECT-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
       (meta-data :origin cardiac :entry-date 20080630 :change-date nil :comments nil)
       )
      ))
       (w::defend
     (senses
      ((lf-parent ont::fighting)
       (example "he defended the proposal")
       (templ agent-theme-xp-templ)
       (meta-data :origin step :entry-date 20080630 :change-date nil :comments nil)
       )
      ))
       (w::contend
     (senses
      ((lf-parent ont::fighting)
       (example "he contended with the proposal")
       (templ agent-theme-xp-templ (xp (% W::PP (W::ptype w::with))))
       (meta-data :origin step :en try-date 20080630 :change-date nil :comments nil)
       )
      ))
   (W::register
     (wordfeats (W::morph (:forms (-vb) :past W::registered :ing w::registering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090910 :comments nil :vn ("register-54.1") :wn ("register%2:32:00"))
     (LF-PARENT ONT::register)
     (TEMPL instrument-property-templ) ; like total
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus :vn ("register-54.1") :wn ("register%2:32:00"))
     (EXAMPLE "register the data")
     (LF-PARENT ONT::RECORD)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "register for the conference/at the hotel")
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     (templ agent-theme-optional-templ (xp (% W::PP (W::ptype (? t W::at W::for)))))
     )
    )
   )
   (W::copy
    (wordfeats (W::morph (:forms (-vb) :ing w::copying :nom W::copy)))
    (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("transcribe-25.4") :wn ("copy%2:36:01" "copy%2:36:05"))
     (LF-PARENT ONT::duplicate)
     (TEMPL agent-theme-xp-templ)
     )
    ((lf-parent ont::send)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (templ agent-recipient-theme-templ (xp (% W::PP (W::ptype w::on))))
     (example "copy my group on the email")
     (meta-data :origin plow :entry-date 20051004 :change-date nil :comments nil :vn ("send-11.1-1"))
     )
     )
    )
    (W::cc
    (SENSES
     ((lf-parent ont::send)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (templ agent-recipient-theme-templ (xp (% W::PP (W::ptype w::on))))
     (example "cc him on that")
     (meta-data :origin calo-ontology :entry-date 20060425 :change-date nil :comments iris)
     )
     )
    )
    ((W::c w::c)
    (SENSES
     ((lf-parent ont::send)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (templ agent-recipient-theme-templ (xp (% W::PP (W::ptype w::on))))
     (example "cc him on that")
     (meta-data :origin calo-ontology :entry-date 20060425 :change-date nil :comments iris)
     )
     )
    )
   ((w::b W::c w::c)
    (SENSES
     ((lf-parent ont::send)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (templ agent-recipient-theme-templ (xp (% W::PP (W::ptype w::on))))
     (example "bcc him on that")
     (meta-data :origin calo-ontology :entry-date 20060425 :change-date nil :comments iris)
     )
     )
    )
   (w::bcc
    (SENSES
     ((lf-parent ont::send)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (templ agent-recipient-theme-templ (xp (% W::PP (W::ptype w::on))))
     (example "bcc him on that")
     (meta-data :origin calo-ontology :entry-date 20060425 :change-date nil :comments iris)
     )
     )
    )
   (W::duplicate
    (SENSES
     ((meta-data :origin task-learning :entry-date 20050817 :change-date nil :comments nil)
      (EXAMPLE "duplicate the text")
      (LF-PARENT ONT::duplicate)
      (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
      )
     )
    )
   (W::scorch
     (SENSES
     ((meta-data :origin plow :entry-date 20060802 :change-date 20090504 :comments weather)
      (LF-PARENT ONT::burn)
      (TEMPL cause-theme-xp-templ) ; like ferment
      )
     )
    )

   (W::burn
    (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("burn%2:43:01"))
     (LF-PARENT ONT::burn)
     (TEMPL cause-theme-xp-templ) ; like ferment
     )
    ((meta-data :origin step :entry-date 20081027 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("burn%2:43:01"))
     (LF-PARENT ONT::burn)
     (example "the book burned")
     (TEMPL theme-templ) ; like ferment
     )
     ((meta-data :origin calo :entry-date 20040504 :change-date nil :comments html-purchasing-corpus)
      (EXAMPLE "burn a cd")
      ;;(LF-PARENT ONT::write)
      (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
      (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
      (preference .94)
      )
     )
    )

   ((W::blow w::up)
     (wordfeats (W::morph (:forms (-vb) :past W::blew :pastpart w::blown)))
    (SENSES
     ((meta-data :origin step :entry-date 20080705 :change-date 20090504 :comments step5)
      (EXAMPLE "the bomb blew up")
      (LF-PARENT ONT::explode)
      (TEMPL THEME-TEMPL)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      )
     )
    )

   (w::explode
    (SENSES
     ((meta-data :origin step :entry-date 20080705 :change-date 20090504 :comments step5)
      (EXAMPLE "the bomb exploded")
      (LF-PARENT ONT::explode)
      (TEMPL THEME-TEMPL)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      )
     )
    )

   ((W::burn w::out)
    (SENSES
     ((meta-data :origin beetle :entry-date 20050216 :change-date nil :comments mockup-1)
      (EXAMPLE "a lightbub burned out")
      (LF-PARENT ONT::Change-device-state)
      (TEMPL THEME-TEMPL)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      )
     )
    )

   ;; alternate pastpart form
  (W::burnt
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pastpart))
   (SENSES
    ((meta-data :origin calo :entry-date 20040504 :change-date nil :comments html-purchasing-corpus)
     (EXAMPLE "he had already  burnt the cd")
     (LF-PARENT ONT::write)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (preference .95)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("entity_specific_cos-45.5") :wn ("burn%2:43:01"))
     (LF-PARENT ONT::transformation)
     (TEMPL cause-theme-xp-templ) ; like ferment
     )
    )
   )
   
   (W::backup
    (wordfeats (W::morph (:forms (-vb) :nom W::backup)))
    (SENSES
     ((meta-data :origin calo :entry-date 20040504 :change-date nil :comments html-purchasing-corpus)
     (EXAMPLE "backup the files")
     (LF-PARENT ONT::archive)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
     ((meta-data :origin calo :entry-date 20040504 :change-date nil :comments html-purchasing-corpus)
     (EXAMPLE "backup the computer")
     (LF-PARENT ONT::archive)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (templ agent-source-templ)
     )
    )
   )

   (w::conform
    (senses
     ((LF-PARENT ONT::Compliance)
      (example "conform to the procedure")
      (templ agent-theme-xp-templ (xp (% w::PP (w::ptype w::to))))
      (meta-data :origin integrated-learning :entry-date 20050817 :change-date nil :comments nil)
      )
     ))
   (w::comply
    (wordfeats (W::morph (:forms (-vb) :nom w::compliance)))
    (senses
     ((LF-PARENT ONT::Compliance)
      (example "comply with the laws")
      (templ agent-theme-xp-templ (xp (% w::PP (w::ptype w::with))))
      (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
      )
     ))
   (w::simulate
    (senses
     ((LF-PARENT ONT::Compliance)
      (example "simulate the procedure")
      (templ agent-theme-xp-templ)
      (meta-data :origin integrated-learning :entry-date 20050817 :change-date nil :comments nil)
      )
     ))
   
   (w::obey
    (senses
     ((LF-PARENT ONT::Compliance)
      (example "obey the rules")
      (templ agent-theme-xp-templ)
      (meta-data :origin integrated-learning :entry-date 20050817 :change-date nil :comments nil)
      )
     ))
   (w::satisfy
    (senses
     ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("satisfy%2:37:00"))
       (LF-PARENT ONT::subduing)
       (TEMPL cause-experiencer-xp-templ)
       (PREFERENCE 0.96)
       )
     ((LF-PARENT ONT::Compliance)
      (example "satisfy the requirements")
      (templ agent-theme-xp-templ)
      (meta-data :origin task-learning :entry-date 20050830 :change-date nil :comments nil)
      )
     ))
   
  (W::follow
   (SENSES
    ((LF-PARENT ONT::follow)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-ALONG-TEMPL)
     (example "The truck follows the path to Avon")
     (preference .9)
     )
    ((LF-PARENT ONT::FOLLOW)
     (example  "I follow truck B")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ((LF-PARENT ONT::Compliance)
     (example "follow this procedure")
     (templ agent-theme-xp-templ)
     (meta-data :origin integrated-learning :entry-date 20050817 :change-date nil :comments nil)
     )
    )
   )
  
  (W::depart
     (wordfeats (W::morph (:forms (-vb) :nom W::departure)))
   (SENSES
    ((LF-PARENT ONT::DEPART)
     (example "depart from Rochester for NYC")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL GO-FROM-TO-TEMPL (xp1 (% W::PP (W::ptype W::from))) (xp2 (% W::PP (W::ptype W::for))))
     )
    ;; this transitive use is added for robustness -- apparently people say this
    ((LF-PARENT ONT::DEPART)
     (meta-data :origin ralf :entry-date 20040930 :change-date nil :comments ralf.txt)
     (example "the truck departed atlanta for rochester")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL GO-FROM-TO-TEMPL (xp2 (% W::PP (W::ptype W::for))))
     (preference .9)
     )
    )
   )
#|
;; :origin jr gloss-variant
;; multiword entry blocks verb sense from WF
  ((W::back (W::up))
   (SENSES
    ;;;; Back up to Avon
    ((LF-PARENT ONT::GO-BACK)
     (LF-FORM W::backup)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-source-optional-TEMPL)
     )
    ;;;; Back up the truck to Avon
    ((LF-PARENT ONT::RETURN)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )
    ;; abstract information objects as themes
    ((meta-data :origin calo :entry-date 20040504 :change-date nil :comments html-purchasing-corpus)
     (EXAMPLE "back the files up")
     (LF-PARENT ONT::archive)
     (LF-FORM W::backup)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ((meta-data :origin calo :entry-date 20040504 :change-date nil :comments html-purchasing-corpus)
     (EXAMPLE "back up the computer")
     (LF-PARENT ONT::archive)
     (LF-FORM W::backup)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
|#
  (W::backtrack
   (SENSES
    ;;;; Backtrack to Avon
    ((LF-PARENT ONT::GO-BACK)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-source-optional-TEMPL)
     )
    )
   )

  (w::navigate
   (senses
    ((LF-PARENT ONT::MOVE)
     (SEM (F::aspect F::unbounded) (F::time-span F::extended))
     (example "navigate to amazon dot com")
     (meta-data :origin plow :entry-date 20060626 :change-date nil :comments pq0380)
     (TEMPL AGENT-TEMPL)
     )
    )
   )

   (W::undergo
   (wordfeats (W::morph (:forms (-vb) :3s W::undergoes :past W::underwent :pastpart W::undergone)))
   (SENSES
    ((lf-parent ont::undergo)
     (example "The mixture undergoes an explosion")
     (TEMPL affected-effect-xp-TEMPL)
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil))
     )
   )
 
  (W::go
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ((lf-parent ont::undergo-action)
     (example "I kept going")
     (TEMPL AGENT-TEMPL)
     (meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-followup))
    ((lf-parent ont::undergo-action)
     (example "The interview went well")
     (TEMPL ACTION-TEMPL) (SYNTAX (ADVBL-NECESSARY +))
     (preference 0.98) ;;; !!!!!!!!! HACK needed to have the right templ show up first for keep going
     (meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-followup))
    ((lf-parent ont::undergo-action)
     (example "The car went == the car died")
     (templ theme-templ)
     (preference 0.98) ;;; !!!!!!!!! HACK needed to have the right templ show up first for keep going
     (meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-followup))
     ((lf-parent ont::undergo-action)
     (example "he went jogging")
     (templ agent-action-subjcontrol-templ (xp (% W::VP (W::vform W::ing))))
     (meta-data :origin chf :entry-date 20070904 :change-date nil :comments nil))
     ((lf-parent ont::undergo-action)
     (example "he went for a walk")
     (templ agent-action-xp-templ (xp (% W::pp (W::ptype (? pt w::for)))))
     (meta-data :origin chf :entry-date 20070904 :change-date nil :comments nil))     
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("escape-51.1-2"))
     (LF-PARENT ONT::MOVE)
     (SEM (F::aspect F::unbounded) (F::time-span F::extended))
     (TEMPL THEME-TEMPL)
     (example "the cargo/truck goes to Avon")
     (PREFERENCE 0.98) ;;;; I want self-moving interp to show up first
     )
    ((LF-PARENT ONT::MOVE)
     (SEM (F::aspect F::unbounded) (F::time-span F::extended))
     (example "go to amazon dot com"" go by the store")
     (meta-data :origin plow :entry-date 20050315 :change-date nil :comments nil)
     (TEMPL AGENT-TEMPL)
     )
    ((meta-data :origin plow :entry-date 20060113 :change-date nil :comments pqs)
     (EXAMPLE "this goes here" "the title goes in the textbox")
     (LF-PARENT ONT::should-be-at)
     (TEMPL THEME-TEMPL)
     )
    ((LF-PARENT ONT::MOVE)
     (example "go to/and fix the power lines")
     (SEM (F::aspect F::unbounded) (F::time-span F::extended))
     (TEMPL AGENT-PURPOSE-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype (? ct W::s-and)))))
     (PREFERENCE 0.92)    ;;;; use any other possible sense first
     )
    ;;;; for imperatives only
    ((EXAMPLE "Go find it")
     (LF-PARENT ONT::MOVE)
     (SEM (F::aspect F::unbounded) (F::time-span F::extended))
     (TEMPL AGENT-PURPOSE-SUBJCONTROL-TEMPL (xp (% W::vp (W::vform W::base))))
     (SYNTAX (W::morph (:forms NIL)) (W::vform W::base))
     (PREFERENCE 0.92)    ;;;; use any other possible sense first
     )
    ((example "let's go for/with the mac")
     (LF-PARENT ONT::SELECT)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-theme-xp-templ (xp (% W::pp (W::ptype (? pt w::for W::with)))))
     (meta-data :origin calo :entry-date 20040412 :change-date nil :comments calo-y1v4)
     )
    )
   )

  (w::belong
   (senses
    ((meta-data :origin plow :entry-date 20060113 :change-date nil :comments task-learning)
     (EXAMPLE "this belongs here; in/on/under the box")
     (LF-PARENT ONT::should-be-at)
     (TEMPL THEME-TEMPL)
     )
;     ((meta-data :origin plow :entry-date 20060510 :change-date nil :comments task-learning)
;     (EXAMPLE "this belongs here")
;     (LF-PARENT ONT::should-be-at)
;     (TEMPL THEME-LOCATION-XP-TEMPL (xp (% W::NP (W::pp-word +))))
;     )
    )
   )
  (w::roll
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("roll%2:29:06" "roll%2:38:00"))
     (LF-PARENT ONT::roll)
     (TEMPL theme-templ) ; like move,bounce
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("roll%2:29:06" "roll%2:38:00"))
     (LF-PARENT ONT::rotate)
     (TEMPL agent-theme-xp-templ) ; like rotate,turn,spin
     (PREFERENCE 0.96)
     )
   ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("roll%2:29:06" "roll%2:38:00"))
     (LF-PARENT ONT::roll)
     (TEMPL agent-templ) ; like stroll,walk
     (PREFERENCE 0.96)
     )
    ((example "let's roll with that one")
     (LF-PARENT ONT::SELECT)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-theme-xp-templ (xp (% W::pp (W::ptype W::with))))
     (meta-data :origin calo :entry-date 20050308 :change-date nil :comments computer-purchasing)
     )
    )
   )
  
  ((W::go w::through)
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ((lf-parent ont::undergo-action)
     (example "The fax went through / the paper went through changes")
     (TEMPL THEME-ACTION-OPTIONAL-TEMPL)
     (meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-followup))
    ))

  (W::stick
   (wordfeats (W::morph (:forms (-vb) :past W::stuck)))
   (SENSES
    ((example "let's stick with the mac")
     (LF-PARENT ONT::retain)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-theme-xp-templ (xp (% W::pp (W::ptype W::with))))
     (meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2)
     )
    ))
  
  (W::come
   (wordfeats (W::morph (:forms (-vb) :past W::came :pastpart W::come)))
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("appear-48.1.1") :wn ("come%2:30:01" "come%2:42:13"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-to-loc-xp-templ (xp (% w::pp (w::ptype w::to)))) ; like show-up with different pp
     (PREFERENCE 0.96)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("escape-51.1-2"))
     (LF-PARENT ONT::COME)
     (example "the cargo/truck came yesterday")
     (SEM (F::trajectory +) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (PREFERENCE 0.98)
     )
    )
   )
  ((W::break w::down)
   (wordfeats (W::morph (:forms (-vb) :past w::broke :pastpart W::broken :nom (w::break w::down))))
   (SENSES
    ((LF-PARENT ONT::fail)
     (SYNTAX (w::resultative +))
     (example "he broke down and ate french fries")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-TEMPL)
     (meta-data :origin chf :entry-date 20070827 :change-date nil :comments chf-dialogues)
     )
    ))

   (W::fail
   (SENSES
    ((lf-parent ont::fail)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he failed to see the problem")
     (TEMPL AGENT-effect-SUBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-to))))
     (meta-data :origin calo :entry-date 20041123 :change-date nil :comments caloy2)
     )
    ((LF-PARENT ONT::fail)
     (example "he failed the student")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (meta-data :origin calo :entry-date 20041123 :change-date nil :comments caloy2)
     )
     ((LF-PARENT ONT::fail)
     (example "he failed the test")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-effect-XP-TEMPL) 
     (meta-data :origin calo :entry-date 20041123 :change-date nil :comments caloy2)
     )
    ))

   (W::neglect
   (SENSES
    ((lf-parent ont::fail)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he neglected to water the plants")
     (TEMPL AGENT-effect-SUBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-to))))
     (meta-data :origin calo-ontology :entry-date 20060710 :change-date nil :comments caloy3)
     )
    ((LF-PARENT ONT::fail)
     (example "he neglected the problem")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (meta-data :origin calo-ontology :entry-date 20060710 :change-date nil :comments caloy3)
     )
    ))

   (W::manage
    (wordfeats (W::morph (:forms (-vb) :nom W::management)))
   (SENSES
    ((lf-parent ont::achieve)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he managed to solve the problem")
     (TEMPL cause-effect-SUBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-to))))
     (meta-data :origin calo :entry-date 20041123 :change-date nil :comments caloy2)
     )
     (;;(lf-parent ont::managing)
      (lf-parent  ont::calm-manage-regulate-watch-handle-cover-takecare-run) ;; 20120521 GUM change new parent 
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he manages the project")
     (TEMPL agent-theme-xp-templ)
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil)
     )
    ))

   (W::regulate
    (wordfeats (W::morph (:forms (-vb) :nom W::regulation)))
   (SENSES
      (;;(lf-parent ont::managing)
       (lf-parent  ont::calm-manage-regulate-watch-handle-cover-takecare-run) ;; 20120521 GUM change new parent 
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "the device regulates the flow of oxygen")
     (TEMPL cause-theme-xp-templ)
     (meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     )
    ))
   
  (W::continue
   (wordfeats (W::morph (:forms (-vb))))
   (SENSES
    ((LF-PARENT ONT::GO-ON)
     (example "continue to Delta/the truck continued to delta")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
         ;;; Myrosia 20040805 lowered the preference so that this sense doesn't interfere unless main selectional restrictions
     ;;; so move sense should only show up in boosted versions of the domain
     (preference 0.95)
     )
    ((lf-parent ont::maintain-activity)
     (SEM (F::Locative F::Located) (F::Aspect F::stage-level) (F::Time-span F::extended))
     (example "continue walking")
     (TEMPL AFFECTED-EFFECT-SUBJCONTROL-TEMPL (xp (% w::VP (w::vform w::ing))))
     (meta-data :origin bee :entry-date 20040805 :change-date 20090220 :comments portability-followup)
     )    
    ((lf-parent ont::maintain-activity)
     (SEM (F::Locative F::Located) (F::Aspect F::stage-level) (F::Time-span F::extended))
     (example "they will continue to light up")
     (TEMPL AFFECTED-EFFECT-SUBJCONTROL-TEMPL)
     (meta-data :origin bee :entry-date 20080923 :change-date 20090220 :comments pilot4)
     )
    ((lf-parent ont::maintain-activity)
     (SEM (F::Locative F::Located) (F::Aspect F::stage-level) (F::Time-span F::extended))
     (example "Continue with your work")
     (TEMPL AFFECTED-EFFECT-OPTIONAL-TEMPL (xp (% w::PP (w::pform w::with))))
     (meta-data :origin bee :entry-date 20040805 :change-date 20090220 :comments portability-followup)
     )
    ((lf-parent ont::maintain-activity)
     (example "he continued the patient on the therapy" "the patient was continued on the drug")
     (TEMPL AGENT-AFFECTED-EFFECT-TEMPL (xp (% W::PP (W::ptype (? pt W::with W::on)))))
     (meta-data :origin cernl :entry-date 20110210 :change-date nil :comments ticket-242)
     )
    ;;; Myrosia 20040805 lowered the preference so that this sense doesn't interfere unless main selectional restrictions
    ((LF-PARENT ONT::TALK)
     (example "continue with the story")
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::with))))
     (preference 0.95)
     )
    ))

  (W::resume
   (SENSES
    ((lf-parent ont::resume-action)
     (SEM (F::Cause F::Agentive) (F::Locative F::Located) (F::Aspect F::stage-level) (F::Time-span F::extended))
     (example "resume searching")
     (TEMPL AGENT-ACTION-SUBJCONTROL-TEMPL (xp (% w::VP (w::vform w::ing))))
     (meta-data :origin plow :entry-date 20050401 :change-date 20091008 :comments nil)
     )
    ((lf-parent ont::resume-action)
     (SEM (F::Cause F::Agentive) (F::Locative F::Located) (F::Aspect F::stage-level) (F::Time-span F::extended))
     (example "resume the search")
     (TEMPL AGENT-ACTION-OPTIONAL-TEMPL)
     (meta-data :origin plow :entry-date 20050401 :change-date 20091008 :comments nil)
     )
    ))
   
  ((W::continue W::on)
   (SENSES
    ;;;; Continue on to Delta/ The truck continued on to Delta
    ((LF-PARENT ONT::GO-ON)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
              ;;; Myrosia 20040805 lowered the preference so that this sense doesn't interfere unless main selectional restrictions
     ;;; so move sense should only show up in boosted versions of the domain
     (preference 0.95)
     )
    ;;;; continue on with the plan
    ((LF-PARENT ONT::ACTIVITY-ONGOING)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ACTION-OPTIONAL-TEMPL (xp (% W::pp (W::ptype W::with))))
     (meta-data :origin bee :entry-date ? :change-date 20040805 :comments portability-followup)
     )
    ))
   
  ((W::go W::on)
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ;;;; Go on to Delta / The truck went on to Delta
    ((LF-PARENT ONT::GO-ON)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
              ;;; Myrosia 20040805 lowered the preference so that this sense doesn't interfere unless main selectional restrictions
     ;;; so move sense should only show up in boosted versions of the domain
     (preference 0.95)
     )
    ((EXAMPLE "the rioting is going on")
     (LF-PARENT ONT::HAPPEN)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    ;;;; go on with the story
    ((LF-PARENT ONT::ACTIVITY-ONGOING)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ACTION-OPTIONAL-TEMPL (xp (% W::pp (W::ptype W::with))))
     (meta-data :origin bee :entry-date ? :change-date 20040805 :comments portability-followup)
     )
    ((LF-PARENT ONT::START-OBJECT)
     (TEMPL THEME-TEMPL)
     (meta-data :origin beetle :entry-date 20010516 :change-date nil :comments pilot4)
     (example "the bulb went on")
     )
    )
   )
  
  (W::proceed
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("begin-55.1"))
     (LF-PARENT ONT::activity-ongoing)
     (TEMPL agent-action-optional-templ (xp (% w::pp (w::ptype w::with)))) ; like go-on
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::GO-ON)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     (example "the truck proceeds to Delta")
     (PREFERENCE 0.98)    ;;;; I want agent interpretation to show up first
     )
    ((LF-PARENT ONT::GO-ON)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     (example "proceed to the exit")
     )
    )
   )
  (W::move
   (wordfeats (W::morph (:forms (-vb) :nom w::motion)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("move%2:37:00" "move%2:37:01"))
     (LF-PARENT ONT::provoke)
     (example "the story moved him [to change his ways]")
      (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-OPTIONAL-TEMPL) ; like annoy,bother,concern,hurt
      (preference .92)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("move%2:38:00" "move%2:38:01" "move%2:38:03"))
     (LF-PARENT ONT::MOVE)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     (example "the truck is moving")
     ;; if this is changed check lou
     (PREFERENCE 0.98) ;; prefer agent interp for intransitive
     )
    ;;;; the foot moves the ball
    ((LF-PARENT ONT::TRANSPORT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     (example "the truck moves the cargo")
     (PREFERENCE 0.99)
     )
    ((LF-PARENT ONT::haul)
     (example "move the cargo to avon")
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ((meta-data :origin "plow" :entry-date 20060510 :change-date nil :comments nil)
     (LF-PARENT ONT::move)
     (example "move to this website")
     (TEMPL agent-templ)
     )
    )
   )
  (W::transfer
   ;; adding the morph forms as the doubled consonant with unstressed final syllable is an exception to the morph rule
   (wordfeats (W::morph (:forms (-vb) :past W::transferred :ing W::transferring)))
   (SENSES
    ((LF-PARENT ONT::transfer)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (EXAMPLE "transfer the message to another mailbox")
     (meta-data :origin task-learning :entry-date 20050823 :change-date nil :comments nil)
     )
    )
   )
  
 (W::quake
   (SENSES
    ((meta-data :origin calo-ontology :entry-date 20060428 :change-date nil :comments nil)
     (LF-PARENT ONT::move-back-and-forth)
     (TEMPL theme-templ)
     )
    )
   )
  
  (W::drag
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("drag%2:35:02"))
     ;; changed from ont::scrutiny to ont::physical-scrutiny to allow path phrases
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     (example "drag the river")
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::haul)
     (example "drag the triangle")
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (meta-data :origin fruitcarts :entry-date 20050331 :change-date nil :comments fruitcart-11-1 :vn ("carry-11.4") :wn ("drag%2:35:00" "drag%2:35:01"))
     )
    )
   )

   (W::lower
      (wordfeats (W::morph (:forms (-vb) :past W::lowered :ing W::lowering)))
   (SENSES
    ((LF-PARENT ONT::MOVE-downward)
     (example "lower the banana a little")
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (meta-data :origin fruitcarts :entry-date 20050401 :change-date nil :comments fruitcart-07-2 :vn ("put_direction-9.4") :wn ("lower%2:38:00"))
     )
    )
   )
   
   (W::raise
   (SENSES
    ((LF-PARENT ONT::MOVE-upward)
     (example "raise the banana a little")
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (meta-data :origin fruitcarts :entry-date 20050401 :change-date nil :comments fruitcart-07-2 :vn ("put_direction-9.4") :wn ("raise%2:38:00"))
     )
    )
   )
  
  (W::crash
    (wordfeats (W::morph (:forms (-vb) :nom w::crash)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("crash%2:35:00" "crash%2:35:01" "crash%2:35:02" "crash%2:38:02"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break,crack,fracture,rip,shatter,chip,splinter,snap
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2 :vn ("break-45.1") :wn ("crash%2:35:00" "crash%2:35:01" "crash%2:35:02" "crash%2:38:02"))
     (example "the computer crashed")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     )
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he crashed the computer")
     )
    ((LF-PARENT ont::break-object)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     (example "it crashed the computer")
     )
    )
   )
  (W::break
   (wordfeats (W::morph (:forms (-vb) :past W::broke :pastpart W::broken :ing W::breaking :nom w::break)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("break%2:42:04"))
     (LF-PARENT ONT::remove-from)
     (TEMPL agent-source-theme-optional-templ)
     (PREFERENCE 0.96)
     (example "She finally broke herself of smoking cigarettes")
     )
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2 :vn ("break-45.1") :wn ("break%2:29:04" "break%2:30:00" "break%2:30:10" "break%2:30:15" "break%2:35:00" "break%2:38:11" "break%2:41:08"))
     (example "the window broke")
     (SYNTAX (w::resultative +))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     )
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he broke the window")
     )
    ((LF-PARENT ont::break-object)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2 :vn ("break-45.1") :wn ("break%2:29:04" "break%2:30:00" "break%2:30:10" "break%2:30:15" "break%2:35:00" "break%2:38:11" "break%2:41:08"))
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     (example "it broke the computer" "the storm broke the window")
     )
    ((LF-PARENT ont::break-object)
     (meta-data :origin beetle :entry-date 20050216 :change-date nil :comments mockup-1 :vn ("break-45.1") :wn ("break%2:29:04" "break%2:30:00" "break%2:30:10" "break%2:30:15" "break%2:35:00" "break%2:38:11" "break%2:41:08"))
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     (example "the switch breaks the circuit")
     ;; use "cause" interpretation whenever possible
     (preference 0.98)
     )
    ((LF-PARENT ONT::render-ineffective)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2 :vn ("break-45.1") :wn ("break%2:29:04" "break%2:30:00" "break%2:30:10" "break%2:30:15" "break%2:35:00" "break%2:38:11" "break%2:41:08"))
     (example "the browser broke")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     (SYNTAX (w::resultative +))
     )
    ((LF-PARENT ONT::render-ineffective)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he broke the browser")
     )
    ((LF-PARENT ont::render-ineffective)
     (meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2 :vn ("break-45.1") :wn ("break%2:29:04" "break%2:30:00" "break%2:30:10" "break%2:30:15" "break%2:35:00" "break%2:38:11" "break%2:41:08"))
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     (example "it broke the browser")
     )
    ((LF-PARENT ONT::stop)
     (example "Break contact") ;;military usage
     (templ cause-effect-xp-templ)
     (meta-data :origin calo-ontology :entry-date 20050831 :change-date nil :comments Break-contact)
     (preference 0.92)
     )
    )
   )
  (W::tear
   (wordfeats (W::morph (:forms (-vb) :past W::tore :pastpart W::torn :ing W::tearing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("tear%2:35:00" "tear%2:35:01"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break,crack,fracture,rip,shatter,chip,splinter,snap
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("tear%2:38:00"))
     (LF-PARENT ONT::move-rapidly)
     (example "he tore through the streets")
     (TEMPL agent-templ) ; like stroll,walk
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil :vn ("break-45.1") :wn ("tear%2:35:00" "tear%2:35:01"))
     (example "the shirt tore")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     )
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil :vn ("break-45.1") :wn ("tear%2:35:00" "tear%2:35:01"))
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he tore the paper")
     )
    ((LF-PARENT ont::break-object)
     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     (example "it tore the paper")
     )
    )
   )
  (W::impair
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin calo-ontology :entry-date 20051209 :change-date nil :comments Impair)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he impaired the process")
     )
    ((LF-PARENT ont::break-object)
     (meta-data :origin calo-ontology :entry-date 20051209 :change-date nil :comments Impair)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     (example "it impaired the process")
     )
    )
   )
  (W::damage
   (SENSES
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin task-learning :entry-date 20050823 :change-date nil :comments nil)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he damaged the computer")
     )
    ((LF-PARENT ont::break-object)
     (meta-data :origin task-learning :entry-date 20050823 :change-date nil :comments nil)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     (example "it damaged the computer")
     )
    )
   )
  (W::corrupt
   (SENSES
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he corrupted the file")
     )
    ((LF-PARENT ont::break-object)
     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
     (SEM (F::Cause F::Phenomenal) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     (example "it corrupted the file")
     )
    )
   )
  (W::travel
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("travel%2:38:00" "travel%2:38:02"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     (PREFERENCE 0.96)
     )
    ((meta-data :origin general :entry-date 20110127 :change-date nil :comments jansen :vn ("run-51.3.2") :wn ("travel%2:38:00" "travel%2:38:02"))
     (LF-PARENT ONT::self-locomote)
     (example "he travelled the route")
     (TEMPL agent-path-templ) ; like stroll,walk
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::MOVE)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::Extended))
     (TEMPL THEME-TEMPL)
     (example "the truck travelled to Avon")
     (PREFERENCE 0.95) ;; prefer agent interpretation
     )
    )
   )

  (w::pan
   (senses
    ((LF-PARENT ONT::pan)
     (meta-data :origin lou :entry-date 20040319 :change-date nil :comments lou-sent-entry)
     (example "pan the camera up a little")
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
     ((LF-PARENT ONT::pan)
     (meta-data :origin lou :entry-date 20041027 :change-date nil :comments lou-sent-entry)
     (example "pan up a little")
     (templ agent-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
   (w::tilt
   (senses
    ((LF-PARENT ONT::lean)
     (meta-data :origin lou :entry-date 20041111 :change-date nil :comments lou-sent-entry)
     (example "tilt the camera up a little")
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
     ((LF-PARENT ONT::lean)
     (meta-data :origin lou :entry-date 20041111 :change-date nil :comments lou-sent-entry)
     (example "tilt up a little")
     (templ agent-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::HEAD
   (SENSES
    ;;;; The truck/I head to Avon
    ((LF-PARENT ONT::MOVE-toward)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::approach
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("escape-51.1-2"))
     (LF-PARENT ONT::move-toward)
     (TEMPL theme-templ) ; like go,fall
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::MOVE-toward)
     (meta-data :origin ralf :entry-date 20040621 :change-date nil :comments ralf.txt)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "the truck/I approached rochester")
     (TEMPL THEME-GOAL-TEMPL)
     )
    )
   )
  (W::near
   (SENSES
    ((LF-PARENT ONT::MOVE-toward)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "the truck/I neared the corner")
     (TEMPL THEME-GOAL-TEMPL)
     )
    )
   )
  (W::shoot
   (wordfeats (W::morph (:forms (-vb) :ing W::shooting :past W::shot)))
   (SENSES
    ((meta-data :origin monroe :entry-date 20031219 :change-date nil :comments s14)
     (LF-PARENT ONT::MOVE-quickly)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     (example "the truck shot over to beahan")
     )
    )
   )
  
  (W::LOOP
   (SENSES
    ;;;; Loop up to avon
    ((LF-PARENT ONT::circular-move)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::DRIVE
   (wordfeats (W::morph (:forms (-vb) :past W::drove :pastpart W::driven)))
   (SENSES
    ;;;; Drive the cargo to Avon
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("drive-11.5") :wn ("drive%2:38:02"))
     (LF-PARENT ONT::DRIVE)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ;;;; Drive to Avon
    ((LF-PARENT ONT::DRIVE)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    ;;;; the truck drives the cargo to Avon
    ((LF-PARENT ONT::DRIVE)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     (PREFERENCE 0.98)
     )
    ((meta-data :origin mobius :entry-date 20070728 :change-date nil :comments engines)
     (LF-PARENT ONT::cause-to-move)
     (templ cause-theme-xp-templ)
     )
    )
   )
  (W::bike
   (SENSES
    ((LF-PARENT ONT::bike)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     (example "he biked across town")
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     )
    )
   )

   (W::ride
   (wordfeats (W::morph (:forms (-vb) :past W::rode :pastpart W::ridden :nom w::ride)))
   (SENSES
    ((LF-PARENT ONT::RIDE)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (templ agent-theme-xp-templ)
     )
    )
   )
  (W::PARK
   (SENSES
    ((EXAMPLE "He parked the truck")
     (LF-PARENT ONT::STOP-MOVE)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((EXAMPLE "the truck parked")
     (LF-PARENT ONT::STOP-MOVE)
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::land
    (wordfeats (W::morph (:forms (-vb) :nom w::landing)))
   (SENSES
    ;;;; ;; Land the helicopter at Strong
    ((LF-PARENT ONT::FLY)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ;;;; the helicopter landed
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("pocket-9.10-1"))
     (LF-PARENT ONT::ARRIVE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::walk
    (wordfeats (W::morph (:forms (-vb) :nom W::walk)))
   (SENSES
    ;;;; Walk to Avon
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("?walk%2:38:02" "walk%2:38:00" "walk%2:38:01" "walk%2:38:03" "walk%2:38:05"))
     (LF-PARENT ONT::SELF-LOCOMOTE)
     (TEMPL AGENT-TEMPL)
     )
     ((meta-data :origin chf :entry-date 20070904 :change-date nil :comments nil :vn nil :wn nil)
     (LF-PARENT ONT::WALKING)
     (example "walk the dog")
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
     ((meta-data :origin general :entry-date 20110127 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("travel%2:38:00" "travel%2:38:02"))
     (LF-PARENT ONT::self-locomote)
     (example "walk the line")
     (TEMPL agent-path-templ) ; like stroll,walk
     (PREFERENCE 0.96)
     )
    )
   )
 
   (W::smoke
   (SENSES
    ((LF-PARENT ONT::Smoking)
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     (example "does the hotel allow smoking")
     (TEMPL AGENT-TEMPL)
     )
    ((LF-PARENT ONT::Smoking)
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     (example "he smoked a cigarette") ; insufficiently restricted
     (TEMPL AGENT-affected-xp-TEMPL)
     )
    )
   )
  (W::stroll
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("stroll%2:38:00" "stroll%2:38:01"))
     (LF-PARENT ONT::SELF-LOCOMOTE)
     (TEMPL AGENT-TEMPL)
     (example "walk to avon")
     )
    ((meta-data :origin general :entry-date 20110127 :change-date nil :comments jansen :vn ("run-51.3.2") :wn ("travel%2:38:00" "travel%2:38:02"))
     (LF-PARENT ONT::self-locomote)
     (example "he strolled the path")
     (TEMPL agent-path-templ) ; like stroll,walk
     (PREFERENCE 0.96)
     )
    )
   )

  (W::climb
   (SENSES
    ((meta-data :origin boudreaux :entry-date 20060414 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("climb%2:38:00" "climb%2:38:01"))
     (EXAMPLE "Climb out of the canyon")
     (LF-PARENT ONT::SELF-LOCOMOTE)
     (TEMPL AGENT-TEMPL)
     )
    ((meta-data :origin chf :entry-date 20070814 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("climb%2:38:00" "climb%2:38:01"))
     (EXAMPLE "Climb the stairs")
     (LF-PARENT ONT::SELF-LOCOMOTE)
      )
    )
   )
  (W::dance
   (SENSES
    ((LF-PARENT ONT::DANCE)
     (TEMPL AGENT-TEMPL)
     (example "dance to avon")
     )
    )
   )
  (W::fall
   (wordfeats (W::morph (:forms (-vb) :past W::fell :pastpart w::fallen :nom w::fall)))
   (SENSES
    ((meta-data :origin monroe :entry-date 20031219 :change-date nil :comments nil :vn ("escape-51.1-2"))
     (LF-PARENT ONT::fall)
     (TEMPL THEME-TEMPL)
     )
    ((meta-data :origin cardiac :entry-date 20080828 :change-date nil :comments nil)
     (lf-parent ont::become)
     (example "he fell asleep" "he fell ill") ;; overgenerates, e.g he fell awake
     (templ theme-pred-templ)
     )
    )
   )
   (W::tip
   (SENSES
    ((meta-data :origin joust :entry-date 20091027 :change-date nil :comments nil)
     (LF-PARENT ONT::fall)
     (example "I started to tip over")
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::trip
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090121 :change-date nil :comments nil)
     (LF-PARENT ONT::fall)
     (TEMPL THEME-TEMPL)
     (example "he tripped over his shoes")
     )
    )
   )

  ((W::go w::to w::sleep)
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ((LF-PARENT ONT::prepare-for-sleep)
     (meta-data :origin cardiac :entry-date 20080828 :change-date nil :comments nil)
     (TEMPL agent-templ)
     )
    ((LF-PARENT ONT::prepare-for-sleep)
     (meta-data :origin cardiac :entry-date 20080828 :change-date nil :comments nil)
     (TEMPL agent-pred-templ)
     (example "he went to sleep happy")
     )
    )
   )
   ((W::go w::to w::bed)
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ((LF-PARENT ONT::prepare-for-sleep)
     (meta-data :origin cardiac :entry-date 20080828 :change-date nil :comments nil)
     (TEMPL agent-templ)
     )
    ((LF-PARENT ONT::prepare-for-sleep)
     (meta-data :origin cardiac :entry-date 20080828 :change-date nil :comments nil)
     (TEMPL agent-pred-templ)
     (example "he went to bed hungry")
     )
    )
   )
   ((W::turn w::in)
   (wordfeats (W::morph (:forms (-vb) :3s w::turns :past W::turned)))
   (SENSES
    ((LF-PARENT ONT::prepare-for-sleep)
     (meta-data :origin cardiac :entry-date 20080828 :change-date nil :comments nil)
     (TEMPL agent-templ)
     )
    )
   )
   ((W::hit w::the w::hay)
   (wordfeats (W::morph (:forms (-vb) :3s W::hits :past W::hit)))
   (SENSES
    ((LF-PARENT ONT::prepare-for-sleep)
     (meta-data :origin cardiac :entry-date 20080828 :change-date nil :comments nil)
     (TEMPL agent-templ)
     )
    )
   )

    ((W::hit w::the w::sack)
   (wordfeats (W::morph (:forms (-vb) :3s W::hits :past W::hit)))
   (SENSES
    ((LF-PARENT ONT::prepare-for-sleep)
     (meta-data :origin cardiac :entry-date 20080828 :change-date nil :comments nil)
     (TEMPL agent-templ)
     )
    )
   )

   (w::retire
    (SENSES
    ((LF-PARENT ONT::prepare-for-sleep)
     (meta-data :origin cardiac :entry-date 20080828 :change-date nil :comments nil)
     (TEMPL agent-templ)
     (example "he usually retires early")
     )
    )
   )
  
  ((W::go w::back)
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ((LF-PARENT ONT::GO-BACK)
     (example "go back to avon")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-source-optional-templ (xp (% w::pp (w::ptype w::to))))
     )
    )
   )
  
  (W::return
   (wordfeats (W::morph (:forms (-vb) :nom W::return)))
   (SENSES
    ((LF-PARENT ONT::GO-BACK)
     (example "he returned from/to avon")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-templ)
     )
    ((LF-PARENT ONT::RETURN)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the truck/the cargo returned to/from Avon")
     (TEMPL theme-templ)
     (PREFERENCE 0.98)
     )
    ((LF-PARENT ONT::RETURN)
     (example "return him to the station")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::time-span F::atomic))
     (TEMPL agent-theme-xp-templ)
     )
    ((lf-parent ont::giving)
     (templ agent-theme-recipient-alternation-templ)
     (example "return more results")
     (meta-data :origin plow :entry-date 20060514 :change-date nil :comments pq)
    )
    )
   )
  (W::get
   (wordfeats (W::morph (:forms (-vb) :ing W::getting :past W::got :pastpart W::gotten)))
   (SENSES
    ((LF-PARENT ONT::ARRIVE)
     (example "the truck got to delta")
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (TEMPL THEME-TO-LOC-XP-TEMPL (xp (% W::PP (W::ptype W::to))))
     )
    ((EXAMPLE "Get the people/the truck to Delta")
     (LF-PARENT ONT::Deliver)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (TEMPL AGENT-THEME-TO-LOC-TEMPL (xp (% W::PP (W::ptype W::to))))
     )
    ;;;; swier -- get the oranges in the truck; get the oranges into the truck
    ((LF-PARENT ONT::placing)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin vn-analysis :entry-date unknown :change-date 20040617 :comments change-lf)
     (example "get the oranges into the truck")
     (TEMPL AGENT-THEME-TO-LOC-TEMPL (xp (% W::PP (W::ptype (? t W::into W::in)))))
     )
    ;;;; swier -- get the oranges off the truck.
;    ((LF-PARENT ONT::UNLOAD)
;     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
;     (TEMPL AGENT-THEME-SOURCE-TEMPL (xp (% W::PP (W::ptype W::off))))
;     )
;    ;;;; Let's get the truck going.  Have the can opened.
    ((LF-PARENT ONT::MAKE-IT-SO)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-affected-objcontrol-templ (xp (% W::VP (W::vform (? x W::ing w::passive)))))
     )
    ;;;; Get Jane to clean the yard
    ((LF-PARENT ONT::MAKE-IT-SO)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-affected-objcontrol-templ (xp (% W::cp (W::ctype W::s-to))))
     )
    ;;; this is lower to make "got the oranges from avon to delta" come up as deliver
    ;;; the real solution should be in forbidding to-loc modifier here, but we can't do it now
    ((lf-parent ont::acquire)
     (example "get the oranges from/at avon")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-SOURCE-templ (xp (% W::PP (W::ptype (? pt w::off W::at W::from)))))
     (PREFERENCE 0.97)
     )
    ((lf-parent ont::acquire)
     (example "get the book used")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-objcontrol-pred-templ)
     )
    ((LF-PARENT ONT::BECOME)
     (meta-data :origin medadvisor :entry-date 20020814 :change-date nil :comments nil)
     (example "he gets nauseous")
     (TEMPL THEME-PRED-TEMPL)
     )
    ((LF-PARENT ONT::come-to-UNDERSTAND)
     (example "I get it")
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (PREFERENCE 0.97)
     )
    ((LF-PARENT ONT::cause-make)
     (example "he got them confused")
     (meta-data :origin medadvisor :entry-date 20020814 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-objcontrol-pred-templ)
     )
    ((LF-PARENT ONT::acquire)
     (example "he got the tapes")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((LF-PARENT ONT::acquire)
     (example "get me a computer")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo :entry-date 20040401 :change-date nil :comments y1-dialog-variations :vn ("get-13.5.1-1"))
     (TEMPL AGENT-THEME-RECIPIENT-alternation-TEMPL)
     )
    ((LF-PARENT ONT::avoiding)
     (example "get around the problem")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo :entry-date 20041201 :change-date nil :comments caloy2)
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::around))))
     )
    ((LF-PARENT ONT::PASSIVE)
     (example "abrams got hired by brown")
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil :wn nil)
     (TEMPL PASSIVE-TEMPL)
     )
    )
   )
  (w::acquire
   (SENSES
    ((lf-parent ont::acquire)
     (example "acquire the product (from them)")
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil :vn ("obtain-13.5.2-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-SOURCE-optional-templ (xp (% W::PP (W::ptype W::from))))
     )
    )
   )
  (w::recover
   (wordfeats (W::morph (:forms (-vb) :ing w::recovering :past W::recovered :nom w::recovery)))
   (SENSES
    ((lf-parent ont::acquire)
     (example "recover an accidentally deleted slide")
     (meta-data :origin task-learning :entry-date 20050831 :change-date nil :comments nil :vn ("obtain-13.5.2") :wn ("recover%2:40:00"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-SOURCE-templ (xp (% W::PP (W::ptype W::from))))
     )
    )
   )

  (w::become
   (wordfeats (W::morph (:forms (-vb) :ing W::becoming :past W::became :pastpart W::become)))
   (senses
    ((meta-data :origin monroe :entry-date 20031217 :change-date nil :comments s15)
     (lf-parent ont::become)
     (example "the weather became dangerous")
     (templ theme-pred-templ)
     )
     ((meta-data :origin csli-ts :entry-date 20070321 :change-date nil :comments nil)
     (lf-parent ont::become)
     (example "the snow became rain")
     (templ theme-co-theme-xp-templ)
     )
    )
   )

  
  (w::grow
   (wordfeats (W::morph (:forms (-vb) :ing W::growing :past W::grew :pastpart w::grown)))
   (senses
    ((meta-data :origin calo-ontology :entry-date 20060214 :change-date nil :comments nil)
     (lf-parent ont::become)
     (example "he grew restless")
     (templ theme-pred-templ)
     )
    ((meta-data :origin calo-ontology :entry-date 20060214 :change-date nil :comments nil :vn ("grow-26.2") :wn ("grow%2:30:01" "grow%2:30:02" "grow%2:30:04" "grow%2:30:10" "grow%2:36:00"))
     (lf-parent ont::grow)
     (example "the grass grew")
     (templ theme-templ)
     )
    ((meta-data :origin calo-ontology :entry-date 20060214 :change-date nil :comments nil)
     (lf-parent ont::grow)
     (example "he grew vegetables in his garden")
     (templ agent-theme-xp-templ)
     )
    )
   )
  (W::book
   (senses
    ((lf-parent ont::reserve)
     (templ agent-theme-for-recipient-optional-templ)
     (example "please book a room for me")
     (meta-data :origin calo-ontology :entry-date 20051214 :change-date nil :comments nil :vn ("get-13.5.1") :wn ("book%2:41:01"))
     )
    ((lf-parent ont::reserve)
     (templ agent-recipient-theme-templ)
     (example "please book me a room for the conference")
     (meta-data :origin calo-ontology :entry-date 20060120 :change-date nil :comments nil)
     )
    )
   )
   (W::reserve
   (senses
    ((lf-parent ont::reserve)
     (templ agent-theme-for-recipient-optional-templ)
     (example "please reserve a room for me")
     (meta-data :origin calo-ontology :entry-date 20051214 :change-date nil :comments nil :vn ("get-13.5.1") :wn ("reserve%2:32:00" "reserve%2:41:00"))
     )
    ((lf-parent ont::reserve)
     (templ agent-recipient-theme-templ)
     (example "please reserve me a room for the conference")
     (meta-data :origin calo-ontology :entry-date 20060120 :change-date nil :comments nil :vn ("get-13.5.1") :wn ("reserve%2:32:00" "reserve%2:41:00"))
     )
    )
   )
   ((W::hold w::out)
    (wordfeats (W::morph (:forms (-vb) :past W::held)))
    (senses
     ((lf-parent ont::refuse)
      (templ cause-affected-xp-templ)
      (example "he held out the data")
      (meta-data :origin calo-ontology :entry-date 20060125 :change-date nil :comments caloy3)
      )
     )
    )
   ((W::hold w::back)
    (wordfeats (W::morph (:forms (-vb) :past W::held)))
    (senses
     ((lf-parent ont::refuse)
      (templ cause-affected-xp-templ)
      (example "he held back his tears")
      (meta-data :origin calo-ontology :entry-date 20060125 :change-date nil :comments caloy3)
      )
     )
    )
   (W::withhold
    (wordfeats (W::morph (:forms (-vb) :ing W::withholding :past W::withheld)))
   (senses
    ((lf-parent ont::refuse)
     (templ cause-affected-xp-templ)
     (example "he withheld evidence at the trial")
     (meta-data :origin calo-ontology :entry-date 20060125 :change-date nil :comments caloy3)
     )
    )
   )
   (W::refuse
   (senses
    ((lf-parent ont::refuse)
     (templ cause-affected-optional-templ)
     (example "he refused the package")
     (meta-data :origin calo-ontology :entry-date 20060125 :change-date nil :comments caloy3)
     )      
    ((lf-parent ont::refuse)
      (TEMPL cause-effect-subjcontrol-templ (xp (% W::cp (W::ctype W::s-to))))
     (example "he refused to accept the charges")
     (meta-data :origin calo-ontology :entry-date 20060125 :change-date nil :comments caloy3)
     )  
    )
  )
   (W::deny
    (wordfeats (W::morph (:forms (-vb) :nom W::denial)))
   (senses
    ((lf-parent ont::refuse)
     (templ cause-affected-xp-templ)
     (example "he denied the charges")
     (meta-data :origin calo-ontology :entry-date 20060125 :change-date nil :comments caloy3)
     )
    (;;(lf-parent ont::contest)
     (lf-parent ont::contest-deny-oppose-protest) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-that)))))
     (example "he denied that he was in town the night of the murder")
     (meta-data :origin calo-ontology :entry-date 20060125 :change-date 20090508 :comments caloy3)
     )
    )
   )
  (W::obtain
   (senses
    ((LF-PARENT ONT::acquire)
     (meta-data :origin calo :entry-date 20031206 :change-date nil :comments calo-y1script)
     (example "I have been unable to obtain authorization")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
  
(W::extract
   (wordfeats (W::morph (:forms (-vb) :nom W::extraction)))
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090527 :comments nil :vn ("remove-10.1") :wn ("extract%2:30:00" "extract%2:31:00" "extract%2:35:04" "extract%2:35:05" "extract%2:35:07" "extract%2:40:00"))
     (LF-PARENT ONT::cause-out-of)
     (TEMPL agent-theme-source-optional-templ)
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::appropriate)
     (meta-data :origin plow :entry-date 20050901 :change-date 20090430 :comments nil)
     (example "you extract information about the book")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like eliminate
     )
    )
   )
  
  (W::incur
   (wordfeats (W::morph (:forms (-vb) :ing W::incurring :past W::incurred :nom w::incursion)))
   (senses
    (;;(LF-PARENT ONT::acquire)
     (lf-parent ont::incur-inherit-receive) ;; 20120524 GUM change new parent
     (meta-data :origin calo :entry-date 20050425 :change-date nil :comments projector-purchasing)
     (example "a cost usually incurred with projectors")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
 (W::gotta
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pastpart))
    (SENSES
    ;;;; The necessitiy sense is only typical of the perfective
    ;;;; "He gets to go" means he's allowed -- how can we do this?
    ((LF-PARENT ONT::NECESSITY)
     (meta-data :origin caet :entry-date 20120118 :change-date nil :comments nil)
     (example "he's gotta go")
     (SEM (F::Aspect F::Indiv-level) (f::Time-span f::extended)) ;; don't allow temporal mods on the higher verb (need)
     (TEMPL affected-effect-SUBJCONTROL-BASE-TEMPL)
     )
    )
   )
  (W::got
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pastpart))
   (SENSES
    ;;;; we've got three trucks
    ((LF-PARENT ONT::HAVE)
     (TEMPL affected-THEME-XP-TEMPL)
     )
;    ((lf-parent ont::have)
;     (example "We've got lines down at pittsford" "we've got a book ready for you")
;     (TEMPL affected-theme-property-pred-templ)
;     )
    ;;;; we've got a problem
;    ((LF-PARENT ONT::HAVE-property)
;     (TEMPL affected-PROPERTY-TEMPL)
;     (PREFERENCE 0.99)
;     )
    ((LF-PARENT ONT::have-experience)
     (TEMPL affected-theme-xp-TEMPL)
     (example "he's got a headache")
     (meta-data :origin cardiac :entry-date 20080217 :change-date nil :comments nil)
     )
; 12/2010 jfa wants to conflate this with ont::have-experience
;    ((LF-PARENT ONT::participating)
;     (TEMPL affected-theme-xp-TEMPL)
;     (example "he's got a meeting")
;     (meta-data :origin cardiac :entry-date 20080217 :change-date nil :comments nil)
;     )
    ;;;; The necessitiy sense is only typical of the perfective
    ;;;; "He gets to go" means he's allowed -- how can we do this?
    ((LF-PARENT ONT::NECESSITY)
     (example "he's got to go")
     (SEM (F::Aspect F::Indiv-level) (f::Time-span f::extended)) ;; don't allow temporal mods on the higher verb (need)
     (TEMPL affected-effect-SUBJCONTROL-TEMPL)
     )
    )
   )
   ((W::get (W::up))
   (wordfeats (W::morph (:forms (-vb) :ing W::getting :past W::got :pastpart W::gotten)))
   (SENSES
    ((EXAMPLE "I don't like getting up in the middle of the night")
     (meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
     ;;(LF-PARENT ONT::BODY-MOVEMENT)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL THEME-TEMPL)
     )
    ((EXAMPLE "he got him up")
     (meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
     ;;(LF-PARENT ONT::BODY-MOVEMENT)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL cause-THEME-xp-TEMPL)
     )
    )
   )
  ((W::get (W::off))
   (wordfeats (W::morph (:forms (-vb) :ing W::getting :past W::got :pastpart W::gotten)))
   (SENSES
    ;;;; get the people off
    ;;;; prefer 'obtain' sense without a directional
    ((EXAMPLE "we can get more people off quickly")
     (LF-PARENT ONT::cause-off)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic) (F::trajectory +))
     )
    )
   )
  ((W::get (W::away))
   (wordfeats (W::morph (:forms (-vb) :ing W::getting :past W::got :pastpart W::gotten)))
   (SENSES
    ;;;; prefer 'obtain' sense without a directional
    ((EXAMPLE "we can get more people away quickly")
     (LF-PARENT ONT::depart)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic) (F::trajectory +))
     )
    ((EXAMPLE "the robber escaped")
     (LF-PARENT ONT::depart)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic) (F::trajectory +))
     (templ agent-templ)
     (meta-data :origin "wordnet-3.0" :entry-date 20090608 :change-date nil :comments nil)
     )
    )
   )
  (W::authorize
   (wordfeats (W::morph (:forms (-vb) :nom W::authorization)))
   (SENSES
    ((EXAMPLE "Authorize him to move")
     (LF-PARENT ONT::ALLOW)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-affected-objcontrol-templ (xp (% W::cp (W::ctype W::s-to))))
     (meta-data :origin boudreaux :entry-date 20031024)
     )
    ((EXAMPLE "Authorize the purchase" "authorize the budget")
     (LF-PARENT ONT::allow)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-xp-templ)
     (meta-data :origin calo :entry-date 20031206 :change-date nil :comments calo-y1script)
     )
    )
   )
  (W::reauthorize
   (wordfeats (W::morph (:forms (-vb) :nom W::reauthorization)))
   (SENSES
    ((EXAMPLE "reauthorize him to move")
     (LF-PARENT ONT::ALLOW)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-affected-objcontrol-templ (xp (% W::cp (W::ctype W::s-to))))
     (meta-data :origin task-learning :entry-date 20050909 :change-date nil :comments nil)
     )
    ((EXAMPLE "reauthorize the purchase")
     (LF-PARENT ONT::allow)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (TEMPL cause-effect-xp-templ)
     (meta-data :origin task-learning :entry-date 20050909 :change-date nil :comments nil)
     )
    )
   )
  (W::approve
   (wordfeats (W::morph (:forms (-vb))))
   (SENSES
    ((EXAMPLE "approve the purchase")
     (LF-PARENT ONT::allow)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-xp-templ)
     (meta-data :origin calo :entry-date 20040220 :change-date nil :comments calo-y1script)
     )
    ((EXAMPLE "he approves of the purchase")
     (LF-PARENT ONT::praise)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-theme-xp-templ (xp (% w::pp (w::ptype w::of))))
     (meta-data :origin calo :entry-date 20040220 :change-date 20090508 :comments calo-y1script)
     )
    )
   )

(w::configure
   (wordfeats (W::morph (:forms (-vb) :nom w::configuration)))
 (senses
  ((lf-parent ont::set-up-device)
   (example "configure the system")
   (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
   (TEMPL agent-theme-xp-templ)
   (meta-data :origin calo :entry-date 20040414 :change-date 20090504 :comments calo-y1v4)
   )
  )
 )
((w::put (w::in))
   (wordfeats (W::morph (:forms (-vb) :past W::put)))
 (senses
  ((lf-parent ont::set-up-device)
   (example "put in the phone lines")
   (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
   (TEMPL agent-theme-xp-templ)
   (preference .97) ; prefer in as adverbial
   (meta-data :origin calo-ontology :entry-date 20060124 :change-date 20090504 :comments caloy3)
   )
  )
 )
(w::install
   (wordfeats (W::morph (:forms (-vb) :nom w::installation)))
 (senses
  ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("put-9.1-1"))
   (LF-PARENT ONT::put-away)
   (TEMPL agent-theme-xp-templ) ; like stow
     (PREFERENCE 0.96)
   )
  ((lf-parent ont::set-up-device)
   (example "install the system")
   (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
   (TEMPL agent-theme-xp-templ)
   (meta-data :origin calo :entry-date 20041122 :change-date 20090504 :comments caloy2)
   )
  )
 )
(w::reinstall
 (senses
  ((lf-parent ont::set-up-device)
   (example "reinstall the system")
   (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
   (TEMPL agent-theme-xp-templ)
   (meta-data :origin task-learning :entry-date 20050912 :change-date 20090504 :comments nil)
   )
  )
 )
((w::set (w::up))
 (wordfeats (W::morph (:forms (-vb) :past W::set :ing W::setting)))
 (senses
  ((lf-parent ont::set-up-device)
   (example "set up the system")
   (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
   (TEMPL agent-theme-xp-templ)
   (meta-data :origin calo :entry-date 20041206 :change-date 20090504 :comments caloy2)
   )
  )
 )

((w::slow (w::down))
 (senses
  ((meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2)
   (LF-PARENT ONT::adjust)
   (example "that application will slow you down")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
(w::fluctuate
   (wordfeats (W::morph (:forms (-vb) :nom w::fluctuation)))
 (senses
  ((meta-data :origin plow :entry-date 20060802 :change-date 20090504 :comments weather)
   (LF-PARENT ONT::fluctuate)
   (example "fluctuation in the atmospheric pressure")
   )
  ((meta-data :origin step :entry-date 20080603 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::fluctuate)
   (example "research and development fluctuated (with the budget)")
   (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
   )
  )
 )
(w::plump
 (senses
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::increase)
   (example "plump the pillows")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )
((w::plump (w::up))
 (senses
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::increase)
   (example "plump up the pillows")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )

(w::boost
   (wordfeats (W::morph (:forms (-vb) :nom w::boost)))
 (senses
  ;; need the agent templ for the imperative
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::increase)
   (example "boost the dose [to 3K]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  ((meta-data :origin cardiac :entry-date 20081223 :change-date 20090504 :comments LM-vocab)
   (LF-PARENT ONT::increase)
   (example "it boosted the pressure")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-XP-TEMPL)
   )
  ((meta-data :origin cardiac :entry-date 20081223 :change-date 20090504 :comments LM-vocab)
   (LF-PARENT ONT::increase)
   (example "it boosted the pressure to 32 lbs per ")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-RESULT-TEMPL (xp (% W::PP (W::ptype W::to))))
   (preference .98) ;; try agentive first
   )
  )
 )

 ((W::go w::up)
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ((lf-parent ont::increase)
     (example "his weight went up")
     (TEMPL THEME-TEMPL)
     (meta-data :origin cardiac :entry-date 20090226 :change-date 20090504 :comments nil))
    ))

 ((W::go w::down)
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ((lf-parent ont::decrease)
     (example "his weight went down")
     (TEMPL THEME-TEMPL)
     (meta-data :origin cardiac :entry-date 20090226 :change-date 20090504 :comments nil))
    ))


(w::increase
 (wordfeats (W::morph (:forms (-vb) :nom w::increase)))
 (senses
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::increase)
   (example "increase the budget [to 3K]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  ((meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::increase)
   (example "it increased in temperature")
   (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
   )
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::increase)
   (example "it increased the pressure")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-XP-TEMPL)
   )
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::increase)
   (example "it increased the pressure to 32 lbs per ")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-RESULT-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
(w::fatten
 (senses
  ((meta-data :origin cardiac :entry-date 20090130 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::swell)
   (example "fatten the budget [to 3K]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::swell)
   (example "it fattened the budget")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-XP-TEMPL)
   )
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::swell)
   (example "it fattened the budget to 32 lbs ")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-RESULT-TEMPL (xp (% W::PP (W::ptype (? pt W::to w::by)))))
   )
  )
 )
(w::resize
 (senses
  ((meta-data :origin task-learning :entry-date 20050815 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::change-magnitude)
   (example "resize and position the image")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
((w::scale (w::down))
 (senses
  ((meta-data :origin task-learning :entry-date 20050829 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::decrease)
   (example "scale down the image resolution")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
(w::minimize
  (wordfeats (W::morph (:forms (-vb) :nom w::minimum)))
 (senses
  ((meta-data :origin task-learning :entry-date 20050825 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::minimize)
   (example "minimize the window")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )
(w::enlarge
  (wordfeats (W::morph (:forms (-vb) :nom w::enlargement)))
 (senses
  ((meta-data :origin task-learning :entry-date 20050826 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::increase)
   (example "enlarge the image (to full screen)")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))));??
   )
  )
 )
(w::align
  (wordfeats (W::morph (:forms (-vb) :nom w::alignment)))
 (senses
  ((meta-data :origin task-learning :entry-date 20050815 :change-date 20090507 :comments nil)
   (LF-PARENT ONT::arranging)
   (example "align text within a text box")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
(w::justify
 (senses
  ((meta-data :origin task-learning :entry-date 20050824 :change-date nil :comments nil)
   (LF-PARENT ONT::arrange-text)
   (example "justify text within a text box")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
(w::import
 (senses
  ((meta-data :origin task-learning :entry-date 20050815 :change-date nil :comments nil)
  (LF-PARENT ONT::transport)
  (example "import the docuemnt")
  )))
(w::export
  (wordfeats (W::morph (:forms (-vb) :nom w::export)))
 (senses
  ((meta-data :origin task-learning :entry-date 20050815 :change-date nil :comments nil)
  (LF-PARENT ONT::transport)
  (example "export the docuemnt")
  )))
(w::compress
  (wordfeats (W::morph (:forms (-vb) :nom w::compression)))
 (senses
  ((meta-data :origin calo :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::adjust)
   (example "compress the data")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
    )
  ((meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)
   (LF-PARENT ONT::adjust)
   (example "it compressed in size")
   (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in)))))
   )
  )
 )
(w::deepen
 (senses
  ((meta-data :origin task-learning :entry-date 20050909 :change-date nil :comments nil)
   (LF-PARENT ONT::adjust)
   (example "deepen the indent (to 5 cm)")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))));??
   )
  )
 )
((w::max (w::out))
 (senses
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::maximize)
   (example "max out the budget")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )

(w::maximize
  (wordfeats (W::morph (:forms (-vb) :nom w::maximum)))
 (senses
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::maximize)
   (example "maximize the similarities")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )
(w::double
 (senses
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::increase)
   (example "double the budget [to 3K]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  ((meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::increase)
   (example "it doubled in size")
   (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
   )
  )
 )
(w::downgrade
 (senses
   ((meta-data :origin calo :entry-date 20040408 :change-date 20090504 :comments calo-y1v4)
    (example "downgrade the clock speed [to 2.0 ghz]")
   (LF-PARENT ONT::decrease)
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
(w::upgrade
 (senses
   ((meta-data :origin calo :entry-date 20040408 :change-date 20090504 :comments calo-y1v4)
   (LF-PARENT ONT::device-adjust)
   (example "upgrade the clock speed [to 2.5 ghz]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
   ((LF-PARENT ONT::device-adjust)
    (example "you can upgrade your computer")
    (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
    (meta-data :origin calo :entry-date 20041122 :change-date 20090504 :comments caloy2)
    )
   ))
(w::convert
  (wordfeats (W::morph (:forms (-vb) :nom W::conversion)))
 (senses
   ((meta-data :origin task-learning :entry-date 20050825 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::change-format)
   (example "convert the email to rtf")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? pt w::into W::to)))))
   )
   ))
(w::translate
  (wordfeats (W::morph (:forms (-vb) :nom W::translation)))
 (senses
   ((meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
   (LF-PARENT ONT::change-format)
   (example "translate the code to java")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? pt w::into W::to)))))
   )
   ))

(w::decrease
  (wordfeats (W::morph (:forms (-vb) :nom W::decrease)))
 (senses
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::decrease)
   (example "decrease the clock speed [to 1Ghz]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  ((meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::decrease)
   (example "it decreased in temperature")
   (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
   )
  ((meta-data :origin step :entry-date 20080729 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::decrease)
   (example "it increased the pressure")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-XP-TEMPL)
   )
  ((meta-data :origin step :entry-date 20080729 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::decrease)
   (example "it decreased the pressure to 32 lbs per ")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-RESULT-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
(w::worsen
 (wordfeats (W::morph (:forms (-vb) :ing w::worsening :past W::worsened)))
 (senses
   ((meta-data :origin cardiac :entry-date 20070809 :change-date 20090504 :comments nil)
    (LF-PARENT ONT::deteriorate)
    (example "have your symptoms worsened")
    (templ theme-templ)
   )
   ((meta-data :origin cardiac :entry-date 20081223 :change-date 20090504 :comments LM-vocab)
   (LF-PARENT ONT::deteriorate)
   (example "the medication worsened his condition")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-XP-TEMPL)
   )
  )
 )
(w::degrade
 (senses
  ((meta-data :origin cardiac :entry-date 20081223 :change-date 20090504 :comments LM-vocab)
   (LF-PARENT ONT::deteriorate)
   (example "has his condition degraded")
   (templ theme-templ)
   )
  ((meta-data :origin cardiac :entry-date 20081223 :change-date 20090504 :comments LM-vocab)
   (LF-PARENT ONT::deteriorate)
   (example "it degraded the result")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-XP-TEMPL)
   )
  ((meta-data :origin cardiac :entry-date 20081223 :change-date 20090504 :comments LM-vocab)
   (LF-PARENT ONT::deteriorate)
   (example "it degraded the pressure to 32 lbs per ")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL CAUSE-THEME-RESULT-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
(w::size
 (senses
  ((meta-data :origin calo :entry-date 20050425 :change-date 20090507 :comments projector-purchasing :wn ("size%2:30:00"))
   (LF-PARENT ONT::change-magnitude)
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )
(W::add
 (wordfeats (W::morph (:forms (-vb) :nom w::addition)))
 (SENSES
  ((LF-PARENT ont::add-include)
   (example "add a wireless card" "add the oranges")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
   (TEMPL cause-affected-xp-TEMPL)
   )
  ((LF-PARENT ont::add-include)
   (example "add a wireless card to the order" "add the oranges into the cart")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
   (TEMPL cause-affected-GOAL-TEMPL (xp (% W::PP (W::ptype (? pt W::to W::into w::on)))))
   )
  ((meta-data :origin calo :entry-date 20050324 :change-date 20090522 :comments caloy2)
   (LF-PARENT ONT::calc-add)
   (example "add five dollars to the price" "add 7 and 8" "add the numbers together")
   (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL cognizer-THEME-CO-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   (preference .98)
   )
  )
 )
(W::contribute
   (wordfeats (W::morph (:forms (-vb) :nom w::contribution)))
   (SENSES
    ((LF-PARENT ont::donate)
     (example "He contributed five dollars [to the donation]")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-TO-RECIPIENT-OPTIONAL-TEMPL)
     )
    )
   )
  (W::paste
   (SENSES
    ((LF-PARENT ONT::put)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin task-learning :entry-date 20050823 :change-date 20050824 :comments nil)
     (example "paste the graph into the document")
     )
    )
   )
   (W::coalesce
   (SENSES
    ((LF-PARENT ONT::coalesce)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     (meta-data :origin gloss-training :entry-date 20100217 :change-date nil :comments nil)
      )
     ((LF-PARENT ONT::coalesce)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::with))))
     (meta-data :origin gloss-training :entry-date 20100217 :change-date nil :comments nil)
      )
    )
   )

  (W::append
   (SENSES
    ((LF-PARENT ONT::combine-objects)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-CO-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
     (meta-data :origin task-learning :entry-date 20050823 :change-date nil :comments nil)
     (example "append the messages to this message")
     )
    )
   )

(w::subtract
 (senses
  ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090527 :comments nil :vn ("remove-10.1") :wn ("subtract%2:31:00"))
   (LF-PARENT ONT::cause-out-of)
   (TEMPL agent-theme-source-optional-templ)
   (example "subtract the wireless card [from the order]")
   (PREFERENCE 0.96)
   )
  ((meta-data :origin calo :entry-date 20050324 :change-date 20090522 :comments caloy2)
   (LF-PARENT ONT::calc-subtract)
   (example "subtract five dollars [from the price]" "subtract 5 [ from sin(x) ]")
   (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL cognizer-THEME-CO-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::from))))
   )
  ((meta-data :origin lam :entry-date 20050707 :change-date 20090522 :comments nil) 
   ;;seems to be valid only in a negative context
   (LF-PARENT ONT::calc-subtract)
   (TEMPL cognizer-TEMPL)
   (example "you are not subtracting")
   )
  )
 )

(w::deduct
 (senses
  ((meta-data :origin calo :entry-date 20050324 :change-date 20090522 :comments caloy2)
   (LF-PARENT ONT::calc-subtract)
   (example "deduct five dollars [from the price]")
   (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL cognizer-THEME-CO-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::from))))
   )
  )
 )

((w::knock (w::down))
 (senses
   ((meta-data :origin calo :entry-date 20041122 :change-date 20090504 :comments caloy2)
    (LF-PARENT ONT::decrease)
    (example "knock the price down [to five dollars]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )
((w::bump (w::up))
 (senses
   ((meta-data :origin calo :entry-date 20050323 :change-date 20090504 :comments caloy2)
    (LF-PARENT ONT::increase)
    (example "bump the price up [to five dollars]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  )
 )

(w::reduce
 (senses
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments calo-y1script)
   (LF-PARENT ONT::decrease)
   (example "reduce the clock speed [to 1ghz]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  ((meta-data :origin step :entry-date 20081031 :change-date 20090504 :comments step5)
   (LF-PARENT ONT::decrease)
   (example "this storage reduced the stability")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL cause-THEME-xp-TEMPL)
   )
  ((meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::decrease)
   (example "it reduced in speed")
   (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
   )
  )
 )
(w::lessen
 (senses
  ((meta-data :origin task-learning :entry-date 20050919 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::decrease)
   (example "lessen the indent")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  ((meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::decrease)
   (example "the pain will lessen in severity / with time")
   (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
   )
  )
 )

(w::extend
 (senses
  ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("future_having-13.3") :wn ("extend%2:40:05"))
   (LF-PARENT ONT::giving)
   (example "extend him an offer")
   (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     (PREFERENCE 0.96)
   )
  ((meta-data :origin calo :entry-date 20040112 :change-date 20090504 :comments html-processing-corpus)
   (LF-PARENT ONT::increase)
   (example "extend the deadline [to midnight]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
   )
  ((example "the changes extended the process")
   (sem (f::aspect f::dynamic))
   (templ cause-theme-xp-templ)
   (meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::increase)
   )
  ((example "the line extends here")
   (templ theme-templ)
   (meta-data :origin gloss :entry-date 20110330 :change-date nil :comments nil)
   (LF-PARENT ONT::span)
   )
  )
 )

  (W::permit
   (SENSES
    ((EXAMPLE "Permit him to go")
     (LF-PARENT ONT::ALLOW)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-affected-objcontrol-templ (xp (% W::cp (W::ctype W::s-to))))
     (meta-data :origin boudreaux :entry-date 20031024 :vn ("allow-64"))
     )
    ((example "the advances permitted greater flexibility")
     (sem (f::aspect f::dynamic))
     (templ cause-effect-xp-templ)
     (meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)
     (LF-PARENT ONT::allow)
     )
    )
   )

   (W::match
   (SENSES
    ((EXAMPLE "it doesn't match your specifications")
     (LF-PARENT ONT::object-compare)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (meta-data :origin calo :entry-date 20031206 :change-date nil :comments calo-y1script)
     )
    )
   )
 (W::balance
   (SENSES
    ((EXAMPLE "the cost doesn't balance the effort")
     (LF-PARENT ONT::object-compare)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (meta-data :origin calo :entry-date 20050425 :change-date nil :comments projector-purchasing)
     )
    )
   )
  (W::assign
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("future_having-13.3") :wn ("assign%2:40:01"))
     ;;  (meta-data :origin lou :entry-date 20040311 :change-date 20051208 :comments lou-sent-entry)
     ;; changed roles from theme-co-theme to use recipient
     (LF-PARENT ONT::assign)
     (example "assign him the problem")
     (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     (PREFERENCE 0.96)
     )
    )
   )
  (W::reassign
   (SENSES
    ((LF-PARENT ONT::assign)
     (example "reassign the task (to group a)")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     (meta-data :origin lou :entry-date 20040311 :change-date 20060120 :comments lou-sent-entry)
     )
    )
   )

  (W::delegate
   (SENSES
    ((EXAMPLE "delegate the task (to him)")
     (LF-PARENT ONT::ASSIGN)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     ;; this verb doesn't participate in the alternation
     (TEMPL agent-theme-to-recipient-optional-templ) 
     (meta-data :origin boudreaux :entry-date 20031024 :change-date 20060120 :comments "EVC 2.1")
     )
    )
   )
  (W::leave
   (wordfeats (W::morph (:forms (-vb) :past W::left)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("future_having-13.3") :wn ("leave%2:31:05" "leave%2:40:01" "leave%2:40:02"))
     (LF-PARENT ONT::donate)
     (example "leave him the truck")
     (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     (PREFERENCE 0.96)
     )
    ;;;; swier -- the truck will leave from Boston for Rochester
    ((LF-PARENT ONT::DEPART)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL GO-FROM-TO-TEMPL (xp1 (% W::PP (W::ptype W::from))) (xp2 (% W::PP (W::ptype W::for))))
     (preference .98)
     )
    ((LF-PARENT ONT::DEPART)
     (meta-data :origin asma :entry-date 20111004)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he left the house")   
     )
;    ((LF-PARENT ONT::DEPART)
;     (example "the truck left atlanta for rochester")
;     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
;     (TEMPL GO-FROM-TO-TEMPL (xp2 (% W::PP (W::ptype W::for))))
;     )
    ((LF-PARENT ONT::LEAVE-behind)
     (example "he left his dog at the house")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-theme-xp-templ)
     )    
    ((LF-PARENT ONT::LEAVE-TIME)
     (SEM (F::Aspect F::stage-level))
     (example "The solution leaves us 5 hours")
     (TEMPL THEME-AFFECTED-DURATION-TEMPL)
     )
    
    ((LF-PARENT ONT::LEAVE-TIME)
     (SEM (F::Aspect F::stage-level))
     (example "it leaves us 5 hours to complete the plan")
     (TEMPL THEME-AFFECTED-DURATION-EXPLETIVE-TEMPL)
     )
    ))
   
  (W::last
   (SENSES
    ((LF-PARENT ONT::take-time)
     (TEMPL THEME-DURATION-TEMPL)
     (example "the meeting lasted five hours")
     )
    ((LF-PARENT ONT::take-time)
     (TEMPL THEME-TEMPL)
     (example "land is the only thing that lasts")
     (SEM (F::Aspect F::stage-level))
     )
    ((LF-PARENT ONT::take-time)
     (example "the truck lasted him five years")
     (TEMPL THEME-affected-duration-TEMPL)
     )
    )
   )

  ((W::bring (w::in))
   (wordfeats (W::morph (:forms (-vb) :past W::brought)))
   (SENSES
    ((LF-PARENT ont::add-include)
     (meta-data :origin mobius :entry-date 200808026 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     (example "bring in the experts")
     )
    )
   )
  (W::bring
   (wordfeats (W::morph (:forms (-vb) :past W::brought)))
   (SENSES
    ;; note that here the goal is not a subcat but a spatial adverbial modifier
    ((LF-PARENT ONT::transport)
     (example "bring the cargo to avon")
     (meta-data :origin vn-analysis :entry-date unknown :change-date 20090529 :comments change-lf)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((LF-PARENT ONT::transport)
     (example "the truck brought the cargo to avon")
     (meta-data :origin vn-analysis :entry-date unknown :change-date 20090529 :comments change-lf)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )
    ((LF-PARENT ONT::adjust)
     (meta-data :origin step :entry-date 20080630 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL CAUSE-THEME-RESULT-TEMPL (xp (% W::PP (W::ptype W::to))))
     (example "airing the curtain brings the fumes to acceptable levels")
     )
    ((LF-PARENT ONT::cause-make)
     (meta-data :origin step :entry-date 20080630 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL CAUSE-EFFECT-XP-TEMPL (xp (% W::PP (W::ptype W::about))))
     (example "his consultations brought about his expertise")
     )
    )
   )
  (W::carry
   (SENSES
    ((LF-PARENT ONT::TRANSPORT)
     (example "carry the cargo to avon")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ((LF-PARENT ONT::TRANSPORT)
     (example "the truck carried the cargo to avon")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )
    )
   )
 
  (W::convey
   (wordfeats (W::morph (:forms (-vb))))
   (SENSES
    ((LF-PARENT ONT::transport)
     (example "convey the cargo to avon")
     (meta-data :origin calo-ontology :entry-date 20051209 :change-date 20090529 :comments Convey)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((LF-PARENT ONT::transport)
     (example "the truck conveyed the cargo to avon")
     (meta-data :origin calo-ontology :entry-date 20051209 :change-date 20090529 :comments Convey)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )    
   (;;(LF-PARENT ONT::announce)
    (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
     (example "please convey my greetings to him")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     (meta-data :origin calo-ontology :entry-date 20051209 :change-date 20090506 :comments Convey)
     )
    )
   )

  (W::shuttle
   (SENSES
    ;; note that here the goal is not a subcat but a spatial adverbial modifier
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::TRANSPORT)
     (example "shuttle the cargo to avon")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::TRANSPORT)
     (example "the truck shuttled the cargo to avon")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )
    )
   )
  ((W::send (W::off))
   (wordfeats (W::morph (:forms (-vb) :past W::sent)))
   (SENSES
    ((LF-PARENT ONT::SEND)
     (example "send the cargo off to avon")
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     )
    )
   )
  (W::send
   (wordfeats (W::morph (:forms (-vb) :past W::sent)))
   (SENSES
    ((lf-parent ont::send)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (templ agent-theme-recipient-alternation-templ)
     (example "send him the letter " "send the letter to him")
     (meta-data :origin plow :entry-date 20051004 :change-date nil :comments nil :vn ("send-11.1-1"))
     )
    )
   )
  (W::broadcast
   (wordfeats (W::morph (:forms (-vb) :pastpart w::broadcast)))
   (SENSES
    ((LF-PARENT ONT::SEND)
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil)
     (example "broadcast the website to the network")
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     )
    )
   )
  (W::forward
   (SENSES
    ((LF-PARENT ONT::SEND)
     (example "forward the email to him" "forward him the email")
     (templ agent-theme-recipient-alternation-templ)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050819 :change-date nil :comments nil :vn ("send-11.1-1"))
     )
    )
   )
  (W::transmit
    (wordfeats (W::morph (:forms (-vb) :nom W::transmission)))
   (SENSES
    ((LF-PARENT ONT::SEND)
     (example "transmit the image to him" "transmit him the image")
     (templ agent-theme-recipient-alternation-templ)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050830 :change-date nil :comments nil :vn ("send-11.1-1"))
     )
    )
   )
  (W::email
   (SENSES
    ((LF-PARENT ONT::SEND)
     (example "email the image to him" "email him the message")
     (templ agent-theme-recipient-alternation-templ)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050919 :change-date nil :comments nil)
     )
    )
   )
  (W::mail
   (SENSES
    ((LF-PARENT ONT::SEND)
     (example "mail the letter to him" "mail him the letter")
     (templ agent-theme-recipient-alternation-templ)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050930 :change-date nil :comments nil :vn ("send-11.1-1"))
     )
    )
   )

;  ((W::send W::a)
;   (SENSES
;    ;;;; send the truck to Avon
;    ;;; don't use unless there is no other way to do it
;    ((LF-PARENT ONT::SEND)
;     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
;     (PREFERENCE 0.9)
;     )
;    )
;   )

 (W::SPRAY
   (SENSES
    ;; what to do about he sprayed water on the lawn/he sprayed the lawn with water -- to be consistent
    ;; with load we have to subcat for the pp and treat lawn as a goal
    ((meta-data :origin vn-analysis :entry-date 20031223 :change-date 20040617 :comments add-sense :vn ("spray-9.7-1"))
     (lf-parent ont::filling)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (example "he sprayed water on the lawn")
     )
    ;; alternative considerations for roles here: co-theme-theme; actor-theme
    ((meta-data :origin monroe :entry-date 20031223 :change-date 20040617 :comments s7)
     (lf-parent ont::filling) ;; used to be ont::emit 
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (templ cause-theme-xp-templ)
     (example "the fire hydrant sprayed water")
     )
    ((meta-data :origin caet :entry-date 20110114 :change-date nil :comments nil)
     (lf-parent ont::filling)
     (templ theme-templ)
     (example "the water sprayed across the sidewalk")
     )
    )
   )

 (W::PAINT
   (SENSES
    ((meta-data :origin fruit-carts :entry-date 20041103 :change-date nil :comments nil)
     (lf-parent ont::coloring)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (example "paint the triangle")
     )
    ((meta-data :origin fruit-carts :entry-date 20041103 :change-date nil :comments nil)
     (lf-parent ont::coloring)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (example "paint the triangle red")
     (TEMPL agent-theme-result-optional-templ (xp (% w::ADJP  (w::set-modifier -))))
     )    
    )
   )
 (W::color
   (SENSES
    ((meta-data :origin fruit-carts :entry-date 20050331 :change-date nil :comments nil)
     (lf-parent ont::coloring)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (example "color the triangle")
     )
    ((meta-data :origin fruit-carts :entry-date 20050331 :change-date nil :comments nil)
     (lf-parent ont::coloring)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     (example "color the triangle red")
     (TEMPL agent-theme-result-optional-templ (xp (% w::ADJP  (w::set-modifier -))))
     )    
    )
   )
  (W::SHIP
   (wordfeats (W::morph (:forms (-vb) :nom w::shipment)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::TRANSPORT)
     (example "ship the cargo to Avon")
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     )
    )
   )
  (W::dispatch
   (SENSES   
    ((LF-PARENT ONT::SEND)
     (example "dispatch the truck/the cargo to Avon")
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     )
    )
   )
  (W::pull
   (SENSES
    ;;;; swier -- We can pull one more boxcar.
    ((LF-PARENT ONT::PULL)
     (SEM (F::cause F::agentive) (F::aspect F::unbounded) (F::time-span F::extended))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     )
    )
   )
  (W::push
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL)  ; like dare
     (example "he pushed him to do it")
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("funnel-9.3-2-1"))
     (LF-PARENT ONT::unload)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype (? t w::off w::from))))) ; like dump
     (example "he pushed it from the truck")
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::PUSH)
     (SEM (F::cause F::agentive) (F::aspect F::unbounded) (F::time-span F::extended))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     )
    )
   )
 (W::pop
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::POP)
     (SEM (F::cause F::agentive) (F::aspect F::bounded) (F::time-span F::atomic))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     )
    )
   )
  ((W::pull (W::out))
   (SENSES
    ((LF-PARENT ONT::pull-out-of)
     (LF-FORM W::pull-out)
     (SEM (F::cause F::agentive) (F::aspect F::bounded) (F::time-span F::extended))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::pp (W::ptype (? ptype W::of W::from)))))
     )
    ((LF-PARENT ONT::pull-out-of)
     (LF-FORM W::pull-out)
     (SEM (F::cause F::agentive) (F::aspect F::bounded) (F::time-span F::extended))
     (TEMPL THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::pp (W::ptype (? ptype W::of W::from)))))
     (example "The plug pulled out from the wall")
     )
    )
   )
  ((W::pull (W::off))
   (SENSES
    ((LF-PARENT ONT::pull-off)
     (LF-FORM W::pull-off)
     (SEM (F::cause F::agentive) (F::aspect F::bounded) (F::time-span F::extended))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::pp (W::ptype (? ptype W::of W::from)))))
     )
    )
   )
  (W::run
   (wordfeats (W::morph (:forms (-vb) :ing W::running :past W::ran :pastpart W::run)))
   (SENSES
    ;;;; swier -- missing sense "Let's run through the plan" Should get LF_REVIEW or something
    ;;;; swier -- also need "I-90 runs through Boston." LF_INTERSECT maybe?
    ;;;; swier -- also need "run into" which is certainly LF_INTERSECT.
    ;;;; swier -- added word (run through), below.
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("run%2:38:00" "run%2:38:04" "run%2:38:05" "run%2:38:10"))
     (LF-PARENT ONT::move-rapidly)
     (example "he runs in the park every day")
     (TEMPL AGENT-TEMPL)
     )
;    ;;;; I-90 runs by/through Rochester
;    ((LF-PARENT ONT::INTERSECT)
;     (TEMPL theme-co-theme-xp-templ (xp (% W::pp (W::ptype (? ptype W::by W::through)))))
;     )
    ((LF-PARENT ONT::FUNCTION)
     (example "a computer running at 2 point 4 ghz")
     (SEM (F::Aspect F::dynamic) (F::Time-span F::extended))
     (TEMPL theme-co-theme-xp-templ (xp (% W::pp (W::ptype W::at))))
     )
    ((LF-PARENT ONT::FUNCTION)
     (example "a computer running at 2 point 4 ghz")
     (TEMPL theme-templ)
     )
    ((LF-PARENT ONT::execute)
     (example "run the script")
     (templ cause-effect-xp-templ)
     (SEM (F::Aspect F::dynamic) (F::Time-span F::extended))
     )
    (;;(LF-PARENT ONT::managing)
     (lf-parent  ont::calm-manage-regulate-watch-handle-cover-takecare-run) ;; 20120521 GUM change new parent 
     (example "he runs the nursery")
     (meta-data :origin step :entry-date 20080721 :change-date nil :comments step6)
     (SEM (F::Aspect F::dynamic) (F::Time-span F::extended))
     )
    (;;(LF-PARENT ONT::managing)
     (lf-parent  ont::calm-manage-regulate-watch-handle-cover-takecare-run) ;; 20120521 GUM change new parent 
     (example "the piston runs the drive shaft")
     (templ cause-theme-xp-templ)
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil)
     (SEM (F::Aspect F::dynamic) (F::Time-span F::extended))
     )
    )
   )

 (w::power
  (senses
   ((LF-PARENT ONT::control-manage)
     (example "the piston powers the cylinder")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-THEME-XP-TEMPL)
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil)
     )
   )
  )
  (W::ROUTE
   (SENSES
    ;;;; route the cargo to Avon
    ((LF-PARENT ONT::SEND)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::reroute
   (SENSES
    ;;;; reroute the cargo to Avon
    ((LF-PARENT ONT::SEND)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )

 (W::orbit
   (wordfeats (W::morph (:forms (-vb) :past W::orbited :ing w::orbiting :nom w::orbit)))
   (SENSES
    ((LF-PARENT ONT::FLY)
     (example "orbit over the landscape")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (templ agent-templ)
     )
    ((LF-PARENT ONT::FLY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "orbit the earth")
     )
    )
   )

  (W::hover
   (wordfeats (W::morph (:forms (-vb) :past W::hovered :ing w::hovering)))
   (SENSES
     ((LF-PARENT ONT::FLY)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
      )
    ;;;; hover over the landscape 
    ((LF-PARENT ONT::FLY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    )
   )

  (W::fly
   (wordfeats (W::morph (:forms (-vb) :past W::flew :pastpart W::flown)))
   (SENSES
    ;;;; the plane flies the cargo to Avon
    ((LF-PARENT ONT::FLY)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     (PREFERENCE 0.98)
     )
    ;;;; Fly the cargo to Avon
    ((LF-PARENT ONT::FLY)
     (SEM (F::ASPECT F::BOUNDED))
     )
    ;;;; FLY to Avon
    ((LF-PARENT ONT::FLY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::soar
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::FLY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::TRANSPORT
   (SENSES
    ;;;; transport the cargo to Avon
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("send-11.1") :wn ("transport%2:35:01" "transport%2:38:00" "transport%2:38:01"))
     (LF-PARENT ONT::TRANSPORT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ;;;; the truck transported the cargo to Avon
    ((LF-PARENT ONT::TRANSPORT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     (PREFERENCE 0.98)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("transport%2:37:00"))
     (LF-PARENT ont::evoke-joy)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (PREFERENCE 0.96)
     )
    )
   )

  ((W::take (w::away))
   (wordfeats (W::morph (:forms (-vb) :past W::took :pastpart W::taken :ing W::taking)))
   (SENSES
    (
     (meta-data :origin particle-verbs :entry-date 20100201)
     (LF-PARENT ONT::cause-come-from)
     (example "take away the cargo" "take it away from the truck")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::from))))
     )
    )
   )

 ((W::take (w::over))
  (wordfeats (W::morph (:forms (-vb) :past W::took :pastpart W::taken :ing W::taking :nom (w::take w::over))))
   (SENSES
    (
     (meta-data :origin particle-verbs :entry-date 20100201)
     (LF-PARENT ONT::appropriate)
     (example "take the project over" "take over the project")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::from))))
     )
    )
   )

   ((W::take (w::up))
    (wordfeats (W::morph (:forms (-vb) :past W::took :pastpart W::taken :ing W::taking)))
   (SENSES
    ((meta-data :origin particle-verbs :entry-date 20100201)
     (LF-PARENT ONT::appropriate)
     (example "take the slack up" "take up the slack")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::from))))
     )
    )
   )

   ((W::take (w::on))
     (wordfeats (W::morph (:forms (-vb) :past W::took :pastpart W::taken :ing W::taking)))
   (SENSES
    ((meta-data :origin particle-verbs :entry-date 20100201)
     ;;(LF-PARENT ONT::accept)
     (lf-parent ont::take-on) ;; 20120524 GUM change new type
     (example "take the project on" "take on the project")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )

  (W::remove
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090602 :comments nil :vn ("banish-10.2") :wn ("remove%2:30:00" "remove%2:38:00" "remove%2:40:00" "remove%2:41:00" "remove%2:41:02"))
     (LF-PARENT ONT::cause-come-from)
     (example "remove the cargo from the truck")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::from))))
     )
    )
   )
  (W::discard
   (SENSES
    ((LF-PARENT ONT::discard)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::from))))
     (EXAMPLE "discard the message")
     (meta-data :origin task-learning :entry-date 20050826 :change-date 20090529 :comments nil)
     )
    )
   )
  (W::eliminate
   (SENSES
    ((LF-PARENT ONT::discard)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::from))))
     (EXAMPLE "eliminate the smtp server")
     (meta-data :origin task-learning :entry-date 20050916 :change-date 20090529 :comments nil :vn ("remove-10.1") :wn ("eliminate%2:29:00" "eliminate%2:29:01" "eliminate%2:30:01" "eliminate%2:31:00" "eliminate%2:42:01"))
     )
    )
   )
  (W::unload
   (SENSES
    ;;;; swier -- unload the oranges from the truck
    ((LF-PARENT ONT::UNLOAD)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::off W::from)))))
     )
    ;;;; swier -- unload the truck
    ((LF-PARENT ONT::UNLOAD)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-SOURCE-TEMPL)
     )
    )
   )
  (W::evacuate
   (SENSES
    ((LF-PARENT ONT::evacuate)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "evacuate delta")
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090529 :comments nil :vn ("banish-10.2") :wn ("evacuate%2:38:00" "evacuate%2:38:01"))
     (LF-PARENT ONT::empty)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "evacuate the people")
     )
    )
   )
  (W::pass
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::send)
     (example "pass me the salt")
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     (PREFERENCE 0.96)
     )
    ;;;; when the truck passes by the city
    ((LF-PARENT ONT::PASS)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL THEME-VIA-XP-TEMPL (xp (% W::pp (W::ptype W::by))))
     )
    ;;;; when the truck passes the city
    ((LF-PARENT ONT::PASS)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL THEME-VIA-XP-TEMPL)
     )
    ;;;; when the truck passes
    ((LF-PARENT ONT::PASS)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    )
   )
  ((W::PASS W::by)
   (SENSES
    ;;;; ((LF-PARENT PASS-BY) (TEMPL agent-EMPTY-TEMPL))
    ;;;; when he truck passes by
    ((LF-PARENT ONT::PASS-BY)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    )
   )
  ((W::go (W::by))
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ;;;; when the truck goes by
    ((LF-PARENT ONT::PASS-BY)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    )
   )
;  ((W::wait w::for)
;   (SENSES
;    ((LF-PARENT ONT::WAIT)
;     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
;     (example "wait for x to y")
;     (TEMPL AGENT-EFFECT-OBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
;     )
;    )
;   )
  (W::wait
   (SENSES
    ;;;; swier -- I think we're missing "wait there" ... something using an agent template
    ;;;; swier -- The truck waits.
    ((LF-PARENT ONT::STAY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    ((LF-PARENT ONT::WAIT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TIME-DURATION-TEMPL)
     (example "wait five minutes")
     )
    )
   )
 (W::pause
  (wordfeats (W::morph (:forms (-vb) :nom w::pause)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus :vn ("linger-53.1"))
     (LF-PARENT ONT::STAY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus :vn ("linger-53.1"))
     (LF-PARENT ONT::WAIT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TIME-DURATION-TEMPL)
     )
    )
   )

 

  (W::stay
   (SENSES
    ;;;; swier -- missing "wait".
    ((LF-PARENT ONT::STAY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     (example "the truck stayed at the depot")
     )
    ((example "let's stay with the mac")
     (LF-PARENT ONT::retain)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-theme-xp-templ (xp (% W::pp (W::ptype W::with))))
     (meta-data :origin plow :entry-date 20050928 :change-date nil :comments naive-subjects)
     )
    ((example "are you staying active" "the bulbs stayed on")
     (LF-PARENT ONT::maintain-activity)
     (TEMPL affected-effect-pred-TEMPL)
     (meta-data :origin chf :entry-date 20070817 :change-date 20090220 :comments chf-dialogues)
     )
    )
   )

  (W::scroll
   (SENSES
    ((example "scroll up/down the page/display/screen")
     (LF-PARENT ONT::scroll)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin plow :entry-date 20050929 :change-date nil :comments naive-subjects)
     )
    )
   )
  (W::remain
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::STAY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    ((example "the bulbs remain on")
     (LF-PARENT ONT::maintain-activity)
     (TEMPL affected-effect-pred-TEMPL)
     (meta-data :origin bee :entry-date 20090220 :change-date nil :comments beetle-pilots)
     )
    )
   )

  ((W::hang (W::out))
   (wordfeats (W::morph (:forms (-vb) :3s W::hang :past W::hung)))   
   (SENSES
    ((LF-PARENT ONT::WAIT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::arrive
   (wordfeats (W::morph (:forms (-vb) :nom W::arrival)))
   (SENSES
    ((LF-PARENT ONT::ARRIVE)
     (example "the truck arrived in/at delta from rochester")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL GO-TO-FROM-TEMPL (xp1 (% W::PP (W::ptype (? ptp w::at W::in)))) (xp2 (% W::PP (W::ptype W::from))))
     )
    )
   )
  (W::avoid
   (SENSES
    ((LF-PARENT ONT::AVOID-LOCATION)
     (example "the truck avoided the lava")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-VIA-XP-TEMPL)
     )
    ((lf-parent ont::avoiding)
     (example "avoid the riot on 4th street")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (templ agent-theme-xp-templ)
     (meta-data :origin calo :entry-date 20041201 :change-date nil :comments caloy2 :vn ("avoid-52") :wn ("avoid%2:32:00" "avoid%2:34:00" "avoid%2:41:01" "avoid%2:41:03"))
     )
    ((lf-parent ont::avoiding)
     (example "avoid buying the computer if the price exceeds the budget")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-action-subjcontrol-templ (xp (% W::VP (W::vform W::ing))))
     (meta-data :origin calo :entry-date 20041201 :change-date nil :comments caloy2)
     )
    )
   )
 (W::circumvent
   (SENSES
    ((LF-PARENT ONT::AVOID-LOCATION)
     (example "the caravan circumvented the lava")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (meta-data :origin calo :entry-date 20041201 :change-date nil :comments caloy2)
     (TEMPL THEME-VIA-XP-TEMPL)
     )
    ((lf-parent ont::avoiding)
     (example "how did you circumvent the problem")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (templ agent-theme-xp-templ)
     (meta-data :origin calo :entry-date 20041201 :change-date nil :comments caloy2 :vn ("avoid-52"))
     )
    )
   )
(w::consent
 (senses
  ((LF-parent ont::consent)
   (Example "He consented to the terms")
   (TEMPL AGENT-THEME-optional-TEMPL (xp (% W::PP (W::ptype W::to))))
   (meta-data :origin calo-ontology :entry-date 20060125 :change-date nil :comments meeting-understanding) 
   )
  )
 )
(w::commit
 (senses
  ((LF-parent ont::consent)
   (Example "He committed to the deadline")
   (TEMPL AGENT-THEME-optional-TEMPL(xp (% W::PP (W::ptype W::to))))
   (meta-data :origin calo-ontology :entry-date 20060125 :change-date nil :comments meeting-understanding) 
   )
  )
 )
 (W::escape
   (SENSES
    ((lf-parent ont::depart)
     (example "you cannot escape the consequences")
     (templ agent-source-templ)
     (meta-data :origin calo :entry-date 20041201 :change-date 20090608 :comments caloy2)
     )
    ((lf-parent ont::depart)
     (example "he escaped from the party")
     (templ agent-source-templ (xp (% W::PP (W::ptype W::from))))
     (meta-data :origin calo :entry-date 20041201 :change-date 20090608 :comments caloy2)
     )
    )
   )
  (W::evade
   (SENSES
    ((lf-parent ont::avoiding)
     (example "he evaded his pursuers")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (templ agent-theme-xp-templ)
     (meta-data :origin calo :entry-date 20041201 :change-date nil :comments caloy2 :vn ("avoid-52") :wn ("evade%2:32:00" "evade%2:38:00"))
     )
    )
   )
  (W::bypass
   (SENSES
    ((LF-PARENT ONT::MOVE-around)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::divert
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     (PREFERENCE 0.96)
     )
    ;;;; Divert the cargo
    ((LF-PARENT ONT::divert)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::cancel
   (SENSES
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     (example "cancel the meeting")
     )
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "cancel the service")
     )
     ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-TEMPL)
     (preference .95) ;; prefer transitive senses
     (example "cancel")
     (meta-data :origin plot :entry-date 20081106 :change-date nil :comments nil)
     )
    )
   )

;; alternate ing form
  (W::canceling
   (wordfeats (W::morph (:forms NIL)) (W::AGR ?agr) (W::vform W::ing))
   (SENSES
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     (example "cancel the meeting")
     )
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "cancel the service")
     )
    )
   )
 ;; alternate past spelling
(W::canceled
 (wordfeats (W::morph (:forms NIL)) (W::AGR ?agr) (W::vform W::past))
   (SENSES
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     (example "cancel the meeting")
     )
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "cancel the service")
     )
    )
   )
 (W::kill
   (SENSES
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     (example "kill the program")
     (meta-data :origin calo-ontology :entry-date 20060119 :change-date nil :comments caloy3)
     )
    ((meta-data :origin step :entry-date 20080705 :change-date nil :comments nil)
     (LF-PARENT ONT::destroy)
     )
    ((meta-data :origin step :entry-date 20080705 :change-date nil :comments nil)
     (LF-PARENT ONT::destroy)
     (templ cause-theme-xp-templ)
     (example "overwatering killed the plants")
     )
    )
   )
 (W::destroy
   (SENSES
     ((meta-data :origin step :entry-date 20080705 :change-date nil :comments nil)
     (LF-PARENT ONT::destroy)
     )
    ((meta-data :origin step :entry-date 20080705 :change-date nil :comments nil)
     (LF-PARENT ONT::destroy)
     (templ cause-theme-xp-templ)
     (example "overwatering destroyed the plants")
     )
    )
   )
 (W::abort
   (SENSES
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     (example "abort the plan")
     (meta-data :origin lou2 :entry-date 20061121 :change-date nil :comments nil)
     )
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-TEMPL)
     (example "abort")
     (meta-data :origin plot :entry-date 20080604 :change-date nil :comments nil)
     )
    )
   )

  (W::quit
   (wordfeats (W::morph (:forms (-vb) :past W::quit :ing W::quitting)))
   (SENSES
    ((LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the engine/program quit")
     (TEMPL affected-TEMPL)
     )
    ((LF-PARENT ONT::STOP)
     (example "quit complaining")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-subjcontrol-templ (xp (% W::VP (W::vform W::ing))))
     )
    ((meta-data :origin plot :entry-date 20080413 :change-date nil :comments nil)
     (LF-PARENT ONT::stop)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ cause-effect-xp-templ)
     (example "quit the \"pine \" program")
     )
    )
   )

(W::exit
   (wordfeats (W::morph (:forms (-vb) :past W::exited :ing W::exiting)))
   (SENSES
    ((meta-data :origin plot :entry-date 20080413 :change-date nil :comments nil)
     (LF-PARENT ONT::depart)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-theme-optional-templ (xp (% W::NP)))
     (example "exit the room")
     )
    ((meta-data :origin plot :entry-date 20080413 :change-date nil :comments nil)
     (LF-PARENT ONT::stop)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ cause-effect-xp-templ)
     (example "exit the \"pine \" program")
     )
    )
   )

   ((w::give (w::up))
    (wordfeats (W::morph (:forms (-vb) :past W::gave :pastpart w::given :ing W::giving)))
    (SENSES     
     ((EXAMPLE "I give up")
      (LF-PARENT ONT::STOP)
      (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
      (templ affected-templ)
      (meta-data :origin beetle2-onr2 :entry-date 20071204 :change-date nil :comments nil)
      )
     ((LF-PARENT ONT::STOP)
      (example "he gave up smoking")
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (TEMPL cause-effect-subjcontrol-templ (xp (% W::VP (W::vform W::ing))))
      (meta-data :origin beetle2-onr2 :entry-date 20071204 :change-date nil :comments nil)
      )
     ((EXAMPLE "He gave up the habit")
      (LF-PARENT ONT::STOP)
      (templ cause-effect-xp-templ)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      )
     ))

  (W::reset
   (wordfeats (W::morph (:forms (-vb) :past W::reset :ing W::resetting)))
   (SENSES
    ((meta-data :origin plow :entry-date 20050401 :change-date nil :comments nil)
     (LF-PARENT ONT::change-state-action)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (templ agent-theme-optional-templ (xp (% W::NP)))
     (example "reset the browser")
     )
    )
   )


  (W::restart
   (SENSES
    ((LF-PARENT ONT::RESTART)
     (example "restart")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-TEMPL)
     )
    ((LF-PARENT ONT::RESTART)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "restart the action")
     (templ cause-effect-xp-templ)
     )
    ((LF-PARENT ONT::RESTART)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "restart the computer")
     (templ cause-affected-xp-templ)
     )
    )
   )

  (W::START
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
     ;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he started to eat")
     (TEMPL cause-effect-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
      )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
     ;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (example "the managers started working")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-SUBJCONTROL-TEMPL (xp (% W::vp (W::vform W::ing))))
     )
    (;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "start the action")
     (templ cause-effect-xp-templ)
     )
    (;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "when can you start")
     (templ affected-templ)
     )
    (;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he started the truck")
     (templ cause-affected-xp-templ)
     )
    (;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (meta-data :origin fruit-carts :entry-date 20050429 :change-date nil :comments fruitcarts-11-2)
     (example "start with the triangle")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-xp-templ (xp (% W::pp (W::ptype W::with))))
     )
    ;;;; Need to define Start the truck etc. Will work on it later
    ((LF-PARENT ONT::START-OBJECT)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (preference .95)
     )
    )
   )

  (W::REBOOT
   (wordfeats (W::morph (:forms (-vb) :past W::rebooted :ing W::rebooting)))
   (SENSES
    ((LF-PARENT ONT::reboot)
     (example "reboot the computer")
     (META-DATA :ORIGIN CALO :ENTRY-DATE 20040210 :CHANGE-DATE NIL
		:COMMENTS HTML-PURCHASING-CORPUS)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )

   ((W::BOOT (w::up))
    (wordfeats (W::morph (:forms (-vb) :past W::booted :ing W::booting)))
    (SENSES
     ((LF-PARENT ONT::boot-up)
      (META-DATA :ORIGIN CALO :ENTRY-DATE 20040210 :CHANGE-DATE NIL
		 :COMMENTS HTML-PURCHASING-CORPUS)
      (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
      )
     )
    )
   (w::launch
    (wordfeats (W::morph (:forms (-vb) :nom w::launch)))
    (SENSES
     ((LF-PARENT ONT::START)
      (EXAMPLE "launch the browser")
      (META-DATA :ORIGIN task-learning :ENTRY-DATE 20050826 :CHANGE-DATE NIL
		 :COMMENTS nil)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (templ cause-affected-xp-templ)
      )
     ((LF-PARENT ONT::START)
      (EXAMPLE "launch the meeting")
      (META-DATA :ORIGIN task-learning :ENTRY-DATE 20050826 :CHANGE-DATE NIL
		 :COMMENTS nil)
      (templ cause-effect-xp-templ)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      )
     )
    )
   (w::invoke
     (wordfeats (W::morph (:forms (-vb) :nom w::invocation)))
    (SENSES
     ((LF-PARENT ONT::START)
      (EXAMPLE "invoke the applescript")
      (META-DATA :ORIGIN task-learning :ENTRY-DATE 20050831 :CHANGE-DATE NIL
		 :COMMENTS nil)
      (templ cause-effect-xp-templ)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      )
     )
    )
  (w::base
    (wordfeats (W::morph (:forms (-vb) :nom w::base)))
    (SENSES
     ((LF-PARENT ONT::establish)
      (EXAMPLE "he based the comparison on price")
      (META-DATA :ORIGIN plow :ENTRY-DATE 20060620 :CHANGE-DATE NIL :COMMENTS pq)
      (TEMPL agent-theme-property-templ (xp2 (% w::pp (w::ptype (? pt w::on)))))
      )
     )
    )
  (w::found
    (wordfeats (W::morph (:forms (-vb) :nom w::foundation)))
    (SENSES
     ((LF-PARENT ONT::establish)
      (EXAMPLE "he founded the program on accepted principles")
      (META-DATA :ORIGIN calo-ontology :ENTRY-DATE 20060426 :CHANGE-DATE NIL :COMMENTS nil)
      (TEMPL agent-theme-property-optional-templ (xp2 (% w::pp (w::ptype (? pt w::on)))))
      )
     )
    )
  (w::ground
   (wordfeats (W::morph (:forms (-vb) :nom w::grounding)))
    (SENSES
     ((LF-PARENT ONT::establish)
      (EXAMPLE "he grounded his beliefs on faith")
      (META-DATA :ORIGIN calo-ontology :ENTRY-DATE 20060620 :CHANGE-DATE NIL :COMMENTS nil)
      (TEMPL agent-theme-property-optional-templ (xp2 (% w::pp (w::ptype (? pt w::in w::on)))))
      )
     )
    )
   (w::initiate
    (wordfeats (W::morph (:forms (-vb) :nom w::initiation)))
    (SENSES
     ((LF-PARENT ONT::START)
      (EXAMPLE "initiate the transition")
      (META-DATA :ORIGIN task-learning :ENTRY-DATE 20050830 :CHANGE-DATE NIL
		 :COMMENTS nil)
      (templ cause-effect-xp-templ)
      (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
      )
     )
    )
   (w::originate
    (wordfeats (W::morph (:forms (-vb) :nom w::origination)))
    (SENSES
     ((LF-PARENT ONT::START)
      (EXAMPLE "the idea originated in a remote province")
      (META-DATA :ORIGIN calo-ontology :ENTRY-DATE 20060426 :CHANGE-DATE NIL
		 :COMMENTS nil)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (templ effect-templ)
      )
     ((LF-PARENT ONT::START)
      (EXAMPLE "he originated the idea")
      (META-DATA :ORIGIN calo-ontology :ENTRY-DATE 20060426 :CHANGE-DATE NIL
		 :COMMENTS nil)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (templ cause-effect-xp-templ)
      )
     ((LF-PARENT ONT::START)
      (EXAMPLE "he originated the program")
      (META-DATA :ORIGIN calo-ontology :ENTRY-DATE 20060426 :CHANGE-DATE NIL
		 :COMMENTS nil)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (templ cause-affected-xp-templ)
      )
     )
    )
    
  (W::begin
   (wordfeats (W::morph (:forms (-vb) :past W::began :pastpart W::begun :nom w::beginning)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
      (LF-PARENT ONT::START)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "He started to eat")
     (TEMPL cause-effect-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
     ;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (example "the managers began working")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-SUBJCONTROL-TEMPL (xp (% W::vp (W::vform W::ing))))
     )
     ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
     ;;(LF-PARENT ONT::START)
      (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the computers began to work")
     (TEMPL affected-effect-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
      )
     ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
      ;;(LF-PARENT ONT::START)
      (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he started them working")
     (TEMPL cause-effect-affected-OBJCONTROL-TEMPL (xp (% W::vp (W::vfrom W::ing))))
     )
    ((LF-PARENT ONT::START)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "begin the meeting")
     (templ cause-effect-xp-templ)
     )
    (;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "when can you begin")
     (templ affected-templ)
     )
     (;;(LF-PARENT ONT::START)
      (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL effect-TEMPL)
     (example "the storm began")
     )
    (;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (meta-data :origin fruit-carts :entry-date 20050331 :change-date nil :comments fruitcarts-11-3)
     (example "begin with the triangle")
     (SEM (F::cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-xp-templ (xp (% W::pp (W::ptype W::with))))
     )
    )
   )
 ((W::start (W::off))
   (SENSES
    ((LF-PARENT ONT::START)
     (meta-data :origin fruit-carts :entry-date 20050331 :change-date nil :comments fruitcarts-11-3)
     (example "start off with the triangle")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-xp-templ (xp (% W::pp (W::ptype W::with))))
     )
    )
   )

  ((W::start (W::over))
   (SENSES
    ((LF-PARENT ONT::RESTART)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-TEMPL)
     (example "start over")
     )
    ((LF-PARENT ONT::RESTART)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the program started over")
     (TEMPL affected-TEMPL)
     )
    )
   )

  ((W::start (W::again))
   (SENSES
    ((LF-PARENT ONT::RESTART)
     (example "let's start again")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-TEMPL)
     )
    ((LF-PARENT ONT::RESTART)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the rain has started again")
     (TEMPL affected-TEMPL)
     )
    )
   )

  (W::COST
   (wordfeats (W::morph (:forms (-vb) :past W::cost)))
   (SENSES
    ((LF-PARENT ONT::COSTS)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-COST-TEMPL)
     (example "the truck costs five dollars")
     )
    ((LF-PARENT ONT::COSTS)
     (example "the truck cost him five dollars")
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-affected-COST-TEMPL)
     )
    ((LF-PARENT ONT::COSTS)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (example "it costs $5 to repair the truck") 
     (TEMPL THEME-COST-EXPLETIVE-TEMPL)
     )
    ((LF-PARENT ONT::COSTS)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (example "it costs $5 to repair the truck") 
     (TEMPL THEME-COST-EXPLETIVE-TEMPL)
     )
    ((LF-PARENT ONT::COSTS)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-COST-COMPLEX-NO-SUBJMAP-TEMPL)
     (example "the truck costs five dollars to repair")
     )
    )
   )

  (W::weigh
   (SENSES
    ((LF-PARENT ONT::weigh)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-value-TEMPL)
     (example "the truck weighs five lbs")
     (meta-data :origin calo :entry-date 20041206 :change-date nil :comments caloy2 :vn ("register-54.1") :wn ("weigh%2:42:00" "weigh%2:42:01"))
     )
    ((LF-PARENT ONT::weigh)
     (SEM (F::Aspect F::dynamic) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "he weighed the truck")
     (preference .94) ;; prefer theme-value sense
     (meta-data :origin calo :entry-date 20041206 :change-date nil :comments caloy2 :vn ("register-54.1") :wn ("weigh%2:42:00" "weigh%2:42:01"))
     )
    )
   )

  (W::clock
   (SENSES
    ((LF-PARENT ONT::register)
     (TEMPL agent-theme-xp-templ)
     (example "He clocked the runners")
     (meta-data :origin trips :entry-date 20090910 :change-date nil :comments nil :vn ("register-54.1"))
     )
    ((LF-PARENT ONT::register)
     (TEMPL agent-theme-value-xp-templ)
     (example "He clocked the runners at different speeds")
     (meta-data :origin trips :entry-date 20090910 :change-date nil :comments nil :vn ("register-54.1"))
     )
    ((LF-PARENT ONT::register)
     (TEMPL theme-value-templ (xp (% W::PP (W::ptype W::at))))
     (example "He clocked at 85km/hr")
     (meta-data :origin trips :entry-date 20090910 :change-date nil :comments nil :vn ("register-54.1"))
     )
    )
   )

  (W::time
   (SENSES
    ((LF-PARENT ONT::register)
     (TEMPL agent-theme-xp-templ)
     (example "He timed the runners")
     (meta-data :origin trips :entry-date 20090910 :change-date nil :comments nil :vn ("register-54.1"))
     )
    ((LF-PARENT ONT::register)
     (TEMPL agent-theme-value-xp-templ)
     (example "He timed the runner at 1.64")
     (meta-data :origin trips :entry-date 20090910 :change-date nil :comments nil :vn ("register-54.1"))
     )
    ((LF-PARENT ONT::register)
     (TEMPL theme-value-templ (xp (% W::PP (W::ptype W::at))))
     (example "he timed at 1.64 in the 10-yd dash")
     (meta-data :origin trips :entry-date 20090910 :change-date nil :comments nil :vn ("register-54.1"))
     )
    )
   )

 (W::pay
   (wordfeats (W::morph (:forms (-vb) :past W::paid :ing w::paying)))
   (SENSES
    ((LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-COST-TEMPL)
     (example "he paid 5 dollars")
     (meta-data :origin calo :entry-date 20040504 :change-date nil :comments calo-y1variants)
     )
    ((meta-data :origin calo :entry-date 20031219 :change-date nil :comments nil :vn ("pay-68"))
     (LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-COST-THEME-TEMPL (xp (% W::PP (W::ptype W::for))))
     (example "he paid 5 dollars for it")
     )
    ((LF-PARENT ONT::commerce-pay)
     (SEM (F::Aspect F::dynamic) (F::Time-span F::atomic))
     (example "he paid for the truck")
     (meta-data :origin calo :entry-date 20040504 :change-date nil :comments calo-y1variants)
     (TEMPL agent-theme-xp-TEMPL (xp (% W::PP (W::ptype W::for))))
     )
    ((LF-PARENT ONT::commerce-pay)
     (SEM (F::Aspect F::dynamic) (F::Time-span F::atomic))
     (example "pay the money to me")
     (meta-data :origin calo :entry-date 20040504 :change-date nil :comments calo-y1variants)
     (TEMPL AGENT-COST-RECIPIENT-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    ((LF-PARENT ONT::commerce-pay)
     (SEM (F::Aspect F::dynamic) (F::Time-span F::atomic))
     (example "pay me the money")
     (meta-data :origin calo :entry-date 20040504 :change-date nil :comments calo-y1variants :vn ("pay-68"))
     (TEMPL AGENT-RECIPIENT-COST-TEMPL)
     )
    ;; need to subcat for this use because the definition of ont::instrument is currently limited to phys-obj
    ;; and credit card is classified as an account, which is an abstr-obj (e.g. can also be a grant)
    ((meta-data :origin calo :entry-date 20040505 :change-date nil :comments y1-variations :vn ("pay-68"))
     (EXAMPLE "pay with a credit card")
     (LF-PARENT ONT::commerce-pay)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-source-TEMPL (xp (% W::pp (W::ptype W::with))))
     )
    ((meta-data :origin calo :entry-date 20040505 :change-date nil :comments y1-variations)
     (EXAMPLE "pay for it with a credit card")
     (LF-PARENT ONT::commerce-pay)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-for-THEME-comp-source-TEMPL)
     )
    )
   )
 
 (W::disburse
   (SENSES
    ((LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-COST-TEMPL)
     (example "he disbursed 5 dollars")
     (meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     (LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-COST-THEME-TEMPL (xp (% W::PP (W::ptype W::for))))
     (example "he disbursed 5 dollars for it")
     )
    ((LF-PARENT ONT::commerce-pay)
     (SEM (F::Aspect F::dynamic) (F::Time-span F::atomic))
     (example "disburse the money to me")
     (meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     (TEMPL AGENT-COST-RECIPIENT-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )

 (W::sell
   (wordfeats (W::morph (:forms (-vb) :past W::sold)))
   (SENSES
    ((EXAMPLE "Can you sell me a computer")
      (meta-data :origin calo :entry-date 20050209 :change-date nil :comments y1-dialog-variations)
     (LF-PARENT ONT::commerce-sell)
     (TEMPL AGENT-THEME-RECIPIENT-alternation-TEMPL)
     )
    )
   )

  (W::undo
   (wordfeats (W::morph (:forms (-vb) :3s W::undoes :past W::undid)))
   (SENSES
    ((LF-PARENT ONT::UNDO)
     (example "undo the action")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-OPTIONAL-TEMPL)
     )
    )
   )
 
 ;; need to add a feature to restrict this to collective nouns, e.g. crowd (which is not plural)
  (w::disperse
   (senses
    ((meta-data :origin monroe :entry-date 20031217 :change-date nil :comments s15)
     (LF-PARENT ONT::disperse)
     (example "the crowd dispersed")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     )
    ((meta-data :origin monroe :entry-date 20031217 :change-date nil :comments s15)
     (LF-PARENT ONT::disperse)
     (example "the police dispersed the crowd")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  (w::congregate
   (senses
    ((meta-data :origin calo-ontology :entry-date 20060126 :change-date nil :comments caloy3 :vn ("herd-47.5.2") :wn ("congregate%2:38:00"))
     (LF-PARENT ONT::meet)
     (example "they congregated at the church")
     (TEMPL THEME-plural-TEMPL)
     )
    )
   )

  ((w::meet w::up)
    (wordfeats (W::morph (:forms (-vb) :past w::met :nom (w::meet w::up))))
   (senses
    ((meta-data :origin calo-ontology :entry-date 20060126 :change-date nil :comments caloy3 :vn ("herd-47.5.2") :wn ("congregate%2:38:00"))
     (LF-PARENT ONT::meet)
     (example "they met up at the church")
     (TEMPL THEME-plural-TEMPL)
     )
    )
   )

   ((w::get w::together)
    (wordfeats (W::morph (:forms (-vb) :past w::got :nom (w::get w::together))))
   (senses
    ((meta-data :origin calo-ontology :entry-date 20060126 :change-date nil :comments caloy3 :vn ("herd-47.5.2") :wn ("congregate%2:38:00"))
     (LF-PARENT ONT::meet)
     (example "they got together at the church")
     (TEMPL THEME-plural-TEMPL)
     )
    )
   )
 
  (w::gather
   (wordfeats (W::morph (:forms (-vb) :past W::gathered :ing w::gathering)))
   (senses
    ((meta-data :origin calo-ontology :entry-date 20060126 :change-date nil :comments caloy3 :vn ("herd-47.5.2") :wn ("gather%2:30:00" "gather%2:35:00" "gather%2:38:00" "gather%2:41:00" "gather%2:41:02"))
     (LF-PARENT ONT::meet)
     (example "they gathered at the church")
     (TEMPL THEME-plural-TEMPL)
     )
    ((LF-PARENT ONT::collect)
     (example "gather the wood")
     (meta-data :origin calo-ontology :entry-date 20060126 :change-date nil :comments caloy3 :vn ("shake-22.3-2"))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )

  ((w::gather (w::up))
   (wordfeats (W::morph (:forms (-vb) :past W::gathered :ing w::gathering)))
   (senses
    ((LF-PARENT ONT::collect)
     (example "gather up the pieces")
     (meta-data :origin calo-ontology :entry-date 20060126 :change-date nil :comments caloy3)
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  (w::assemble
   (senses
    ((meta-data :origin calo-ontology :entry-date 20060126 :change-date nil :comments caloy3 :vn ("herd-47.5.2") :wn ("assemble%2:41:00" "assemble%2:41:03"))
     (LF-PARENT ONT::meet)
     (example "they assembled at the church")
     (TEMPL THEME-plural-TEMPL)
     )
    ((LF-PARENT ONT::arranging)
     (example "assemble the computer")
     (meta-data :origin calo-ontology :entry-date 20060126 :change-date 20090505 :comments caloy3)
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  ((w::put (w::together))
    (wordfeats (W::morph (:forms (-vb) :past W::put :ing W::putting)))
   (senses
    ((LF-PARENT ONT::arranging)
     (meta-data :origin calo-ontology :entry-date 20060126 :change-date 20090505 :comments caloy3)
     (example "put the pieces together")
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  (W::meet
   (wordfeats (W::morph (:forms (-vb) :past W::met)))
   (SENSES
    ;;;; A truck met a train
    ((LF-PARENT ONT::hitting)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     )
    ;;;; a truck met with a train
    ((LF-PARENT ONT::hitting)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::with))))
     )
    ;;;; 2 trucks met
    ((LF-PARENT ONT::hitting)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-PLURAL-TEMPL)
     )
    ;;;; Myrosia 12/31/00 2 streets connect/intersect/meet/cross
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-PLURAL-TEMPL)
     )
    ;;;; street a crosses/meets street b
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     )
    ((EXAMPLE "it doesn't meet your specifications")
     (LF-PARENT ONT::compliance)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-theme-xp-TEMPL)
     (meta-data :origin calo :entry-date 20031206 :change-date nil :comments calo-y1script)
     )
    )
   )

 (W::surround
   (SENSES
    ((LF-PARENT ONT::surround)
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (example "the triangle surrounds three tomatoes")
     (meta-data :origin fruitcarts :entry-date 20050401 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("surround%2:33:00" "surround%2:35:00"))
     )
    )
   )

(W::border
  (wordfeats (W::morph (:forms (-vb) :past W::bordered :ing w::bordering)))
   (SENSES
    ((LF-PARENT ONT::surround)
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (example "the fence borders the meadow")
     (meta-data :origin fruitcarts :entry-date 20060215 :change-date nil :comments nil)
     )
    )
   )

 (W::cover
   (wordfeats (W::morph (:forms (-vb) :past W::covered :ing w::covering)))
   (SENSES
    ((LF-PARENT ONT::cover)
     (TEMPL AGENT-THEME-CO-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? pt W::with W::in)))))
 ;    (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "cover the table with the tablecloth")
     (meta-data :origin fruitcarts :entry-date 20060215 :change-date 20090911 :comments nil :vn ("contiguous_location-47.8") :wn ("cover%2:35:01"))
     )
    ((LF-PARENT ONT::cover)
     (TEMPL CO-THEME-THEME-XP-TEMPL)
;     (SEM (F::Aspect F::stage-level))
     (example "the tablecloth covers/ is covering the table")
     (meta-data :origin trips :entry-date 20090911 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("cover%2:35:01"))
     )
    ((meta-data :origin monroe :entry-date 20031219 :change-date nil :comments s11)
     ;;(LF-PARENT ONT::managing)
     (lf-parent  ont::calm-manage-regulate-watch-handle-cover-takecare-run) ;; 20120521 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "cover the situation")
     )
    )
   )

 (W::envelop
   (SENSES
    ((LF-PARENT ONT::cover)
     (TEMPL agent-theme-co-theme-templ (xp (% W::PP (W::ptype W::in))))
     (example "They had been packed up in a box, and enveloped in cotton")
     (meta-data :origin trips :entry-date 20090911 :change-date nil :comments nil)
     )
    ((LF-PARENT ONT::cover)
     (TEMPL co-theme-theme-xp-templ)
     (example "Fog enveloped the house")
     (meta-data :origin trips :entry-date 20090911 :change-date nil :comments nil :wn ("envelop%2:35:00"))
     )
    )
   )

 (W::circumscribe
   (SENSES
    ((LF-PARENT ONT::circumscribe)
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (example "the circle circumscribe the tomato")
     (meta-data :origin fruitcarts :entry-date 20060215 :change-date nil :comments nil)
     )
    )
   )


 (W::face
   (SENSES
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (example "the triangle faces the square")
     (meta-data :origin fruitcarts :entry-date 20050401 :change-date nil :comments nil)
     )
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? pt W::toward w::towards))))) 
     (example "the triangle faces towards the square")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Orient)
     )
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL agent-theme-CO-THEME-TEMPL (xp (% W::PP (W::ptype (? pt W::toward w::towards)))))
     (example "face the triangle towards the square")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Orient)
     )
    )
   )
 (W::mirror
   (SENSES
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (example "the bananas  mirror each other")
     (meta-data :origin fruitcarts :entry-date 20060215 :change-date nil :comments nil)
     )
    )
   )
 (W::orient
   (SENSES
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? pt W::toward w::towards)))))
     (example "the triangle is oriented towards the square")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Orient)
     )
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL agent-theme-CO-THEME-optional-TEMPL (xp (% W::PP (W::ptype (? pt W::toward w::towards)))))
     (example "orient the triangle (towards the square)")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Orient)
     )
    )
   )

 (W::point
   (SENSES
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? pt W::toward w::towards))))) 
     (example "the triangle points towards the square")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Orient)
     )
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL agent-theme-CO-THEME-optional-TEMPL (xp (% W::PP (W::ptype (? pt W::toward w::towards)))))
     (example "orient the triangle (towards the square)")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Orient)
     )
    )
   )
 (W::aim
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("wish-62"))
     (LF-PARENT ONT::intention)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-to)))) ; like intend
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? pt W::toward w::towards))))) 
     (example "the triangle aims towards the square")
     (meta-data :origin calo-ontology :entry-date 20060215 :change-date nil :comments Orient)
     )
    ((LF-PARENT ONT::orient)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL agent-theme-CO-THEME-optional-TEMPL (xp (% W::PP (W::ptype (? pt W::toward w::towards)))))
     (example "aim the triangle (towards the square)")
     (meta-data :origin calo-ontology :entry-date 20060215 :change-date nil :comments Orient)
     )
    )
   )
 (W::overlap
   (SENSES
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (example "the banana overlaps the avocado")
     (meta-data :origin fruitcarts :entry-date 20050401 :change-date nil :comments nil)
     )
    )
   )

 (W::strike
   (wordfeats (W::morph (:forms (-vb) :past W::struck :nom w::strike)))
   (SENSES
    ((LF-PARENT ONT::hitting)
     (example "a truck struck a train")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (meta-data :origin plot :entry-date 2080413)
     )
    ((LF-PARENT ONT::type)
     (example "strike the key")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-THEME-XP-TEMPL)
     (meta-data :origin plot :entry-date 2080413)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("strike%2:37:00"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
 (W::whack
    (wordfeats (W::morph (:forms (-vb) :nom W::whack)))
   (SENSES
    ((LF-PARENT ONT::hitting)
     (example "the man whacked the ball")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (meta-data :origin cardiac :entry-date 20081223 :change-date nil :comments LM-vocab)
     )
    )
   )

   (W::kick
    (wordfeats (W::morph (:forms (-vb) :nom w::kick)))
    (SENSES
     ((LF-PARENT ONT::kicking)
      (example "he kicked the wall")
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      )
     ))

  (W::hit
   (wordfeats (W::morph (:forms (-vb) :past W::hit :nom w::hit)))
   (SENSES
    ((LF-PARENT ONT::hitting)
     (example "a truck hit a train")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (meta-data :origin monroe :entry-date 20031216)
     )
    ((LF-PARENT ONT::type)
     (example "hit the key")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin plot :entry-date 20080411 :change-date nil :comments nil)
     (TEMPL agent-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::hitting)
     (example "2 trucks hit")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-PLURAL-TEMPL)
     (meta-data :origin monroe :entry-date 20031216)
     )
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (example "street a hits street b at 490")
     (meta-data :origin monroe :entry-date 20031216)
     )
    )
   )
  (W::interact
   (wordfeats (W::morph (:forms (-vb) :nom W::interaction)))
   (SENSES
    ((LF-PARENT ONT::INTERACT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "aspirin interacts with celebrex")
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::with))))
     )
    )
   )
  (W::transact
    (wordfeats (W::morph (:forms (-vb) :nom W::transaction)))
   (SENSES
    ((LF-PARENT ONT::INTERACT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::with))))
     )
    )
   )
 (W::interfere
   (wordfeats (W::morph (:forms (-vb) :nom W::interference)))
   (SENSES
    ((LF-PARENT ONT::HINDERING)
     (Example "a drug interferes with aspirin")
     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-expt)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL (xp (% W::PP (W::ptype W::with))))
     )
    ))
   
(W::synchronize
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::coordinating)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-theme-co-theme-TEMPL (xp (% W::PP (W::ptype W::with))))
     )
    ;; need this template to go through the adjectival passive rule
    ((LF-PARENT ONT::coordinating)
     (example "synchronize the details")
     (TEMPL AGENT-THEME-xp-TEMPL)
     )
    )
   )
(W::coordinate
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::coordinating)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-theme-co-theme-TEMPL (xp (% W::PP (W::ptype W::with))))
     (example "coordinate your travel details with him")
     )
    ;; need this template to go through the adjectival passive rule
     ((LF-PARENT ONT::coordinating)
     (example "coordinate the details")
     (TEMPL AGENT-THEME-xp-TEMPL)
     )
    )
   )
 (W::network
   (SENSES
     ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("mix-22.1-2-1"))
     (LF-PARENT ONT::attach)
     (example "he networked the computers")
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype (? ptype w::to w::with)))))
      ; like connect
     (PREFERENCE 0.96)
     )
     ;; need this template to go through the adjectival passive rule
     ((LF-PARENT ONT::attach)
     (example "the networked computers")
     (TEMPL AGENT-THEME-xp-TEMPL)
     )
    ((LF-PARENT ONT::CONNECTED)
     (example "the internet networks one computer to another")
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-CO-THEME-XP-TEMPL)
     )
    )
   )
  (W::connect
    (wordfeats (W::morph (:forms (-vb) :nom W::connection)))
   (SENSES
    ;;;; well, the usage sounds weird to me, but maybe...
    ;;;; a truck connected with a train
    ((LF-PARENT ONT::hitting)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::with))))
     )
    ;;;; connect the truck to the train
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-CO-THEME-optional-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    
    ;;;; connect the battery with the bulb
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-CO-THEME-optional-TEMPL (xp (% W::pp (W::ptype W::with))))
     (preference 0.99)
     )
    ;;;; the path connects one city to/with another
    ((LF-PARENT ONT::CONNECTED)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-CO-THEME-XP-TEMPL)
     )
    ;;;; the path links 2 cities
    ((LF-PARENT ONT::CONNECTED)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-PLURAL-TEMPL)
     )
    ;;;; one city connects to/with another
    ((LF-PARENT ONT::CONNECTED)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::pp (W::ptype (? ptype W::to W::with)))))
     )
    ;;;; Myrosia 12/31/00 2 streets connect/intersect/meet
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-PLURAL-TEMPL)
     )
    ;;;; street A intersects/connects/meets with street b
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    ;;;; street a crosses/meets street b
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::pp (W::ptype (? ptype W::to W::with)))))
     )
    )
   )
  (W::reconnect
   (SENSES
    ((LF-PARENT ONT::ATTACH)
     (meta-data :origin calo-ontology :entry-date 20060130 :change-date nil :comments meeting-understanding)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-CO-THEME-TEMPL (xp (% W::pp (W::ptype W::to))))
    )
    ((LF-PARENT ONT::ATTACH)
     (meta-data :origin calo-ontology :entry-date 20060130 :change-date nil :comments meeting-understanding)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
 (W::wire
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::send)
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::ATTACH)
     (example "wire the computer to the network")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-CO-THEME-optional-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )

  (W::plug
   (SENSES
    ((LF-PARENT ONT::ATTACH)
     (example "plug the videocard in(to) the computer")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo :entry-date 20050323 :change-date nil :comments caloy2)
     (TEMPL AGENT-THEME-CO-THEME-TEMPL (xp (% W::pp (W::ptype (? pt w::in W::into)))))
     )
    ((LF-PARENT ONT::ATTACH)
     (example "the video card plugs into the computer")
     (meta-data :origin calo :entry-date 20050323 :change-date nil :comments caloy2)
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::into))))
     )
    )
   )
 ((W::plug (w::in))
   (SENSES
    ((LF-PARENT ONT::ATTACH)
     (example "plug in the computer")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo :entry-date 20060128 :change-date nil :comments caloy2)
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )

  (W::intersect
   (SENSES
    ;;;; swier -- I-90 and I-490 intersect
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-PLURAL-TEMPL)
     )
    ;;;; street A intersects/connects/meets with street b
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::with))))
     )
    )
   )
  (W::cross
   (wordfeats (W::morph (:forms (-vb) :3s W::crosses)))
   (SENSES
    ;;;; swier -- I-90 and I-490 cross
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-PLURAL-TEMPL)
     )
    ;;;; street a crosses/meets street b
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL)
     )
    )
   )
  (W::try   
   (wordfeats (W::morph (:forms (-vb) :nom w::try)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("try%2:37:01"))
     (LF-PARENT ONT::evoke-anger)
     (example "the strenuous trial tried his patience")
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (PREFERENCE 0.96)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("try-61"))
     (LF-PARENT ONT::TRY)
     (example "try this option")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-effect-XP-TEMPL)
     )
    ((LF-PARENT ONT::TRY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "try going along the coast")
     (TEMPL cause-effect-SUBJCONTROL-TEMPL (xp (% W::VP (W::vform W::ing))))
     )
    ((LF-PARENT ONT::TRY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-effect-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype (? ct W::s-to W::s-and)))))
     (example "try to go around the storm")
     )
    ((LF-PARENT ONT::TRY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-templ)
     (example "He tried")
     (preference 0.96) ;; use only if necessary
     )
    )
   )

  (W::retry
   (SENSES
    ((LF-PARENT ONT::TRY-again)
     (example "retry this option")
     (meta-data :origin plow :entry-date 20050401 :change-date nil :comments nil)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-effect-XP-TEMPL)
     )
    )
   )

  (W::deposit
    (wordfeats (W::morph (:forms (-vb) :past W::deposited :ing w::depositing :nom w::deposit)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put-9.1"))
     (LF-PARENT ONT::put)
     (TEMPL agent-theme-xp-templ) ; like insert,position
     (PREFERENCE 0.96)
     )
    ;;;; swier -- deposit the oranges
    ((LF-PARENT ONT::UNLOAD)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )

  (W::drop
   (wordfeats (W::morph (:forms (-vb) :nom W::drop)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put_direction-9.4") :wn ("drop%2:38:01"))
     (LF-PARENT ONT::move-downward)
     (TEMPL agent-theme-xp-templ) ; like raise,lower
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("drop%2:38:00" "drop%2:38:01"))
     (LF-PARENT ONT::move-downward)
     (TEMPL theme-templ) ; like move,bounce
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo-ontology :entry-date 20060710 :change-date nil :comments nil)
     (LF-PARENT ONT::omit)
     (example "drop this paragraph from the text")
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from))))
     )
    )
   )

  ((W::drop (W::off))
   (wordfeats (W::morph (:forms (-vb) :ing W::dropping)))
    (SENSES
    ((LF-PARENT ONT::UNLOAD)
     (example "drop off the oranges")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
    )

(W::keep
   (wordfeats (W::morph (:forms (-vb) :ing W::keeping :past W::kept)))
   (SENSES
    ;;;; we may need to devise special case for keeping at a particular location
    ((LF-PARENT ONT::MAINTAIN-activity)
     (example "keep the room clean")
     (meta-data :origin trips :entry-date unknown :change-date 20090220 :comments beetle-pilots)
     (SEM (F::Locative F::Located) (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL AFFECTED-EFFECT-COMPLEX-TEMPL)
     )
    ((example "are you keeping busy")
     (LF-PARENT ONT::MAINTAIN-activity)
     (TEMPL affected-EFFECT-pred-TEMPL)
     (meta-data :origin chf :entry-date 20070817 :change-date 20090220 :comments chf-dialogues)
     )
    ((lf-parent ont::maintain-activity)
     (SEM (F::Cause F::Agentive) (F::Locative F::Located) (F::Aspect F::stage-level) (F::Time-span F::extended))
     (example "Keep walking")
     (TEMPL AFFECTED-EFFECT-SUBJCONTROL-TEMPL (xp (% w::VP (w::vform w::ing))))
     (meta-data :origin bee :entry-date 20040805 :change-date 20090220 :comments portability-followup)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("keep-15.2") :wn ("keep%2:40:10" "keep%2:40:12" "keep%2:40:13"))
     (LF-PARENT ONT::retain)
     (example "keep the oranges at avon")
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It keeps him from doing something")
     )
;;;    ((LF-PARENT ONT::cause-make)
;;;     (example "keep it under five dollars")
;;;     (meta-data :origin calo :entry-date 20040427 :change-date nil :comments caloy1v4)
;;;     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
;;;     (TEMPL cause-effect-objcontrol-pred-templ)
;;;     )
;;;    ((LF-PARENT ONT::cause-make)
;;;     (example "keep him occupied" "this kept him occupied")
;;;     (meta-data :origin calo :entry-date 20040427 :change-date nil :comments nil)
;;;     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
;;;     (TEMPL cause-effect-xp-templ)
;;;     )
    )
   )
 (W::retain
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::retain)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     )
    )
   )
 (W::maintain
   (SENSES
    ((meta-data :origin calo :entry-date 20060117 :change-date nil :comments calo-ontology)
     (LF-PARENT ONT::repair)
     (example "maintain the equipment")
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     )
    )
   )
 (W::protect
  (wordfeats (W::morph (:forms (-vb) :nom W::protection)))
   (SENSES
    ((meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2 :wn-sense (1) :vn ("defend-85"))
     (LF-PARENT ONT::protecting)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "buy a warranty to protect your purchase")
     (templ cause-theme-xp-templ)
     )  
    )
   )
 (W::secure
   (SENSES
    ((meta-data :origin coord-ops :entry-date 20070418 :change-date nil :comments nil :vn ("defend-85"))
     (LF-PARENT ONT::protecting)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "secure the west boundary")
     )
      ((meta-data :origin cmap-testing :entry-date 20090929 :change-date nil :comments nil :wn-sense (1) :vn ("defend-85"))
     (LF-PARENT ONT::protecting)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "the bolt secured the door")
     (templ cause-theme-xp-templ)
     (preference .98) ;; prefer agentive
     )
    )
   )

  (W::rescue
   (wordfeats (W::morph (:forms (-vb) :nom W::rescue)))
   (SENSES
    ;;;; swier -- rescue the people
    ((LF-PARENT ONT::rescue)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::save
   (SENSES
    ((LF-PARENT ONT::rescue)
     (example "save the people")
     )
    ((LF-PARENT ONT::LEAVE-TIME)
     (example "it saves us five hours [to go along the coast]")
     (TEMPL THEME-AFFECTED-DURATION-TEMPL)
     )
;    ((LF-PARENT ONT::LEAVE-TIME)
;     (example "it saves us five hours to go along the coast")
;     (TEMPL THEME-AFFECTED-COST-EXPLETIVE-TEMPL)
;     )
    ((meta-data :origin plow :entry-date 20041122 :change-date nil :comments naive-subjects)
     (LF-PARENT ONT::costs)
     (example "I saved five dollars")
     )
    ((meta-data :origin plow :entry-date 20041122 :change-date nil :comments naive-subjects)
     (LF-PARENT ONT::costs)
     (example "it saved him five dollars to buy it on sale")
     (TEMPL THEME-AFFECTED-COST-TEMPL)
     )
    ((EXAMPLE "save the reservation")
     (meta-data :origin calo-ontology :entry-date 20051214 :change-date nil :comments nil)
     (LF-PARENT ONT::retain)
     (SEM (F::Cause F::agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::extricate
    (wordfeats (W::morph (:forms (-vb) :nom W::extrication)))
   (SENSES
    ((LF-PARENT ONT::releasing)
     (example "extricate the people")
     (meta-data :origin pacifica :entry-date unknown :change-date 20090529 :comments change-lf)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::retrieve
   (wordfeats (W::morph (:forms (-vb) :nom W::retrieval)))
   (SENSES
    ((lf-parent ont::retrieve)
     (example "retrieve the information from the website")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-SOURCE-optional-templ (xp (% W::PP (W::ptype (? pt w::on W::at W::from)))))
     (meta-data :origin plow :entry-date 20060523 :change-date nil :comments pq0390)
     )
    )
   )

  (W::use
     (wordfeats (W::morph (:forms (-vb) :nom W::use)))
   (SENSES
    ((LF-PARENT ONT::USE)
     (example "use your head")
     (SEM (F::ASPECT F::DYNAMIC))
     )
    ((LF-Parent ont::use)
     (example "a battery uses a chemical reaction to maintain voltage" "the engine uses gasoline")
     (meta-data :origin (beetle2 mobius) :entry-date 20080218 :change-date nil :connemts pilot1)
     (TEMPL affected-theme-xp-templ)
     )
    )
   )

 (W::diet
   (SENSES
    ((LF-PARENT ONT::dieting)
     (example "he is dieting")
     (meta-data :origin cardiac :entry-date 20081223 :change-date nil :comments LM-vocab)
     (templ agent-templ)
     )
    )
   )

  (W::exercise
   (SENSES
    ((LF-PARENT ONT::USE)
     (example "exercise that option")
     (SEM (F::ASPECT F::DYNAMIC))
     )
    ((LF-PARENT ONT::WORKING-OUT)
     (example "You need to exercise every day")
     (meta-data :origin chf :entry-date 20070809 :change-date nil :comments chf-dialogues)
     (templ agent-templ)
     )
    ((LF-PARENT ONT::WORKING-OUT)
     (example "You need to exercise your muscles every day")
     (meta-data :origin chf :entry-date 20070809 :change-date nil :comments chf-dialogues)
     )
    )
   )

  (W::used
   (wordfeats (W::morph (:forms NIL)) (W::AGR ?agr) (W::vform W::past))
    (SENSES
     ((LF-PARENT ont::habitual)
      (example "Abrams used to hire Browne")
      (TEMPL AGENT-effect-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
      (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil)
      )
     ((LF-PARENT ont::habitual)
      (example "the meetings used to drive them crazy")
      (TEMPL theme-effect-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
      (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil)
      )
     )
    )

 (W::utilize
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::USE)
     (SEM (F::ASPECT F::DYNAMIC))
     )
    ((LF-PARENT ont::use)
     (example "a battery utilises a chemical reaction to maintain voltage")
     (meta-data :origin beetle2 :entry-date 20080218 :change-date nil :connemts pilot1)
     (TEMPL affected-theme-xp-templ)
     )

    )
   )
(W::consume
   (SENSES
    ((meta-data :origin calo-ontology :entry-date 20051205 :change-date nil :comments nil)
     (LF-PARENT ONT::USE)
     (example "this process consumes all the resources")
     (SEM (F::ASPECT F::DYNAMIC))
     )
    ((meta-data :origin calo-ontology :entry-date 20051205 :change-date nil :comments nil)
     (LF-PARENT ONT::consume)
     (example "how much bread does he consume")
     (SEM (F::ASPECT F::DYNAMIC))
     (templ agent-affected-xp-templ)
     )
    )
   )

(W::dine
   (SENSES
    ((meta-data :origin calo-ontology :entry-date 20060119 :change-date nil :comments caloy3)
     (LF-PARENT ONT::consume)
     (example "he dines (on bread)")
     (SEM (F::ASPECT F::DYNAMIC))
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on))))
     )
    )
   )

(W::nibble
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090406 :change-date nil :comments nil)
     (LF-PARENT ONT::consume)
     (example "he nibbled on bread")
     (SEM (F::ASPECT F::DYNAMIC))
     (templ agent-affected-xp-templ  (xp (% W::pp (W::ptype W::on))))
     )
     ((meta-data :origin cardiac :entry-date 20090406 :change-date nil :comments nil)
     (LF-PARENT ONT::consume)
     (example "he nibbled the bread")
     (SEM (F::ASPECT F::DYNAMIC))
     (templ agent-affected-xp-templ)
     )
    )
   )

(W::feed
    (wordfeats (W::morph (:forms (-vb) :pastpart W::fed)))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090406 :change-date nil :comments nil)
     (LF-PARENT ONT::consume)
     (example "he fed on bread")
     (SEM (F::ASPECT F::DYNAMIC))
     (templ agent-affected-xp-templ  (xp (% W::pp (W::ptype W::on))))
     )
     )
   )
(W::snack
    (SENSES
    ((meta-data :origin cardiac :entry-date 20090406 :change-date nil :comments nil)
     (LF-PARENT ONT::consume)
     (example "he snacked [on bread]")
     (SEM (F::ASPECT F::DYNAMIC))
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on))))
     )
     )
   )
(W::devour
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090406 :change-date nil :comments nil)
     (LF-PARENT ONT::consume)
     (example "he devoured it")
     (SEM (F::ASPECT F::DYNAMIC))
     (templ agent-affected-xp-templ)
     )
    )
   )
(W::ingest
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090406 :change-date nil :comments nil)
     (LF-PARENT ONT::consume)
     (example "he ingested it")
     (SEM (F::ASPECT F::DYNAMIC))
     (templ agent-affected-xp-templ)
     )
    )
   )
  (W::waste
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("consume-65-1"))
     (LF-PARENT ONT::spend-time)
     (TEMPL agent-duration-theme-templ (xp (% w::pp (w::ptype (? pt w::for w::on))))) ; like spend
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("consume-65-1"))
     (LF-PARENT ONT::spend-time)
     (TEMPL theme-duration-templ) ; like spend
     (PREFERENCE 0.96)
     )
    ;;;; we have wasted 45 minutes
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("waste%2:30:00" "waste%2:35:00"))
     (LF-PARENT ONT::destroy)
     )
    )
   )
  (W::deploy
   (SENSES
    ((LF-PARENT ONT::USE)
     (SEM (F::ASPECT F::DYNAMIC))
     )
    )
   )
  (W::highlight
   (SENSES
    ;;;; swier -- highlight those points
    ((LF-PARENT ONT::highlight)
     )
    )
   )
  (W::list
   (SENSES
    ((example "why isn't there a Mac listed")
     (meta-data :origin calo :entry-date 20031206 :change-date nil :comments calo-y1script)
     (LF-PARENT ONT::listing)
     )
    )
   )
(W::enhance
   (SENSES
    ;; handled by the more general frame
;    ((example "It has enhanced software")
;     (sem (f::aspect f::dynamic))
;     (meta-data :origin calo :entry-date 20040504 :change-date nil :comments calo-y1variants)
;     (LF-PARENT ONT::improve)
;     )
    ((example "the light enhanced the color")
     (sem (f::aspect f::dynamic))
     (templ cause-theme-xp-templ)
     (meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)
     (LF-PARENT ONT::improve)
     )
    )
   )
(W::advance
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("escape-51.1-2"))
     (LF-PARENT ONT::move-forward)
     (TEMPL theme-templ) ; like go,fall
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("future_having-13.3") :wn ("advance%2:40:00"))
     (LF-PARENT ONT::lend)
     (example "advance him the money")
     (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     (PREFERENCE 0.96)
     )
    ((example "He used an advanced technique")
     (sem (f::aspect f::dynamic))
     (meta-data :origin plow :entry-date 20050316 :change-date nil :comments nil)
     (LF-PARENT ONT::improve)
     )
    ((example "the improvements advanced the field")
     (sem (f::aspect f::dynamic))
     (templ cause-theme-xp-templ)
     (meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)
     (LF-PARENT ONT::improve)
     )
    )
   )

 (W::graduate
   (SENSES
    ((example "my son graduated from college")
     (sem (f::aspect f::dynamic))
     (meta-data :origin chf :entry-date 20070827 :change-date nil :comments chf-dialogues)
     (LF-PARENT ONT::advancing)
     (templ theme-source-optional-templ)
     )
    )
   )

(W::optimize
   (SENSES
    ((example "it has optimized software")
     (sem (f::aspect f::dynamic))
     (meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2)
     (LF-PARENT ONT::improve)
     (templ cause-theme-xp-templ)
     )
    )
   )
(W::improve
   (SENSES
    ((example "this feature improves the performance")
     (sem (f::aspect f::dynamic))
     (meta-data :origin calo :entry-date 20040504 :change-date nil :comments calo-y1variants)
     (LF-PARENT ONT::improve)
     (templ cause-theme-xp-templ)
     )
    ((example "the performance improved")
     (sem (f::aspect f::dynamic))
     (meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     (LF-PARENT ONT::improve)
     (templ theme-templ)
     )
    )
   )

(W::enrich
   (SENSES
    ((example "this feature enriches the experience")
     (sem (f::aspect f::dynamic))
     (meta-data :origin cardiac :entry-date 20090406 :change-date nil :comments nil)
     (LF-PARENT ONT::improve)
     (templ cause-theme-xp-templ)
     )
    )
   )
((W::brush (w::up))
   (SENSES
    ((example "he wants to brush up on his french")
     (sem (f::aspect f::dynamic))
     (meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     (LF-PARENT ONT::improve)
     (templ agent-theme-xp-templ (xp (% W::pp (W::ptype W::on))))
     )
     ((example "he wants to brush up his french")
     (sem (f::aspect f::dynamic))
     (meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     (LF-PARENT ONT::improve)
     (templ agent-theme-xp-templ )
     )
    )
   )
 (W::ameliorate
   (SENSES
    ((example "the treatment ameliorates the condition")
     (sem (f::aspect f::dynamic))
     (meta-data :origin cardiac :entry-date 20081223 :change-date nil :comments LM-vocab)
     (LF-PARENT ONT::improve)
     (templ cause-theme-xp-templ)
     )
    )
   )
  (W::describe
   (wordfeats (W::morph (:forms (-vb) :nom w::description)))
   (SENSES
    ((LF-PARENT ONT::describe)
     (example "he described the book")
     (meta-data :origin calo :entry-date 20041103 :change-date 20090506 :comments caloy2)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (templ agent-theme-addressee-optional-templ)
     )
    ((LF-PARENT ONT::describe)
     (example "the webpage describes the book")
     (meta-data :origin calo :entry-date 20041103 :change-date 20090506 :comments caloy2)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )
    )
   )
  (W::specify
   (wordfeats (W::morph (:forms (-vb) :nom w::specification)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("characterize-29.2"))
     (LF-PARENT ONT::select)
     (TEMPL agent-theme-xp-templ) ; like select
     (PREFERENCE 0.96)
     )
    ((meta-data :origin plow :entry-date 20060531 :change-date nil :comments nil)
     (LF-PARENT ONT::SELECT)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "specify red")
     (templ agent-theme-pred-templ)
     )
    ((LF-PARENT ONT::describe)
     (example "he specified the requirements")
     (meta-data :origin task-learning :entry-date 20050812 :change-date 20090506 :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )

  (W::explain
    (wordfeats (W::morph (:forms (-vb) :nom w::explanation)))
   (SENSES
    ((LF-PARENT ONT::describe)
     (example "he explained the book")
     (meta-data :origin calo :entry-date 20041103 :change-date 20090506 :comments caloy2)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    ((LF-PARENT ONT::describe)
     (example "the webpage explains the procedure")
     (meta-data :origin calo :entry-date 20041103 :change-date 20090506 :comments caloy2)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )
    )
   )

  (W::account
   (SENSES
    ((meta-data :origin monroe :entry-date 20031219 :change-date 20090508 :comments s15)
     (LF-PARENT ONT::describe)
     (example "account for the problem")
     (templ agent-theme-xp-templ (xp (% W::pp (W::ptype W::for))))
     )
    )
   )
  (W::SHOW
   (wordfeats (W::morph (:forms (-vb) :pastpart W::shown)))
   (SENSES
   ; handled by ont::show
 ;   ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("indicate-76-1-1"))
 ;    (LF-PARENT ONT::confirm)
 ;    (example "show that it works")
 ;    (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like confirm
 ;    (PREFERENCE 0.97)
 ;    )
; changed this to ont::show to allow physical-object themes in addition to all those allowed by this sense.
;    ((LF-PARENT ONT::transfer-information)
;     (example "show me how to find a book")
;     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
;     )
; this is handled by ont::show, although not with the instrument role
;    ((LF-PARENT ONT::visual-display)
;     (meta-data :origin "bee" :entry-date 20091394 :change-date nil :comments nil)
;     (example "this diagram shows a short circuit") ;; strange use of instrument
;     (TEMPL INSTRUMENT-THEME-XP-TEMPL) 
;     (Preference 0.98) ;; choose agentive interpretation whenever possible
;     )
    ((LF-PARENT ONT::show)
     (example "show the house")
     )
    ((LF-PARENT ONT::show)
     (example "show him the house / how to buy a book")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     )
    ((LF-PARENT ONT::show)
     (example "this diagram shows that it works")
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite))))
    )
   )
   )

  (W::present
   (SENSES
    ((LF-PARENT ONT::visual-display)
     (example "who is going to present the poster (to them)")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     (meta-data :origin calo-ontology :entry-date 20060712 :change-date 20090506 :comments caloy3)
     )
    ((LF-PARENT ONT::MOVE)
     (example "she presented to New York hospital")
     (TEMPL AGENT-TEMPL))
    
    ((LF-PARENT ONT::visual-display)
     (meta-data :origin "bee" :entry-date 20091394 :change-date nil :comments nil)
     (example "this book presents a different solution")
     (TEMPL INSTRUMENT-THEME-XP-TEMPL)
     (Preference 0.97) ;; choose agentive interpretation whenever possible
     )

    )
   )
  (w::teach
   (wordfeats (W::morph (:forms (-vb) :past w::taught)))
   (senses
    ((LF-PARENT ONT::transfer-information)
     (example "teach him web page reading")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     (meta-data :origin calo :entry-date 20041025 :change-date nil :comments caloy2)
     )
    ((LF-PARENT ONT::transfer-information)
     (example "teach him about web page reading")
     (TEMPL AGENT-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL)
     (meta-data :origin calo :entry-date 20041025 :change-date nil :comments caloy2)
     (preference .98)
     )
;    ((EXAMPLE "Teach him what he needs to know")
;     (LF-PARENT ONT::transfer-information)
;     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL  (xp (% W::NP (W::sort W::wh-desc))))
;     (meta-data :origin calo :entry-date 20041025 :change-date nil :comments caloy2)
;     )
    ((EXAMPLE "Teach him to do it")
     (LF-PARENT ONT::transfer-information)
     (TEMPL AGENT-ADDRESSEE-THEME-TEMPL (xp (% W::cp (W::ctype W::s-to))))
     (meta-data :origin calo :entry-date 20041025 :change-date nil :comments caloy2)
     (preference .98) 
     )
     ((EXAMPLE "he teaches every thursday")
     (LF-PARENT ONT::transfer-information)
     (TEMPL AGENT-TEMPL)
     (meta-data :origin trips-general :entry-date 20090406 :change-date nil :comments nil)
     (preference .97) ;; disprefer intransitive
     )
    )
   )
  (w::train
   (senses
    ((EXAMPLE "Train him to do it")
     (LF-PARENT ONT::transfer-information) ;; like teach
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL  (xp (% W::cp (W::ctype W::s-to))))
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil)
     )
    ;; need a non-intentional do
    ((LF-PARENT ONT::practicing)
     (example "train the classifier on the email")
     (SEM (F::Cause F::agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (meta-data :origin plow :entry-date 20090129 :change-date nil :comments nil)
     (TEMPL agent-theme-source-optional-templ  (xp (% W::PP (W::ptype W::on))))
     )
    )
   )


  ((W::show W::up)
   (wordfeats (W::morph (:forms (-vb) :pastpart W::shown)))
   (SENSES 
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("appear-48.1.1"))
     (LF-PARENT ONT::ARRIVE)
     (TEMPL THEME-TO-LOC-XP-TEMPL (xp (% W::pp (W::ptype W::at))))
     (preference .98)
     )
    ;;;; the truck showed up
    ((LF-PARENT ONT::ARRIVE)
     (TEMPL THEME-TEMPL)
     (preference .97)
     )
    )
   )
  (W::DISPLAY
   (SENSES
    ((LF-PARENT ONT::visual-display)
     )
    ((LF-PARENT ONT::visual-display)
     (meta-data :origin "bee" :entry-date 20091394 :change-date nil :comments nil)
     (example "this diagram displays a short circuit")
     (TEMPL INSTRUMENT-THEME-XP-TEMPL)
     (Preference 0.97) ;; choose agentive interpretation whenever possible
     )

    )
   )
  (W::render
   (SENSES
    ((LF-PARENT ONT::visual-display)
     (EXAMPLE "Safari's HTML rendering engine")
     (meta-data :origin task-learning :entry-date 20050822 :change-date 20090506 :comments nil)
     )
    )
   )
  (W::flash
   (wordfeats (W::morph (:forms (-vb) :nom W::flash)))
   (SENSES
    ((LF-PARENT ONT::visual-display)
     (EXAMPLE "flashes the IE icon when a subscription has changed")
     (meta-data :origin task-learning :entry-date 20050912 :change-date 20090506 :comments nil)
     )
    )
   )

 (W::HIDE
   (SENSES
    ((LF-PARENT ONT::HIDE)
     (example "hide the benign objects")
     (meta-data :origin lou :entry-date 20040311 :change-date nil :comments lou-sent-entry)
     )
    )
   )

 (W::STREAM
   (SENSES
    ((LF-PARENT ONT::direct-information)
     (example "I streamed the program on my computer")
     (meta-data :origin calo :entry-date 20040921 :change-date nil :comments caloy2)
     )
    ((LF-PARENT ONT::direct-information)
     (example "the computer streamed the data")
     (meta-data :origin calo :entry-date 20040921 :change-date nil :comments caloy2)
     (templ instrument-theme-templ)
     )
    )
   )

  (W::reveal
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("characterize-29.2-1-2"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-to-addressee-optional-templ) ; like report
     (PREFERENCE 0.97)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("characterize-29.2-1-2"))
     (LF-PARENT ONT::visual-display)
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) 
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date 20090506 :comments html-purchasing-corpus :vn ("indicate-76-1-1"))
     (LF-PARENT ONT::visual-display)
     (example "he revealed the surprise")
     )
    ((meta-data :origin cernl :entry-date 20110802 :change-date nil :comments nil)
     (LF-PARENT ONT::reveal)
     (example "the test revealed the problem")
     (templ cause-affected-xp-templ)
     (preference .98) ; prefer agentive
     )
    ((meta-data :origin cernl :entry-date 20110802 :change-date nil :comments nil) 
     (LF-PARENT ONT::reveal)
     (TEMPL cause-affected-xp-templ (xp (% w::cp (w::ctype w::s-that)))) 
     (PREFERENCE 0.98) ; prefer agentive
     )
    )
   )
  (W::disclose
   (wordfeats (W::morph (:forms (-vb) :nom W::disclosure)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ) ; like respond,reply
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo-ontology :entry-date 20060315 :change-date 20090506 :comments nil)
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like report
     )
    ((meta-data :origin calo-ontology :entry-date 20060315 :change-date 20090506 :comments nil)
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (example "the report disclosed that they left")
     (TEMPL instrument-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like report
     )
    )
   )
 (W::exclaim
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like disclose
     (PREFERENCE 0.96)
     )
    )
   )
 (W::insinuate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like disclose
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL instrument-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like disclose
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ) ; like respond,reply
     (PREFERENCE 0.96)
     )
    )
   )
 (W::insist
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     (LF-PARENT ONT::request)
     (TEMPL agent-effect-xp-templ (xp (% w::cp (w::ctype w::s-that-subjunctive)))) ; like disclose
      )
    )
   )
 (W::intimate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like disclose
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL instrument-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like disclose
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ) ; like respond,reply
     (PREFERENCE 0.96)
     )
    )
   )
 (W::promulgate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like disclose
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
     (TEMPL instrument-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like disclose
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ) ; like respond,reply
     (PREFERENCE 0.96)
     )
    )
   )
 (W::retort
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7"))
     (LF-PARENT ONT::answer)
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like disclose
     (PREFERENCE 0.96)
     )
    )
   )
 (W::utter
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090505 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-theme-xp-templ) ; like respond,reply
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090505 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like disclose
     (PREFERENCE 0.96)
     )
    )
   )
 (W::uncover
   (SENSES
    ((meta-data :origin calo-ontology :entry-date 20060117 :change-date 20090506 :comments caloy3)
     (EXAMPLE "uncover the source")
     (LF-PARENT ONT::visual-display)
     )
    )
   )
  (W::prove
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("indicate-76-1-1"))
     (LF-PARENT ONT::confirm)
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like confirm
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("indicate-76-1-1"))
     (LF-PARENT ONT::confirm)
     (example "he proved the theorem")
     (TEMPL agent-theme-xp-templ) 
     (PREFERENCE 0.96)
     )
    )
   )

 ;; alternate pastpart form
 (W::proven
  (wordfeats (W::morph (:forms NIL)) (W::vform W::pastpart))
  (SENSES
   ((meta-data :origin calo :entry-date 20031230 :change-date 20090506 :comments html-purchasing-corpus)
    (LF-PARENT ONT::confirm)
    )
   )
  )
 (W::unveil
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date 20090506 :comments html-purchasing-corpus)
     (LF-PARENT ONT::visual-display)
     )
    )
   )
  (W::estimate
   (SENSES
    ;;;; swier -- I think the ontology should be expanded to include the class of "estimateable" things.
    ;;;; numberical things can be estimated, you can estimate time, mass, number, etc. But you cannot
    ;;;; estimate oranges. And you cannot estimate a route.
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090522 :comments nil :vn ("price-54.4") :wn ("estimate%2:31:00"))
     (LF-PARENT ONT::becoming-aware-of-value)
     (templ cognizer-theme-xp-templ)
     (example "estimate the number of oranges")
     )
    )
   )
  (W::calculate
    (wordfeats (W::morph (:forms (-vb) :nom W::calculation)))
   (SENSES
    ((LF-PARENT ONT::calculation)
     (meta-data :origin trips :entry-date 20060414 :change-date 20090522 :comments nil :wn ("calculate%2:31:00"))
     (templ cognizer-theme-xp-templ)
     (example "he calculated the sum")
     )
    )
   )
  (W::recalculate
   (SENSES
    ((LF-PARENT ONT::calculation)
     (templ cognizer-theme-xp-templ)
     (meta-data :origin quicken :entry-date 20071129 :change-date 20090522 :comments nil)
     (example "he recalculated the sum")
     )
    )
   )
  (W::compute
   (SENSES
    ((LF-PARENT ONT::calculation)
     (templ cognizer-theme-xp-templ)
     (meta-data :origin calo :entry-date 20040908 :change-date 20090522 :comments caloy2)
     (example "he computed the sum")
     )
    )
   )
  (W::crunch
   (SENSES
    ((LF-PARENT ONT::calculation)
     (templ cognizer-theme-xp-templ)
     (meta-data :origin calo :entry-date 20040908 :change-date 20090522 :comments caloy2)
     (example "he crunched the numbers")
     )
    )
   )
  (W::NUMBER
   (SENSES
    ((LF-PARENT ONT::categorization)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-XP-TEMPL)
     )
    )
   )
 (W::classify
   (SENSES
    ((LF-PARENT ONT::classify)
     (meta-data :origin lou :entry-date 20041116 :change-date 20090501 :comments lou-demo :vn ("characterize-29.2") :wn ("classify%2:31:00" "classify%2:31:01"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "classify this as a mine")
     (TEMPL cognizer-THEME-as-predicate-required-TEMPL)
     )
    ;; need this definition to allow v-passive-by rule to apply; comp arg must be -
    ((LF-PARENT ONT::classify)
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date 20090501 :comments caloy3)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "this was classified by him")
     (TEMPL cognizer-THEME-xp-TEMPL)
     )
    )
   )
 ((W::consist w::of)
   (SENSES
    ((LF-PARENT ONT::comprise)
     (meta-data :origin step :entry-date 20080826 :change-date nil :comments nil)
     (example "the magic trick consists of smoke and mirrors")
     (templ theme-co-theme-xp-templ)
     )
    )
   )

 (W::comprise
  (SENSES
   ((LF-PARENT ONT::comprise)
    (meta-data :origin step :entry-date 20080826 :change-date nil :comments nil)
    (example "the magic trick comprises four parts")
    (templ theme-co-theme-xp-templ)
    )
   )
  )


 (W::characterize
  (wordfeats (W::morph (:forms (-vb) :nom w::characterization)))
   (SENSES
    ((LF-PARENT ONT::categorization)
     (meta-data :origin step :entry-date 20080630 :change-date nil :comments nil :vn ("characterize-29.2"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he characterized the situation (as positive)")
     (TEMPL cognizer-THEME-as-predicate-required-TEMPL)
     )
    ;; need this definition to allow v-passive-by rule to apply; comp arg must be -
    ((LF-PARENT ONT::categorization)
     (meta-data :origin step :entry-date 20080630 :change-date nil :comments nil :vn ("characterize-29.2"))
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "this was characterized by him")
     (TEMPL cognizer-THEME-xp-TEMPL)
     )
    ((LF-PARENT ONT::categorization)
     ;; changed templ to theme-cotheme so passive rule will work
     (meta-data :origin step :entry-date 20080630 :change-date 20080826 :comments nil :vn ("characterize-29.2"))
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "limited exposure characterizes normal usage")
     (templ theme-co-theme-xp-templ)
     )
    )
   )
 (W::categorize
  (wordfeats (W::morph (:forms (-vb) :nom w::categorization)))
   (SENSES
    ((LF-PARENT ONT::classify)
     (meta-data :origin step :entry-date 20080630 :change-date 20090501 :comments nil :vn ("characterize-29.2"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he categorized the situation (as positive)")
     (TEMPL cognizer-THEME-as-predicate-required-TEMPL)
     )
    ;; need this definition to allow v-passive-by rule to apply; comp arg must be -
    ((LF-PARENT ONT::classify)
     (meta-data :origin step :entry-date 20080630 :change-date 20090501 :comments nil :vn ("characterize-29.2"))
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "this was categorized by him")
     (TEMPL cognizer-THEME-xp-TEMPL)
     )
    )
   )
(W::interpret
 (wordfeats (W::morph (:forms (-vb) :nom w::interpretation)))
   (SENSES
    ((LF-PARENT ONT::classify)
     (meta-data :origin calo-ontology :entry-date 20051209 :change-date 20090501 :comments Interpret :vn ("characterize-29.2"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "I interpret this message as a warning")
     (TEMPL cognizer-THEME-as-predicate-required-TEMPL)
     )
    ;; need this definition to allow v-passive-by rule to apply; comp arg must be -
    ((LF-PARENT ONT::classify)
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date 20090501 :comments caloy3)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "this was interpreted by him")
     (TEMPL cognizer-THEME-xp-TEMPL)
     )
    )
   )
 (W::identify
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("amalgamate-22.2-2"))
     (LF-PARENT ONT::associate)
     (example "he identifies him with her")
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::with)))) ; like affiliate,confederate,muddle,entangle,confuse,associate,team,pair
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("characterize-29.2-1-1"))
     (LF-PARENT ONT::classify)
     (TEMPL agent-theme-xp-templ) ; like represent
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::classify)
     (meta-data :origin lou :entry-date 20040716 :change-date 20041116 :comments lou-demo)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "identify this (as a mine)")
     (TEMPL cognizer-THEME-as-predicate-optional-TEMPL)
     )
    ;; need this definition to allow v-passive-by rule to apply; comp arg must be -
    ((LF-PARENT ONT::classify)
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date 20090501 :comments caloy3)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "this was identified by him")
     (TEMPL cognizer-THEME-xp-TEMPL)
     )
    )
   )
  (W::define
    (wordfeats (W::morph (:forms (-vb) :nom w::definition)))
   (SENSES
     ((LF-PARENT ONT::classify)
     (meta-data :origin lou :entry-date 20041116 :change-date 20090501 :comments lou-demo)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "define this as a compound")
     (TEMPL cognizer-THEME-as-predicate-optional-TEMPL)
     )
    ;; need this definition to allow v-passive-by rule to apply; comp arg must be -
    ((LF-PARENT ONT::classify)
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date 20090501 :comments caloy3)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "define this" "this was defined by him")
     (TEMPL cognizer-THEME-xp-TEMPL)
     )
    )
   )
  (W::redefine
   (SENSES
    ((LF-PARENT ONT::classify)
     (meta-data :origin task-learning :entry-date 20050831 :change-date 20090501 :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "redefine this")
     (TEMPL cognizer-THEME-as-predicate-optional-TEMPL)
     )
    ;; need this definition to allow v-passive-by rule to apply; comp arg must be -
    ((LF-PARENT ONT::classify)
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date 20090501 :comments caloy3)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "redefine this" "this was redefined by him")
     (TEMPL cognizer-THEME-xp-TEMPL)
     )
    )
   )
  (W::predefine
   (SENSES
    ((LF-PARENT ONT::categorization)
     (meta-data :origin task-learning :entry-date 20050824 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "predefine this")
     (TEMPL cognizer-THEME-as-predicate-optional-TEMPL)
     )
    )
   )
  (W::undefine
   (SENSES
    ((LF-PARENT ONT::categorization)
     (meta-data :origin task-learning :entry-date 20050919 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "undefine this")
     (TEMPL cognizer-THEME-as-predicate-optional-TEMPL)
     )
    )
   )
  (W::NAME
   (SENSES
    ((LF-PARENT ONT::naming)
     (meta-data :origin lou :entry-date 20040716 :change-date 20090501 :comments lou-demo :vn ("dub-29.3-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "name this site zuchinni")
     (TEMPL cognizer-THEME-bare-predicate-TEMPL)
     )
    ;; need this definition to allow v-passive-by rule to apply; comp arg must be -
    ((LF-PARENT ONT::naming)
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date 20090501 :comments caloy3 :vn ("dub-29.3-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "this was named by him")
     (TEMPL cognizer-THEME-xp-TEMPL)
     )
    ((meta-data :origin ptb :entry-date 20100429 :change-date nil :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::naming)
     (example "the company named her as president")
     (TEMPL cognizer-theme-as-predicate-required-templ) ; like interpret,classify
     )
    )
   )
  (W::RENAME
   (SENSES
    ((LF-PARENT ONT::naming)
     (meta-data :origin task-learning :entry-date 20050817 :change-date 20090501 :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "rename a mailbox")
     (TEMPL cognizer-THEME-bare-predicate-optional-TEMPL)
     )
     ;; need this definition to allow v-passive-by rule to apply; comp arg must be -
    ((LF-PARENT ONT::naming)
     (meta-data :origin calo-ontology :entry-date 20060124 :change-date 20090501 :comments caloy3)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "this was renamed by him")
     (TEMPL cognizer-THEME-xp-TEMPL)
     )
    )
   )
  ((W::bring (W::up))
   (wordfeats (W::morph (:forms (-vb) :past W::brought)))
   (SENSES
    ((LF-PARENT ONT::visual-display)
     (example "bring up the map of Pacifica")
     )
    )
   )

  (W::throw
   (wordfeats (W::morph (:forms (-vb) :past W::threw :pastpart W::thrown :nom w::throw)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("throw%2:31:00" "throw%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (example "the detour threw them until they looked at the map")
     (TEMPL cause-experiencer-xp-templ)
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::cause-to-move)
     (TEMPL agent-theme-xp-templ)
     (example "he threw the ball")
     (meta-data :origin step :entry-date 20080721 :change-date nil :comments nil)
     )
    )
   )

  ((W::throw (W::up))
   (wordfeats (W::morph (:forms (-vb) :past W::threw :pastpart W::thrown)))
   (SENSES
    ((LF-PARENT ONT::visual-display)
     (example "throw up the map")
     )
    ((EXAMPLE "The patient threw up")
     (LF-PARENT ONT::bodily-process)
     (TEMPL THEME-TEMPL)
     )
    )
   )
 (W::view
   (wordfeats (W::morph (:forms (-vb) :nom w::view)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::ACTIVE-PERCEPTION)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
     )
    )
   )

;; seems like this should be an agent instead of experiencer, but ont::active-perception also seems good
 (W::watch
   (SENSES
    ((meta-data :origin calo :entry-date 20040915 :change-date nil :comments caloy2)
     (LF-PARENT ONT::ACTIVE-PERCEPTION)
     (example "watch for it")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
     )
    (;;(lf-parent ont::managing)
     (lf-parent  ont::calm-manage-regulate-watch-handle-cover-takecare-run) ;; 20120521 GUM change new parent 
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "he is watching his weight")
     (TEMPL agent-theme-xp-templ)
     (meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     )
    )
   )

 (W::perceive
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("see-30.1-1") :wn ("perceive%2:39:00"))
     (LF-PARENT ONT::becoming-aware)
     (example "he perceived that there was a problem")
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like see
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("characterize-29.2"))
     (LF-PARENT ONT::categorization)
     (example "he perceived him as a rock star")
     (TEMPL cognizer-theme-as-predicate-required-templ) ; like interpret,classify
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::becoming-aware)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-XP-TEMPL)
     (example "he perceived the damage")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Perceive :wn ("perceive%2:39:00"))
     )
    )
   )

 (W::notice
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("see-30.1-1"):wn ("notice%2:39:00" "notice%2:39:04"))
     (LF-PARENT ONT::becoming-aware)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite))))
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("see-30.1-1") :wn ("notice%2:39:00" "notice%2:39:04"))
     (LF-PARENT ONT::becoming-aware)
     (TEMPL cognizer-templ) 
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::becoming-aware)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-XP-TEMPL)
     (example "he perceived the damage")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Perceive :vn ("see-30.1-1"))
     )
    )
   )
  (W::see
   (wordfeats (W::morph (:forms (-vb) :ing W::seeing :past W::saw :pastpart W::seen)))
   (SENSES
    ((LF-PARENT ONT::ACTIVE-PERCEPTION)
     (example "he saw the man with the telescope")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::active-perception)
     (SEM (F::Aspect F::Indiv-level) (F::Time-span F::extended))
     (example "I can't hear, I can't see")
     (TEMPL EXPERIENCER-TEMPL)
     (meta-data :origin monroe :entry-date 20030909 :change-date nil :comments s2)
     (PREFERENCE 0.97) ;; disprefer intransitive
     )
    ((LF-PARENT ONT::come-to-understand)
     (SEM (F::Aspect F::Indiv-level) (F::Time-span F::extended))
     (example "I see")
     (TEMPL COGNIZER-TEMPL)
     (PREFERENCE 0.98) ;; disprefer intransitive
     )
    ((LF-PARENT ONT::come-to-understand)
     (SEM (F::Aspect F::Indiv-level) (F::Time-span F::extended))
     (example "I see the problem")
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (PREFERENCE 0.98) 
     )
    ((meta-data :origin plow :entry-date 20060414 :change-date nil :comments nil :vn ("see-30.1-1"))
     (LF-PARENT ONT::becoming-aware)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "see whether/if/that it's a book order")
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((meta-data :origin trips :entry-date 20090330 :change-date nil :comments missing-sense)
     (LF-PARENT ONT::active-perception)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "he saw him drink / drinking ")
     (TEMPL experiencer-action-objcontrol-templ (xp (% W::VP (W::vform (? vf W::base w::ing)))))
     )
    ((meta-data :origin trips :entry-date 20090330 :change-date nil :comments missing-sense)
     (LF-PARENT ONT::active-perception)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "he saw him happy / drunk ")
     (TEMPL experiencer-action-complex-templ)
     )
     )
   )
  (W::ought
   (wordfeats (W::morph (:forms (-vb) :3s W::ought)))
   (SENSES
    ((LF-PARENT ONT::NECESSITY)
     (example "he ought to go")
     (SEM (F::Aspect F::Indiv-level) (f::Time-span f::extended)) ;; don't allow temporal mods on the higher verb (need)
     (TEMPL affected-effect-SUBJCONTROL-TEMPL)
     )
    )
   )

  (W::contact
   (senses
   ((meta-data :origin calo :entry-date 20031212 :change-date 20090508 :comments calo-y1script)
    (LF-PARENT ONT::establish-communication)
    (example "I'll contact the lab manager")
    (TEMPL AGENT-ADDRESSEE-TEMPL)
    )
   ((meta-data :origin calo :entry-date 20031212 :change-date 20090508 :comments calo-y1script)
    (LF-PARENT ONT::establish-communication)
    (example "I'll contact the lab manager about it")
    (TEMPL AGENT-ADDRESSEE-Associated-information-TEMPL)
    )
   )
   )

  (W::tell
   (wordfeats (W::morph (:forms (-vb) :past W::told)))
   (SENSES
    (;;(LF-PARENT ONT::inform)
     (lf-parent ont::tell) ;; 20120524 GUM change new parent
     (example "tell the driver the plan")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     )
    (;;(LF-PARENT ONT::inform)
     (lf-parent ont::tell) ;; 20120524 GUM change new parent
     (example "tell the driver about the plan")
     (TEMPL AGENT-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL)
     )
    ((EXAMPLE "Tell the driver that the trucks are ready")
     ;;(LF-PARENT ONT::inform)
     (lf-parent ont::tell) ;; 20120524 GUM change new parent
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ;;;; Myrosia 10/23/03 made the to complement required to avoid needless ambiguities
    ((LF-PARENT ONT::command)
     (example "tell him to do it")
     (TEMPL AGENT-addressee-theme-OBJCONTROL-REQ-TEMPL)
     )
    ((LF-PARENT ONT::correlation)
     (example "a zero voltage tells you that the terminals are connected")
     (meta-data :origin beetle :entry-date 20090512 :change-date 20090609 :comments beetle-pilots)
     (templ theme-cognizer-co-theme-xp-templ)
     (preference 0.98)
     )
    )
   )
   
  (W::reply
   (SENSES
    ((LF-PARENT ONT::answer)
     (example "he replied to her [about it]")
    ;; (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL (xp (% w::pp (w::ptype w::to))))
     (TEMPL AGENT-to-ADDRESSEE-associated-info-OPTIONAL-TEMPL )
     (meta-data :origin task-learning :entry-date 20050818 :change-date 20090506 :comments nil)
     )
    ((LF-PARENT ONT::answer)
     (example "he replied to the email")
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% w::pp (w::ptype w::to))))
     (meta-data :origin task-learning :entry-date 20050818 :change-date 20090506 :comments nil)
     )
    )
   )
  (W::respond
   (SENSES
    ((LF-PARENT ONT::answer)
     (example "he responded to her [about it]")
     (TEMPL AGENT-to-ADDRESSEE-associated-info-OPTIONAL-TEMPL )
     (meta-data :origin task-learning :entry-date 20050919 :change-date 20090508 :comments nil)
     )
    ((LF-PARENT ONT::answer)
     (example "he responded about it [to her]")
     (TEMPL AGENT-associated-info-ADDRESSEE-OPTIONAL-TEMPL)
     (meta-data :origin task-learning :entry-date 20060405 :change-date 20090508 :comments completeness)
     )
    ((LF-PARENT ONT::answer)
     (example "he responded to the email")
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% w::pp (w::ptype w::to))))
     (meta-data :origin task-learning :entry-date 20050919 :change-date 20090508 :comments nil)
     )
    )
   )

  (W::notify
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090506 :comments nil :vn ("advise-37.9"))
     (EXAMPLE "notify him that the plan changed")
     (LF-PARENT ONT::inform)
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090506 :comments nil :vn ("advise-37.9"))
     (EXAMPLE "notify him about the change")
     (LF-PARENT ONT::inform)
     (TEMPL AGENT-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL)
     )
    )
   )
 (W::advertize
   (SENSES
    ((EXAMPLE "advertize the computer")
     (meta-data :origin calo :entry-date 20040907 :change-date 20090506 :comments caloy2)
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )

 (W::advertise
   (SENSES
    ((EXAMPLE "advertise the computer")
     (meta-data :origin calo :entry-date 20040907 :change-date 20090506 :comments caloy2)
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
 
 (W::announce
   (SENSES
    ((EXAMPLE "apple announced the new imac")
     (meta-data :origin calo :entry-date 20040915 :change-date 20090506 :comments caloy2)
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
     (example "announce it to them")
     ;; this verb doesn't participate in the alternation
     (TEMPL agent-theme-to-addressee-optional-templ) 
     )
    (;;(LF-PARENT ONT::announce)
     (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
     (example "microsoft announced yesterday that they will acquire yahoo")
     (meta-data :origin joshua :entry-date 20080905 :change-date 20090506 :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-to W::s-finite)))))
     )
    (;;(LF-PARENT ONT::announce)
     (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
     (example "the message announced yesterday that microsoft will acquire yahoo")
     (meta-data :origin joshua :entry-date 20080905 :change-date 20090506 :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-to W::s-finite)))))
     )
    )
   )

(W::relay
   (SENSES
    ((LF-PARENT ONT::transfer-information)
     (example "relay the news to him" "relay him the news")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     (meta-data :origin calo :entry-date 20050527 :change-date nil :comments caloy2)
     )
    )
   )
 
  (W::ask
   (SENSES
    (;;(LF-PARENT ONT::QUESTIONING)
     (lf-parent ont::ask-query-question) ;; 20120524 GUM change new parent
     (example "ask him the question")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     )
    (;;(LF-PARENT ONT::request)
     (lf-parent ont::ask) ;; 20120524 GUM change new type
     (example "ask him to do it")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ADDRESSEE-effect-OBJCONTROL-REQ-TEMPL)
     )
    (;;(LF-PARENT ONT::QUESTIONING)
     (lf-parent ont::ask-query-question) ;; 20120524 GUM change new parent
     (example "ask if there is enough time to go along the coast")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-if))))
     )
    ((EXAMPLE "ask (him) about it")
     ;;(LF-PARENT ONT::QUESTIONING)
     (lf-parent ont::ask-query-question) ;; 20120524 GUM change new parent
     (example "ask him about it")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-OPTIONAL-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL)
     )
    ((EXAMPLE "ask (him) for something")
     ;;(LF-PARENT ONT::REQUEST)
     (lf-parent ont::ask) ;; 20120524 GUM change new type
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-OPTIONAL-ADDRESSEE-THEME-TEMPL)
     )
    (;;(LF-PARENT ONT::request)
     (lf-parent ont::ask) ;; 20120524 GUM change new type
     (example "he asked that you send this message")
     (meta-data :origin joshua :entry-date 20080905 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-effect-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-to W::s-finite w::s-that-subjunctive)))))
     )
    )
   )
  (W::prompt
   (wordfeats (W::morph (:forms (-vb) :nom W::prompt)))
   (SENSES
    ((EXAMPLE "prompt (the user) for a password")
     (LF-PARENT ONT::REQUEST)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-OPTIONAL-ADDRESSEE-THEME-TEMPL) ;should addressee be optional?
     (meta-data :origin task-learning :entry-date 20050824 :change-date nil :comments nil)
     )
    )
   )
 (W::question
    (wordfeats (W::morph (:forms (-vb) :nom W::question)))
   (SENSES
    ((EXAMPLE "question authority")
     (meta-data :origin calo-ontology :entry-date 20060315 :change-date nil :comments nil)
     ;;(LF-PARENT ONT::QUESTIONING)
     (lf-parent ont::ask-query-question) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-theme-xp-TEMPL)
     )
    )
   )

 (W::query
    (wordfeats (W::morph (:forms (-vb) :nom W::query)))
   (SENSES
    ((meta-data :origin calo-ontology :entry-date 20060315 :change-date nil :comments nil)
     ;;(LF-PARENT ONT::QUESTIONING)
     (lf-parent ont::ask-query-question) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-theme-xp-TEMPL)
     )
    )
   )

 (W::inquire
  (wordfeats (W::morph (:forms (-vb) :nom W::inquiry)))
   (SENSES
    ((EXAMPLE "inquire about the voltage")
     (meta-data :origin calo :entry-date 20050425 :change-date nil :comments projector-purchasing)
     ;;(LF-PARENT ONT::QUESTIONING)
     (lf-parent ont::enquire-inquire) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ASSOCIATED-INFORMATION-TEMPL)
     )
    )
   )

 (W::enquire
   (SENSES
    ((EXAMPLE "enquire about the voltage")
     (meta-data :origin calo :entry-date 20050425 :change-date nil :comments projector-purchasing)
     ;;(LF-PARENT ONT::QUESTIONING)
     (lf-parent ont::enquire-inquire) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ASSOCIATED-INFORMATION-TEMPL)
     )
    )
   )

  (W::solicit
   (wordfeats (W::morph (:forms (-vb) :nom W::solicitation)))
   (SENSES
    ((EXAMPLE "solicit your approval")
     (LF-PARENT ONT::REQUEST)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (meta-data :origin calo :entry-date 20060524 :change-date nil :comments pq0149)
     )
    )
   )
  (W::REQUEST
   (wordfeats (W::morph (:forms (-vb) :nom W::request)))
   (SENSES
    ((EXAMPLE "request something")
     (LF-PARENT ONT::REQUEST)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ((EXAMPLE "request that he do something")
     (LF-PARENT ONT::REQUEST)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-effect-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-that s-that-subjunctive)))))
     )
    ((EXAMPLE "request him to do something")
     (LF-PARENT ONT::request)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ADDRESSEE-effect-OBJCONTROL-TEMPL)
     )
    )
   )

  (W::repeat
     (wordfeats (W::morph (:forms (-vb) :nom W::repetition)))
   (SENSES
    ;;;; repeat the statement/the information
    ((LF-PARENT ONT::REPEAT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
     ;;;; repeat that ...
    ((LF-PARENT ONT::REPEAT)
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-that)))))
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )   
    )
   )
  (W::iterate
     (wordfeats (W::morph (:forms (-vb) :nom W::iteration)))
   (SENSES
    ;;;; repeat the statement/the information
    ((LF-PARENT ONT::REPEAT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::recur
   (wordfeats (W::morph (:forms (-vb) :nom W::recurrence)))
   (SENSES
    ((LF-PARENT ONT::REPEAT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (templ theme-templ)
     (example "the pattern recurs in this document")
     (meta-data :origin calo-ontology :entry-date 20060713 :change-date nil :comments caloy3)
     )
    )
   )

  (W::clarify
   (wordfeats (W::morph (:forms (-vb) :nom W::clarification)))
   (SENSES
    ;;;; clarify the statement/the information
    ((LF-PARENT ONT::REPEAT)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::speak
   (wordfeats (W::morph (:forms (-vb) :past W::spoke :pastpart W::spoken)))
   (SENSES
    ;;;;
    (;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ;;;; he spoke with/to her about it
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he spoke to/with her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL 
	    (xp1 (% w::pp (w::ptype (? ptp w::to w::with)))))
     )
;;;; he spoke about it to/with her
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he spoke about it [to/with her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
     ;;;; he spoke at 5 pm
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::apologize
   (SENSES
    ((LF-PARENT ONT::apologize)
     (meta-data :origin calo :entry-date 20040915 :change-date 20090508 :comments calo)
     (example "he apologized to her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL 
	    (xp1 (% w::pp (w::ptype (? ptp w::to)))))
     )
    ((LF-PARENT ONT::apologize)
     (meta-data :origin calo :entry-date 20040915 :change-date 20090508 :comments calo)
     (example "he apologized")
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::talk
   (SENSES
    (;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he talked")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he talked with her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL 
	    (xp1 (% w::pp (w::ptype (? ptp w::to w::with)))))
     )
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he talked about it [to/with her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
    ))
  (W::chat
   (wordfeats (W::morph (:forms (-vb) :nom w::chat)))
   (SENSES
    (;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("chat%2:32:00"))
     (example "he chatted") ;maybe... --wdebeaum
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil)
     (example "he chatted with her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL 
	    (xp1 (% w::pp (w::ptype (? ptp w::to w::with)))))
     )
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil)
     (example "he chatted about it [to/with her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
    ))
   (W::express
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::send)
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     (example "he expressed the package to him")
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::express)
     (example "she expressed the idea to him")
     (meta-data :origin calo-ontology :entry-date 20051209 :change-date 20090506 :comments Express)
     ;; this verb doesn't participate in the alternation
     (TEMPL agent-theme-to-addressee-optional-templ) 
     )
    ))   
 (W::communicate
   (SENSES
    ((LF-PARENT ONT::conversation)
     (example "he communicated with her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL 
	    (xp1 (% w::pp (w::ptype (? ptp w::to w::with)))))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090505 :comments nil :vn ("battle-36.4-1"))
     (LF-PARENT ONT::conversation)
     (example "he talked about it [to/with her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
    ((LF-PARENT ONT::conversation)
     (example "communicate it to him")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     )
    ))   
  (W::argue
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("argue%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he argued")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he argued with her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL
            (xp1 (% w::pp (w::ptype w::with))))
     )
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he argued about it [with her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
    )
   )
  (W::complain
   (SENSES
    ((meta-data :origin plot :entry-date 20080413 :change-date 20090508 :comments nil :vn ("chit_chat-37.6") :wn ("argue%2:32:00"))
     (LF-PARENT ONT::complain)
     (example "he complained")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    ((LF-PARENT ONT::complain)
     (example "he complained to her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL
            (xp1 (% w::pp (w::ptype w::to))))
     )
    ((LF-PARENT ONT::complain)
     (example "he complained about it [to her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL
	     (xp2 (% w::pp (w::ptype w::to))))
     )
    )
   )
   (W::nag
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090422 :change-date nil :comments nil)
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he nagged all day")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     (preference .98)
     )
    (;;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he nagged him about it")
     (TEMPL AGENT-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL)
      )
    )
   )
  (W::discuss
   (SENSES
    (;;(LF-PARENT ONT::TALK)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (example "he discussed it [with her]")
     (TEMPL AGENT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
    )
   )
  (w::cooperate
   (wordfeats (W::morph (:forms (-vb) :nom w::cooperation)))
   (senses
    ((LF-parent ont::collaborate)
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? p W::on W::with)))))
     )
    )
   )
  (W::collaborate
    (wordfeats (W::morph (:forms (-vb) :nom w::collaboration)))
   (SENSES
    ((LF-PARENT ONT::collaborate)
     (example "they collaborated on the plan")
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? p W::on W::with)))))
     )
    )
   )
   (W::yell
   (wordfeats (W::morph (:forms (-vb) :past W::yelled :ing w::yelling)))
   (SENSES
    ((LF-PARENT ONT::REPORT-SPEECH)
     (meta-data :origin step :entry-date 20080711 :change-date nil :comments nil)
     (example "He yelled that three teams are going to Delta")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-to W::s-finite)))))
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "he yelled go over there")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% w::utt)))
     )
    ((LF-PARENT ONT::talk)
     (example "yell to him")
     (TEMPL AGENT-to-ADDRESSEE-associated-info-OPTIONAL-TEMPL )
     )
    )
   )
  (W::say
   (wordfeats (W::morph (:forms (-vb) :past W::said)))
   (SENSES
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "He said that three teams are going to Delta")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-to W::s-finite)))))
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "It says that you have to order before midnight")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-to W::s-finite)))))
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "he said go over there")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% w::utt)))
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "it doesn't say how long it will take")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL INSTRUMENT-THEME-XP-TEMPL (xp (% w::utt)))
     )
    (;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "say it to him")
     (TEMPL AGENT-THEME-to-addressee-optional-TEMPL)
     )
    )
   )

 (W::mention
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("mention%2:32:00" "mention%2:32:02"))
     ;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (example "mention it to him")
     (TEMPL AGENT-THEME-to-addressee-TEMPL)
     )
    ((meta-data :origin monroe :entry-date 20031223 :change-date nil :comments s7)
     (LF-PARENT ONT::report-speech)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "he mentioned that he saw her")
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-finite)))))
     )
    ;; we need a plain transitive entry so passive will work
    ((meta-data :origin monroe :entry-date 20060426 :change-date nil :comments s7)
     (LF-PARENT ONT::report-speech)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "he mentioned the truck" "it was mentioned")
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
 (W::acknowledge
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050830 :change-date 20090508 :comments nil)
     (EXAMPLE "he acknowledged the message")
     (LF-PARENT ONT::acknowledge)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-ASSOCIATED-INFORMATION-TEMPL)
     )
    ((meta-data :origin task-learning :entry-date 20050830 :change-date 20090508 :comments nil :vn ("confess-37.10"))
     (EXAMPLE "You acknowledge that Software Product is of U.S.")
     (LF-PARENT ONT::acknowledge)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-that)))))
     )
    )
   )

 (W::advise
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ) ; like warn
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::inform)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "I'll advise him to do it")
     (TEMPL agent-addressee-theme-objcontrol-req-templ (xp (% W::cp (W::ctype W::s-to))))
     )
    )
   )
 (W::instruct
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ) ; like warn
     (PREFERENCE 0.96)
     )
    ((meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil)
     (LF-PARENT ONT::inform)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "I'll instruct him to do it")
     (TEMPL agent-addressee-theme-objcontrol-req-templ) 
     )
    )
   )

  ((W::SAY (W::OVER))
   (wordfeats (W::morph (:forms (-vb) :past W::said)))
   (SENSES
    ;;;; swier -- say the plan over.
    ((LF-PARENT ONT::REPEAT)
     )
    )
   )
  ((W::SAY (W::AGAIN))
   (wordfeats (W::morph (:forms (-vb) :past W::said)))
   (SENSES
    ((LF-PARENT ONT::REPEAT)
     )
    )
   )
  (W::swear
   (wordfeats (W::morph (:forms (-vb) :past W::swore :pastpart W::sworn)))
   (SENSES
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "swear that it's true")
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    (;;(LF-PARENT ONT::statement)
     (lf-parent ont::swear)  ;; 20120523 GUM change new parent
     (TEMPL agent-templ)
     (preference .98)
     (EXAMPLE "he swore (at him)")
     (meta-data :origin cardiac :entry-date 20090121 :change-date nil :comments nil)
     )
    )
   )
  (W::believe
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("consider-29.9-2") :wn ("believe%2:31:04:"))
     (example "I believe that going along the coast is faster")
     (LF-PARENT ONT::BELIEVE)
     (SEM (F::Aspect F::Indiv-level))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    
    ((LF-PARENT ONT::believe)
     (meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("consider-29.9-2") :wn ("believe%2:31:04:"))
     (example "they believe her to have cancer")
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-effect-objcontrol-templ)
     )
    
    ((LF-PARENT ONT::BELIEVE)
     (meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("consider-29.9-2") :wn ("believe%2:31:04:"))
     (SEM (F::Aspect F::Indiv-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-TEMPL)
     (example "I believe")
     (preference .96)
     )
     ((LF-PARENT ONT::BELIEVE)
     (meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("consider-29.9-2") :wn ("believe%2:31:04:"))
     (SEM (F::Aspect F::Indiv-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (example "I believe him")
      )
    )
   )
  (W::disbelieve
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     (lf-parent ONT::doubt)
     (SEM (F::Aspect F::Indiv-level))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     (lf-parent ONT::doubt)
     (SEM (F::Aspect F::Indiv-level))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
 (W::trust
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::BELIEVE)
     (SEM (F::Aspect F::Indiv-level))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )

  (W::hope
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("wish-62"))
     (LF-PARENT ONT::want)
     (TEMPL experiencer-effect-xp-templ (xp (% w::cp (w::ctype (? ctp w::s-that w::s-to))))) ; like wish
     (PREFERENCE 0.96) ;; prefer noun sense?
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("wish-62"))
     (LF-PARENT ONT::want)
     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype w::for)))) ; like wish
     (PREFERENCE 0.96)
     )
    )
   )
  (W::imagine
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("appoint-29.1-2"))
     (LF-PARENT ONT::cogitation)
     (example "I must have imagined it")
     (TEMPL cognizer-theme-xp-templ) ; like consider,rate
     (PREFERENCE 0.96)
     )
    ((meta-data :origin monroe :entry-date 20031217 :change-date nil :comments s7)
     (LF-PARENT ONT::BELIEVE)
     (example "I imagine that this will work")
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    )
   )
  (W::think
   (wordfeats (W::morph (:forms (-vb) :past W::thought)))
   (SENSES
    ;;;; swier -- I think that this plan is better.
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("consider-29.9-2"))
     (LF-PARENT ONT::believe)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ;;;; swier -- I didn't think of that.
    ((LF-PARENT ONT::cogitation)
     (meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :wn ("think%2:31:01:"))
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? p W::of W::about)))))
     )
    ;;;; I think
    ((LF-PARENT ONT::believe)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-TEMPL)
     (preference .96)
     )

    ((LF-PARENT ONT::believe)
     (example " they thought her to have cancer")
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-effect-objcontrol-templ)
     )
    
    ;; need this to get the dobj gap
    ((LF-PARENT ONT::believe)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "what do you think")
     (TEMPL COGNIZER-theme-xp-TEMPL)
     )
    )
   )

  (W::bet
   (wordfeats (W::morph (:forms (-vb) :past W::bet)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("rely-70"))
     (LF-PARENT ont::bet)
     (example "you can bet on that")
     (TEMPL cognizer-theme-xp-templ (xp (% w::pp (w::ptype w::on)))) ; like rely,depend,count
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::BELIEVE)
     (example "I bet that I know what's going on")
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     (meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2)
     )
    ((meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil)
     (LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-COST-THEME-TEMPL (xp (% W::PP (W::ptype (? pt W::for W::on)))))
     (example "he bet 5 dollars on/for that horse")
     )
    ((meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil)
     (LF-PARENT ONT::commerce-pay)
     (TEMPL AGENT-COST-THEME-TEMPL  (xp (% W::cp (W::ctype W::s-finite))))
     (example "he bet 5 dollars that his horse would win the race")
     )
    )
   )
  (W::worry
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("worry%2:37:01" "worry%2:42:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::worrying)
     (TEMPL experiencer-templ) ; like mind
     (PREFERENCE 0.96)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090605 :comments nil :vn ("marvel-31.3-2"))
     (EXAMPLE "He worries about it ")
     (LF-PARENT ONT::worrying)
     (TEMPL experiencer-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? p W::about)))))
     )
    )
   )
  (W::confuse
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("confuse%2:31:03" "confuse%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("amalgamate-22.2-2"))
     (LF-PARENT ONT::confuse)
     (TEMPL cognizer-theme-co-theme-templ (xp (% w::pp (w::ptype w::with)))) ; like associate but changed sense to ont::confuse & agent role to cognizer
     (PREFERENCE 0.96)
     )
    ((EXAMPLE "He confused the issues ")
     (LF-PARENT ONT::CONFUSE)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (W::blur
   (SENSES
    ((EXAMPLE "blur the edges of the photo")
     (LF-PARENT ONT::visual-adjust)
     (meta-data :origin task-learning :entry-date 20050822 :change-date 20090504 :comments nil)
     )
    ((EXAMPLE "libraries blur the distinction between modifying and using a program")
     (LF-PARENT ONT::confuse)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (meta-data :origin task-learning :entry-date 20050822 :change-date nil :comments nil)
     )
    )
   )
  (W::garble
   (SENSES
    ((EXAMPLE "he garbled the message")
     (LF-PARENT ONT::confuse)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (meta-data :origin task-learning :entry-date 20050823 :change-date nil :comments nil)
     )
    )
   )
  (W::mean
   (wordfeats (W::morph (:forms (-vb) :ing W::meaning :past W::meant)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("wish-62"))
     (LF-PARENT ONT::intention)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-to)))) ; like plan,intend
     (PREFERENCE 0.96)
     )
    ;;;; I mean that ...
    ((LF-PARENT ONT::intention)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (example "I mean that ...")
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((LF-PARENT ONT::intention)
     (example "I mean it/yes")
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% w::utt)))
     )
    ;; can't push a w::utt through the wh gap rules so we need this -- should be fixed
    ((LF-PARENT ONT::intention)
     (example "what do you mean")
     (meta-data :origin calo :entry-date 20050505 :change-date nil :comments plow)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL)
     )    
    )
   )

  (W::denote
   (SENSES
    ((lf-parent ont::classify)
      (templ theme-predicate-xp-templ)
      (meta-data :origin calo-ontology :entry-date 20060713 :change-date 20090501 :comments ma-request)
      )	  
    )
   )

  (W::assume
   (SENSES
    ;;;; swier -- I assumed that there was enough space for the cargo.
    ((LF-PARENT ONT::ASSUME)
     (meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("consider-29.9-2") :wn ("assume%2:31:00"))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    )
   )
 (W::presume
   (SENSES
    ((meta-data :origin monroe :entry-date 20031217 :change-date nil :comments s15)
     (LF-PARENT ONT::ASSUME)
       (meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("consider-29.9-2") :wn ("presume%2:31:00"))
     (EXAMPLE "I presume (that) he knows what he's doing")
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((meta-data :origin monroe :entry-date 20031217 :change-date nil :comments s15)
     (LF-PARENT ONT::ASSUME)
       (meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("consider-29.9-2") :wn ("presume%2:31:00"))
     (TEMPL COGNIZER-TEMPL)
     )
    )
   )

  (W::suppose
   (SENSES
    ((LF-PARENT ONT::SUPPOSE)
     (meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("consider-29.9-2") :wn ("suppose%2:32:00"))
     (example "I suppose that going along the coast is faster")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    )
   )
  (W::suggest
   (SENSES    
    ;;;; I suggested that ...
    (;;(LF-PARENT ONT::SUGGEST)
     (lf-parent  ont::propose-recommend-suggest) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-effect-XP-TEMPL (xp (% W::cp (W::ctype (? ctp W::s-finite w::s-that-subjunctive)))))
     )
    ((meta-data :origin calo :entry-date 20040121 :change-date nil :comments calo-y1script)
     ;;(LF-PARENT ONT::SUGGEST)
     (lf-parent  ont::propose-recommend-suggest) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "He suggested a plan")
     )
    (;;(LF-PARENT ONT::SUGGEST)
     (lf-parent  ont::propose-recommend-suggest) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL THEME-ASSOCIATED-INFORMATION-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     (example "the evidence suggests that ...")
     )
    )
   )
 (W::prescribe
   (SENSES
    ((meta-data :origin cernl :entry-date 20100607 :change-date nil :comments hpi-acn-1)
     (LF-PARENT ONT::prescribing)
     (example "he prescribed the medication" "she had been prescribed Lexapro")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (templ agent-theme-for-recipient-templ)
     )
    ((lf-parent ont::prescribing)
     (templ agent-recipient-theme-alternation-templ)
     (example "he was prescribed the medication by the doctor")
     (meta-data :origin cernl :entry-date 20100607)
     )
    ((lf-parent ont::prescribing)
     (templ agent-theme-recipient-alternation-templ)
     (example "the medication was prescribed by the doctor")
     (meta-data :origin cernl :entry-date 20100607)
     )
    )
   )
  (W::recommend
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("judgement-33") :wn ("recommend%2:32:00"))
     ;;(LF-PARENT ont::suggest)
     (lf-parent  ont::propose-recommend-suggest) ;; 20120524 GUM change new parent
     (TEMPL agent-addressee-templ) ; like thank but changed to ont::suggest
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     ;;(LF-PARENT ONT::SUGGEST)
     (lf-parent  ont::propose-recommend-suggest) ;; 20120524 GUM change new parent
     (example "he recommends that you get enough sleep")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-effect-XP-TEMPL (xp (% W::cp (W::ctype (? ctp W::s-finite w::s-that-subjunctive)))))
     )
    ;; adding the optional addressee -- otherwise this fails
    ((meta-data :origin calo :entry-date 20040504 :change-date 20090130 :comments html-purchasing-corpus)
     ;;(LF-PARENT ONT::SUGGEST)
     (lf-parent  ont::propose-recommend-suggest) ;; 20120524 GUM change new parent
     (example "I recommend this computer (to you)")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-to-addressee-optional-TEMPL)
     )
    )
   )
  (W::propose
   (SENSES
    ((meta-data :origin monroe :entry-date 20031219 :change-date nil :comments s15)
     ;;(LF-PARENT ONT::SUGGEST)
     (lf-parent  ont::propose-recommend-suggest) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-effect-XP-TEMPL (xp (% W::cp (W::ctype (? cpt W::s-finite w::s-to w::s-that-subjunctive)))))
     (example "he proposed that we make a plan")
     )
    ((meta-data :origin monroe :entry-date 20031219 :change-date nil :comments s15)
     ;;(LF-PARENT ONT::SUGGEST)
     (lf-parent  ont::propose-recommend-suggest) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "He proposed a plan")
     )
    )
   )
  (W::confirm
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("indicate-76-1-1"))
     (LF-PARENT ONT::CONFIRM)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "confirm that they arrived")
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((LF-PARENT ONT::NEGOTIATE)
     (example "he confirmed the information with him")
     (TEMPL AGENT-THEME-CO-AGENT-OPTIONAL-TEMPL)
     )
    )
   )
 (W::negotiate
   (SENSES
    ((LF-PARENT ONT::negotiate)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "they negotiated a deal")
     (TEMPL AGENT-THEME-co-agent-optional-TEMPL)
     )
    )
   )

  (W::discover
   (wordfeats (W::morph (:forms (-vb) :past W::discovered :ing w::discovering :nom w::discovery)))
   (SENSES
    ((LF-PARENT ONT::coming-to-believe)
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-that))))
     (example "he discovered that the route is not longer passable")
     (meta-data :origin bee :entry-date 20040609 :change-date nil :comments portability-expt :vn ("discover-84"))
     )
    ((LF-PARENT ONT::come-to-understand)
     (example "he discovered John in the kitchen")
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::coming-to-believe)
     (example "he discovered how to do it")
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::NP (W::sort W::wh-desc))))
     (meta-data :origin plow :entry-date 20060714 :change-date nil :comments caloy3)
     )
    )
   )

  (W::GUESS
   (wordfeats (W::morph (:forms (-vb) :3s W::guesses)))
   (SENSES
    ((LF-PARENT ONT::suppose)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "I guess that we could try that")
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((LF-PARENT ONT::SUPPOSE)
     (example "I guess")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-TEMPL)
     (preference .96)
     )
    ((LF-PARENT ONT::coming-to-believe)
     (example "he guessed the answer")
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (meta-data :origin calo-ontology :entry-date 20060426 :change-date nil :comments nil)
     )
    )
   )

  (W::infer
   (wordfeats (W::morph (:forms (-vb) :3s W::guesses)))
   (SENSES
    ((LF-PARENT ONT::coming-to-believe)
     (example "he inferred the answer")
     (meta-data :origin calo-ontology :entry-date 20060426 :change-date nil :comments nil)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
     ((LF-PARENT ONT::coming-to-believe)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "I inferred that it was time to take actionq")
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    )
   )

  (W::predict
     (wordfeats (W::morph (:forms (-vb) :past W::prediction :nom w::prediction)))
   (SENSES
    ((LF-PARENT ONT::predict)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
      (meta-data :origin calo-ontology :entry-date 20060426 :change-date nil :comments nil :wn ("predict%2:32:00"))
     (example "he predicts that it will rain tomorrow")
     )
    ((LF-PARENT ONT::predict)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-affected-OPTIONAL-TEMPL (xp (% w::pp (w::ptype w::for))))
      (meta-data :origin calo-ontology :entry-date 20060426 :change-date nil :comments nil :wn ("predict%2:32:00"))
     )
    )
   )
 (W::forecast
  (wordfeats (W::morph (:forms (-vb) :past W::forecast)))
   (SENSES
    ((LF-PARENT ONT::predict)
     (preference .92) ;; prefer noun sense
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
   (TEMPL COGNIZER-THEME-affected-OPTIONAL-TEMPL (xp (% w::pp (w::ptype w::for))))
     (example "the weatherman forecasts rain [for this zipcode]")
     )
    )
   )
  (W::remember
   (wordfeats (W::morph (:forms (-vb) :past W::remembered :ing w::remembering :nom w::remembrance)))
   (SENSES
    ((LF-PARENT ONT::REMEMBER)
     (meta-data :origin calo :entry-date 20051219 :change-date nil :comments nil :wn ("remember%2:31:00"))
     (example "remember that every cloud has a silver lining")
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((LF-PARENT ONT::REMEMBER)
     (example "he remembers everything")
     (meta-data :origin calo :entry-date 20051219 :change-date nil :comments nil :wn ("remember%2:31:00"))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::remember)
     (meta-data :origin calo :entry-date 20051219 :change-date nil :comments nil :wn ("remember%2:31:00"))
     (example "remember to take your prinivil")
     (TEMPL COGNIZER-THEME-SUBJCONTROL-TEMPL)
     )
    ((LF-PARENT ONT::remember)
     (example "I remember now")     
     (meta-data :origin leam :entry-date 20070201 :change-date nil :comments lam-demo2  :wn ("remember%2:31:00"))
     (TEMPL COGNIZER-TEMPL)
     (preference 0.95)
     )    
    )
   )
  (W::memorize
   (wordfeats (W::morph (:forms (-vb) :past W::memorized :ing w::memorizing w::memorization)))
   (SENSES
    ((LF-PARENT ONT::memorize)
     (meta-data :origin quicken :entry-date 20071129 :change-date nil :comments nil :wn ("memorize%2:31:00"))
     (example "he memorized everything")
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (W::wonder
   (wordfeats (W::morph (:forms (-vb) :past W::wondered :ing w::wondering :nom w::wonder)))
   (SENSES
    ;;;; I wonder
    ((LF-PARENT ONT::cogitation)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    ;;;; I wonder if it will work
    ((LF-PARENT ONT::cogitation)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-if))))
     )
    )
   )

  (W::determine
   (wordfeats (W::morph (:forms (-vb) :nom w::determination)))
   (SENSES
    ((LF-PARENT ONT::coming-to-believe)
     (example "I determined that he left")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((LF-PARENT ONT::coming-to-believe)
     (example "determine the truck's capacity")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (w::conclude
     (wordfeats (W::morph (:forms (-vb) :nom w::conclusion)))
   (SENSES
    ((LF-PARENT ONT::coming-to-believe)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     (example "we concluded that weaker conditions might promote sharing better")
     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil :wn ("conclude%2:31:00"))
     )
    )
   )
  (W::hear
   (wordfeats (W::morph (:forms (-vb) :past W::heard)))
   (SENSES
    ;;;; I heard that you ...
    ((LF-PARENT ONT::becoming-aware)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ;;;; I heard the sound
    ((LF-PARENT ONT::ACTIVE-PERCEPTION)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
     )
    ;;;; I can't hear
    ((LF-PARENT ONT::active-perception)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL EXPERIENCER-TEMPL)
     )
    ((meta-data :origin trips :entry-date 20090331 :change-date nil :comments missing-sense)
     (LF-PARENT ONT::active-perception)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "he heard him arrive")
     (TEMPL experiencer-action-objcontrol-templ (xp (% W::VP (W::vform (? vf W::base w::ing)))))
     )
    )
   )

 (W::listen
  (wordfeats (W::morph (:forms (-vb) :past W::listened :ing W::listening)))
   (SENSES
    ((LF-PARENT ONT::ACTIVE-PERCEPTION)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL EXPERIENCER-THEME-XP-TEMPL  (xp (% W::pp (W::ptype W::to))))
     (example "listen to this")
     (meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2)
     )
    ((LF-PARENT ONT::ACTIVE-PERCEPTION)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL EXPERIENCER-TEMPL)
     (example "you're not listening")
     (meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2)
     )
    )
   )

(W::smell
   (SENSES
     ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("stimulus_subject-30.4") :wn ("smell%2:39:00" "smell%2:39:02"))
     (LF-PARENT ONT::appears-to-have-property)
     (example "it smells like trouble")
     (TEMPL theme-pred-experiencer-optional-templ) ; like look
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::ACTIVE-PERCEPTION)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
     )
    ((meta-data :origin trips :entry-date 20090331 :change-date nil :comments missing-sense)
     (LF-PARENT ONT::active-perception)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "he smelled the cake bake")
     (TEMPL experiencer-action-objcontrol-templ (xp (% W::VP (W::vform (? vf W::base w::ing)))))
     )
    )
   )

  (W::know
   (wordfeats (W::morph (:forms (-vb) :past W::knew :pastpart W::known)))
   (SENSES
    ;;;; I know (that) he...
    ((LF-PARENT ONT::KNOW)
      (meta-data :origin trips :entry-date unknown :change-date nil :comments nil :wn ( "know%2:31:02"))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (w::ctype w::s-that) (w::wh w::-))))
     )
    ((LF-PARENT ONT::KNOWIF)
     (example "I know whether he left")
     (meta-data :origin csli-ts :entry-date 20070323 :change-date nil :comments nil :wn ("know%2:31:01"))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (w::ctype w::s-if) 
					   (w::wh w::-))))
     )
    ((LF-PARENT ONT::KNOWIF)
     (example "I know whether to leave")
      (meta-data :origin csli-ts :entry-date 20070323 :change-date nil :comments nil :wn ("know%2:31:01"))
      (TEMPL COGNIZER-THEME-SUBJCONTROL-TEMPL (xp (% W::cp (w::ctype w::s-to) (w::condition (:* ont::pos-condition ?x))
					   (w::wh w::-))))
     )
    
;;;; ::::::: 12/5/07  I'm reinstating this rule to get "I know what city it is in "  to work
;;;; :::::::          and I tightened the restrictions on the rule after to eliminate the WH complements
;;;; :::::::          The problem was that the WH feature was propagating up and the sentence came out as a question
;;;; :::::::          and the WH-TERM was not built.
    ;;;; I know how to.../ I know where he is
   ((LF-PARENT ONT::FAMILIAR)
    (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::NP (W::sort W::wh-desc))))
    )
    ((LF-PARENT ONT::FAMILIAR)
     (SEM (F::Aspect F::Stage-level))
     (example "I know him (as a friend)")
     (TEMPL COGNIZER-THEME-as-predicate-optional-TEMPL (xp (% W::NP (w::wh W::-))))     
     )   
    ((LF-PARENT ONT::KNOW)
     (example "I know")
     (TEMPL COGNIZER-TEMPL)
     (preference .96)
     )
    )
   )

  (W::recognize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::come-to-understand)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like realize
     (example "he recognized that he was a spy")
     (PREFERENCE 0.98)
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::FAMILIAR)
     (example "He recognized him [as a spy)")
     (TEMPL COGNIZER-THEME-as-predicate-optional-TEMPL (xp (% W::NP (w::wh W::-))))  
     )
    )
   )

  ((W::find (W::out))
   (wordfeats (W::morph (:forms (-vb) :past W::found)))
   (SENSES
    ;;;; swier -- any of these s-that verbs can take a s[wh] complement in English...is that being captured here?
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090513 :comments nil :vn ("discover-82-1-1"))
     (EXAMPLE "I found out that he can do it")
     (LF-PARENT ONT::come-to-understand)
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? ct W::s-that)))))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090513 :comments nil :vn ("discover-82-1-1"))
     (EXAMPLE "I'll find out if he can do it")
     (LF-PARENT ONT::come-to-understand)
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? ct W::s-if)))))
     )
    ((EXAMPLE "She found out")
     (LF-PARENT ONT::come-to-understand)
     (TEMPL COGNIZER-TEMPL)
     (preference .97) 
     )
    )
   )
  ((W::figure (W::out))
   (SENSES
    ;;;; I figured out that...
    ((LF-PARENT ONT::coming-to-believe)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     (meta-data :origin bee :entry-date 20040609 :change-date nil :comments portability-expt)
     )
    ((LF-PARENT ONT::solve)
     (example "figure out a plan" "figure out when to go")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
 ((W::work W::out)
  (wordfeats (W::morph (:forms (-vb) :nom w::workout)))
   (SENSES
    ((LF-PARENT ONT::working-out)
     (example "he works out every day")
     (TEMPL agent-TEMPL)
     )
    )
   )
  ((W::work (W::out))
   (SENSES
    ((LF-PARENT ONT::coming-to-believe)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     (example "he worked out that he already knew the answer")
     (meta-data :origin calo-ontology :entry-date 20060426 :change-date nil :comments nil)
     )
    ((LF-PARENT ONT::solve)
     (example "work out a plan" "work out when to go")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo-ontology :entry-date 20060426 :change-date nil :comments nil)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (W::forget
   (wordfeats (W::morph (:forms (-vb) :ing W::forgetting :past W::forgot :pastpart W::forgotten)))
   (SENSES
    ((LF-PARENT ONT::FORGET)
     (example "he forgot to take aspirin")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL COGNIZER-THEME-SUBJCONTROL-TEMPL)
     ((meta-data :origin "trips" :entry-date 20060315 :change-date nil :comments nil :wn ( "forget%2:31:03")))
     )
    ((LF-PARENT ONT::FORGET)
     (example "he forgot that he was coming")
     ((meta-data :origin "trips" :entry-date 20060315 :change-date nil :comments nil :wn ("forget%2:31:00" "forget%2:31:01"  "forget%2:31:02")))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ((LF-PARENT ONT::FORGET)
     (example "he forgot the recipe")
     ((meta-data :origin "trips" :entry-date 20060315 :change-date nil :comments nil :wn ("forget%2:31:00" "forget%2:31:01"  "forget%2:31:02")))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::FORGET)
     (meta-data :origin chf :entry-date 20070904 :change-date nil :comments nil)
     (example "I forget")
     ((meta-data :origin "trips" :entry-date 20060315 :change-date nil :comments nil :wn ("forget%2:31:00" "forget%2:31:01"  "forget%2:31:02"  "forget%2:31:03")))
     (TEMPL COGNIZER-TEMPL)
     (preference .97)
     )
    ((LF-PARENT ONT::FORGET)
     (example "he forgot about the recipe")
     ((meta-data :origin "trips" :entry-date 20060315 :change-date nil :comments nil :wn ("forget%2:31:00" "forget%2:31:01"  "forget%2:31:02")))
     (TEMPL COGNIZER-THEME-XP-TEMPL  (xp (% W::pp (W::ptype W::about))))
     )

    ;; this sense only works with "actions"
    ((LF-PARENT ONT::CANCEL)
     (example "forget the problem")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     )
    )
   )

  (W::ignore
     (SENSES
     ((LF-PARENT ONT::FORGET)
      (meta-data :origin plow :entry-date 20050401 :change-date nil :comments nil)
      (example "ignore that option")
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (TEMPL COGNIZER-THEME-XP-TEMPL)
      )
     )
     )

  (W::FIND
   (wordfeats (W::morph (:forms (-vb) :past W::found :nom w::find)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("declare-29.4-1-1-2"))
     (LF-PARENT ONT::scrutiny)
     (example "I find him difficult")
     (TEMPL cognizer-theme-adj-predicate-templ) ; like judge
     (PREFERENCE 0.96)
     )

    ((LF-PARENT ONT::come-to-understand)
     (example "she found him to have cancer")
     (meta-data :origin calo :entry-date 20040907 :change-date nil :comments caloy2 :vn ("wish-62"))
     (TEMPL cognizer-effect-OBJCONTROL-TEMPL)
     )

    ((EXAMPLE "Find me a computer")
     (LF-PARENT ONT::FIND)
     (TEMPL AGENT-RECIPIENT-THEME-TEMPL)
     )
    ((EXAMPLE "Find a clear lane")
     (meta-data :origin lou :entry-date 20040615 :change-date nil :comments nil)
     (LF-PARENT ONT::FIND)
     )
    )
   )
  (W::LOCATE
   (SENSES
    ;;;;
    ;;;; disprefer this sense (only affects passive form)
    ((LF-PARENT ONT::find)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (PREFERENCE 0.96)
     )
    )
   )
  (W::LOCATED
   (wordfeats (W::VFORM W::PASSIVE) (W::AGR ?agr) (W::MORPH (:forms NIL)))
   (SENSES
    ((LF-PARENT ONT::EXISTS)
     (TEMPL THEME-TEMPL)
     )
    )
   )

  (W::SETTLE
   (SENSES
    ((LF-PARENT ONT::stay)
     (example "the immigrants settled in the west" "the dust settled on the counter")
     (TEMPL THEME-TEMPL)
     (meta-data :origin step :entry-date 20080623 :change-date nil :comments nil)
     )
    ((LF-PARENT ONT::decide)
     (example "they settled the issue")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ cognizer-theme-xp-templ)
     (meta-data :origin general :entry-date 20110131 :change-date nil :comments jansen)
     )
    )
   )

  (W::BAG
   (SENSES
    ;;;; swier -- Yo G, bag it!
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     )
    )
   )
  (W::scratch
   (SENSES
    ;;;; swier -- scratch that.
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     )
    )
   )

  ((W::leave (w::out))
     (wordfeats (W::morph (:forms (-vb) :past W::left)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060710 :change-date nil :comments nil)
     (LF-PARENT ONT::omit)
     (example "leave this paragraph out")
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
  (W::delete
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("remove-10.1") :wn ("delete%2:32:00" "delete%2:35:00"))
     (LF-PARENT ONT::omit)
     (example "delete this paragraph from the text")
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from))))
     )
    ;;;; swier -- delete that.
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     (PREFERENCE 0.96) ;; prefer omit transitive sense
     )
    ((LF-PARENT ONT::omit)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-TEMPL)
     (meta-data :origin plot :entry-date 20080610 :change-date nil :comments nil :vn ("remove-10.1") :wn ("delete%2:32:00" "delete%2:35:00"))
     (example "delete")
     (preference .96)
     )
    )
   )
  (W::erase
   (SENSES
    ((LF-PARENT ONT::CANCEL)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-EFFECT-XP-TEMPL)
     (EXAMPLE "erase the junk mail")
     (meta-data :origin task-learning :entry-date 20050823 :change-date nil :comments nil)
     )
    )
   )

  (W::PLAN
   (wordfeats (W::morph (:forms (-vb) :past W::planned :ing w::planning :nom w::plan)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090515 :comments nil :vn ("wish-62") :wn ("plan%2:31:01" "plan%2:31:00" "plan%2:36:00"))
     (LF-PARENT ONT::planning)
     (templ cognizer-effect-objcontrol-templ)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (EXAMPLE "Let's plan the evacuation [to go out this door]")
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090515 :comments nil :vn ("wish-62")  :wn ("plan%2:31:01" "plan%2:31:00" "plan%2:36:00"))
     (LF-PARENT ONT::planning)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-to))))
     (EXAMPLE "Let's plan to evacuate people")
     )
    )
   )
  (W::intend
    (wordfeats (W::morph (:forms (-vb) :nom w::intention)))
   (SENSES
    ((LF-PARENT ONT::Intention)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-to))))
     (EXAMPLE "remove the addresses if you don't intend to use them")
     (meta-data :origin task-learning :entry-date 20050916 :change-date nil :comments nil :vn ("wish-62") :wn ("intend%2:31:00" "intend%2:31:01"))
     )
    )
   )
  (W::create
   (SENSES
    ((LF-PARENT ONT::CREATE)
     (example "create a plan")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((LF-PARENT ONT::CREATE)
     (example "an open switch creates a gap" "it created fanatics in Afganistan")
     ;; note that create-26.4 is approximate as VN does not allow for a cause
     (meta-data :origin beetle2-onr2 :entry-date 20071123 :change-date nil :comments nil :vn ("create-26.4"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     )    
    )
   )

 (W::host
   (SENSES
    ((LF-PARENT ONT::host)
     (example "host an event")
     (meta-data :origin plow :entry-date 20060712 :change-date nil :comments nil)
     )
    )
   )
  (W::sponsor
   (SENSES
    ((LF-PARENT ONT::host)
     (example "sponsor an event")
     (meta-data :origin plow :entry-date 20060712 :change-date nil :comments nil)
     )
    )
   )
  (W::prepare
   (SENSES
    ((LF-PARENT ONT::CAUSE-MAKE)
     (example "prepare software to be linked with application programs")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil :vn ("preparing-26.3-1"))
     )
    )
   )
  (W::develop
   (wordfeats (W::morph (:forms (-vb) :past W::developed :ing W::developing :nom w::development)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("grow-26.2") :wn ("develop%2:30:00" "develop%2:30:01" "develop%2:30:10" "develop%2:36:09"))
     (LF-PARENT ONT::grow)
     (TEMPL theme-templ) ; like grow
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("occurrence-48.3"))
     (LF-PARENT ONT::happen)
     (example "a situation developed")
     (TEMPL theme-templ) ; like occur,happen
     (PREFERENCE 0.96)
     )
    ((meta-data :origin cernl :entry-date 20110210 :change-date nil :comments ticket-244)
     (LF-PARENT ONT::develop)
     (example "the patient developed a cough")
     (TEMPL affected-theme-xp-templ)
     )
;    ((LF-PARENT ONT::CREATE)
;     (example "develop public-key cryptography")
;     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
;     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
;     )
    )
   )
  (W::form
    (wordfeats (W::morph (:forms (-vb) :nom w::formation)))
   (SENSES
    ((LF-PARENT ONT::cause-make)
     (example "form a work based on the library")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050831 :change-date nil :comments nil)
     )
    ((LF-PARENT ONT::cause-make)
     (example "trees form a circle" "a and the battery form a closed path")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ cause-theme-xp-templ)
     (meta-data :origin beetle :entry-date 20090203 :change-date nil :comments nil)
     )
    )
   )

  (W::generate
     (wordfeats (W::morph (:forms (-vb) :nom w::generation)))
   (SENSES
    ((LF-PARENT ONT::CREATE)
     (example "generate an android")
     (meta-data :origin calo :entry-date 20050418 :change-date nil :comments projector-purchasing)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::establish
     (wordfeats (W::morph (:forms (-vb) :nom w::establishment)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("indicate-76-1-1"))
     (LF-PARENT ONT::confirm)
     (example "establish the likelihood of the story")
     (TEMPL agent-theme-xp-templ) ; like reveal,prove
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::establish)
     (example "establish an organization on principle")
     (TEMPL agent-theme-property-optional-templ)
     )
    )
   )

  (W::change
     (wordfeats (W::morph (:forms (-vb) :nom w::change)))
   (SENSES
    ((LF-PARENT ONT::change)
     (example "change the plan")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((LF-PARENT ONT::change)
     (example "change the color to grey")
     (TEMPL AGENT-THEME-RESULT-TEMPL (xp (% w::pp (w::ptype w::to))))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin fruitcarts :entry-date 20050331 :change-date nil :comments fruitcarts-11-1 :vn ("turn-26.6-1"))   
     )
    ((lf-parent ont::change-device-state)
     (TEMPL AGENT-THEME-RESULT-TEMPL (xp (% w::pp (w::ptype w::to))))
     (Example "Change the knob to VDC")
     (meta-data :origin bee :entry-date 20040412 :change-date nil :comments test-s)    
     )
     ((meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)
      (LF-PARENT ONT::change)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (example "it changed in color / with time" "the room changed")
      (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
      )
   ))

  (W::alter
     (wordfeats (W::morph (:forms (-vb) :nom w::alteration)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("turn-26.6.1") :wn ("alter%2:30:01"))
     (LF-PARENT ONT::modify)
     (TEMPL agent-theme-result-optional-templ (xp (% w::pp (w::ptype w::to)))) ; like translate
     )
    ((meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)
     (LF-PARENT ONT::modify)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "it changed in color / with time" "the room changed")
     (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
      )
   ))

 (W::customize
    (wordfeats (W::morph (:forms (-vb) :nom w::customization)))
   (SENSES
    ((LF-PARENT ONT::device-adjust)
     (example "you can customize your computer")
     (TEMPL agent-theme-result-optional-templ (xp (% w::pp (w::ptype w::to)))) 
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo :entry-date 20041122 :change-date 20090504 :comments caloy2)
     )
   ))

 (W::specialize
    (wordfeats (W::morph (:forms (-vb) :nom w::specialization)))
   (SENSES
    ((LF-PARENT ONT::device-adjust)
     (example "you can specialize your computer")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo :entry-date 20041122 :change-date 20090504 :comments caloy2)
     )
   ))


(W::update
   (wordfeats (W::morph (:forms (-vb) :nom w::update)))
   (SENSES
    ((LF-PARENT ONT::device-adjust)
     (example "you can update your system")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo :entry-date 20041122 :change-date 20090504 :comments caloy2)
     )
    ((meta-data :origin calo :entry-date 20040915 :change-date nil :comments caloy2)
     (LF-PARENT ONT::revise)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ))
(W::calibrate
   (wordfeats (W::morph (:forms (-vb) :nom w::calibration)))
   (SENSES
    ((LF-PARENT ONT::adjust)
     (example "calibrate the display")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     )
    ))
(W::tune
   (SENSES
    ((LF-PARENT ONT::device-adjust)
     (example "fine-tune the printing options")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050912 :change-date 20090504 :comments nil)
     )
    ))

 (W::transform
    (wordfeats (W::morph (:forms (-vb) :nom w::transformation)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ont::transformation)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-theme-result-optional-templ (xp (% w::pp (w::ptype (? w::into w::to)))))
     )
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments verbnet-expansion)
     (LF-PARENT ont::transformation)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-result-optional-templ (xp (% w::pp (w::ptype (? w::into w::to)))))
     )
    )
   )
(W::vary
   (wordfeats (W::morph (:forms (-vb) :nom w::variation)))
   (SENSES
    ((meta-data :origin calo :entry-date 20040915 :change-date 20090504 :comments caloy2)
     (LF-PARENT ONT::fluctuate)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::fluctuate)
     (example "they vary in size")
     (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
     )
    )
   )
(W::simplify
   (wordfeats (W::morph (:forms (-vb) :nom w::simplification)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date 20090504 :comments html-purchasing-corpus)
     (LF-PARENT ONT::language-adjust)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
(W::abbreviate
   (wordfeats (W::morph (:forms (-vb) :nom w::abbreviation)))
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050831 :change-date 20090504 :comments nil)
     (EXAMPLE "you can abbreviate the example as follows")
     (LF-PARENT ONT::language-adjust)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
(W::truncate
   (wordfeats (W::morph (:forms (-vb) :nom w::truncation)))
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050902 :change-date nil :comments nil)
     (EXAMPLE "you can truncate the example as follows")
     (LF-PARENT ONT::adjust)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
(W::shorten
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050919 :change-date 20090504 :comments nil)
     (EXAMPLE "names in your address book are shortened to the name only, without the email address")
     (LF-PARENT ONT::decrease)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
(W::rewrite
 (wordfeats (W::morph (:forms (-vb) :past W::rewrote :pastpart W::rewritten :ing W::rewriting :nom w::rewrite)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::revise)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((meta-data :origin lam :entry-date 20050707 :change-date nil :comments missing-as-frame)
     (LF-PARENT ONT::revise)
     (SEM (F::Aspect F::bounded))
     (TEMPL AGENT-THEME-RESULT-TEMPL (xp (% w::PP (w::ptype w::as)))) 
     )
    )
   )
  (W::revise
     (wordfeats (W::morph (:forms (-vb) :nom w::revision)))
   (SENSES
    ((LF-PARENT ONT::REVISE)
     (example "revise the plan")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::adjust
     (wordfeats (W::morph (:forms (-vb) :nom w::adjustment)))
   (SENSES
    ((LF-PARENT ONT::adjust)
     (example "adjust my dosage")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    ((meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)
     (LF-PARENT ONT::adjust)
     (example "it adjusted with time")
     (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt w::in W::with)))))
     )
    )
   )
 (W::shift
    (wordfeats (W::morph (:forms (-vb) :nom w::shift)))
   (SENSES
    ((LF-PARENT ONT::adjust)
     (meta-data :origin calo-ontology :entry-date 20060106 :change-date nil :comments meeting-understanding)
     (example "shift the schedule")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )

  (W::shape
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("build-26.1-1"))
     (LF-PARENT ONT::shape-change)
     (TEMPL agent-theme-result-templ (xp (% w::pp (w::ptype w::into)))) ; like carve
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::in-relation)
     (example "a thing shaped like a box")
     (meta-data :origin fruitcarts :entry-date 20050418 :change-date nil :comments nil)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     )
    )
   )
  (W::check
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("search-35.2") :wn ("check%2:31:02" "check%2:32:10"))
     (LF-PARENT ONT::scrutiny)
     (example "check the plan")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::on))))
     )
    ((meta-data :origin calo :entry-date 20040413 :change-date nil :comments y1v3)
     (LF-PARENT ONT::scrutiny)
     (example "let me check")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-TEMPL)
     (PREFERENCE 0.96) ;; disprefer intransitive
     )
    ((EXAMPLE "Check or uncheck the selected calendar in the Calendars list")
     (LF-PARENT ONT::select)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     )
    ((meta-data :origin plow :entry-date 20060531 :change-date nil :comments nil)
     (LF-PARENT ONT::SELECT)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "check red")
     (templ agent-theme-pred-templ)
     )
    ((LF-PARENT ONT::coming-to-believe)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     (example "check whether/if/that it's a book order")
     (meta-data :origin plow :entry-date 20050909 :change-date nil :comments nil)
     )
    )
   )
(W::control
   (wordfeats (W::morph (:forms (-vb) :nom W::control)))
   (SENSES
    ((LF-PARENT ONT::control-manage)
     (example "control the process")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-THEME-XP-TEMPL)
      (meta-data :origin calo :entry-date 20050527 :change-date nil :comments projector-purchasing)
     )
    ((LF-PARENT ONT::control-manage)
     (example "the piston controls the cylinder")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-THEME-XP-TEMPL)
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil)
     )
    )
   )
(W::concentrate
   (SENSES
    ((LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "concentrate on the problem")
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::on))))
     (meta-data :origin calo :entry-date 20050308 :change-date nil :comments computer-purchasing :vn ("focus-87"))
     )
    )
   )
((W::zero w::in)
   (SENSES
    ((LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "zero in on the problem")
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::on))))
     (meta-data :origin calo-ontology :entry-date 20060201 :change-date nil :comments meeting-understanding)
     )
    )
   )
(W::focus
   (SENSES
    ((LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "focus on the problem")
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::on))))
     (meta-data :origin calo :entry-date 20050308 :change-date nil :comments computer-purchasing :vn ("focus-87"))
     )
    ((meta-data :origin calo :entry-date 20050308 :change-date 20090504 :comments projector-purchasing)
     (LF-PARENT ONT::visual-adjust)
     (example "focus the projector")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )

 (W::compare
   (wordfeats (W::morph (:forms (-vb) :nom W::comparison)))
   (SENSES
    ((meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2)
     (LF-PARENT ONT::scrutiny)
     (example "compare the options")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-plural-templ)
     )
    ((meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2)
     (LF-PARENT ONT::scrutiny)
     (example "compare this option with/to that option")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-co-theme-TEMPL (xp (% W::PP (W::ptype (? pt W::with w::to)))))
     )
    ((meta-data :origin calo :entry-date 20060306 :change-date nil :comments caloy2)
     (LF-PARENT ONT::scrutiny)
     (example "compare these computers on price")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-predicate-TEMPL (xp (% W::PP (W::ptype (? pt w::on w::by)))))
     )
    ((meta-data :origin calo :entry-date 20050502 :change-date nil :comments caloy2)
     (LF-PARENT ONT::scrutiny)
     (example "how does this option compare with/to that option")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-co-theme-xp-TEMPL (xp (% W::PP (W::ptype (? pt W::with w::to)))))
     )
    ((meta-data :origin calo :entry-date 20060306 :change-date nil :comments caloy2)
     (LF-PARENT ONT::scrutiny)
     (example "how do these computers compare on price")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-predicate-xp-optional-TEMPL (xp (% W::PP (W::ptype (? pt w::on w::by)))))
     )
    ;; how does it compare to this on price
    )
   )
(W::contrast
   (wordfeats (W::morph (:forms (-vb) :nom W::contrast)))
   (SENSES
    ((meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2)
     (LF-PARENT ONT::scrutiny)
     (example "contrast the options")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-plural-templ)
     )
    ((meta-data :origin calo :entry-date 20040908 :change-date nil :comments caloy2)
     (LF-PARENT ONT::scrutiny)
     (example "contrast this option with that option")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-co-theme-TEMPL (xp (% W::PP (W::ptype W::with))))
     )
    )
   )
  (W::Review
   (wordfeats (W::morph (:forms (-vb) :nom W::review)))
   (SENSES
    ((LF-PARENT ONT::scrutiny)
     (example "review the plan")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ)
     )
    )
   )
  (W::interview
   (SENSES
    ((LF-PARENT ONT::interview)
     (example "interview the candidate about it")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-addressee-associated-information-templ)
     )
    ;; have to have this straight transitive sense for passive to work
    ((LF-PARENT ONT::interview)
     (example "interview the candidate")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-addressee-templ)
     )
    ((LF-PARENT ONT::interview)
     (example "he was interviewing all day")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-templ)
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil :wn nil)
     )
    )
   )
  (W::browse
   (SENSES
    ((meta-data :origin calo :entry-date 20040407 :change-date nil :comments y1v5)
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ)
     )
    )
   )
  (W::preview
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050817 :change-date nil :comments nil)
     (LF-PARENT ONT::scrutiny)
     (EXAMPLE "preview the document")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ)
     )
    )
   )
  (W::proof
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050818 :change-date nil :comments nil)
     (LF-PARENT ONT::scrutiny)
     (EXAMPLE "proof the text")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ)
     )
    )
   )
  (W::analyze
   (wordfeats (W::morph (:forms (-vb) :nom w::analysis)))
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
     (LF-PARENT ONT::scrutiny)
     (EXAMPLE "analyze the email")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ)
     )
    )
   )
 (W::validate
    (wordfeats (W::morph (:forms (-vb) :nom w::validation)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ)
     )
    )
   )
 (W::verify
    (wordfeats (W::morph (:forms (-vb) :nom w::verification)))
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050817 :change-date nil :comments nil)
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ)
     )
    ((meta-data :origin calo-ontology :entry-date 20060124 :change-date nil :comments caloy3)
     (LF-PARENT ONT::scrutiny)
     (example "verify that he does it")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite))))
     )
    )
   )
 (W::authenticate
     (wordfeats (W::morph (:forms (-vb) :nom w::authentication)))
   (SENSES
    ((meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ)
     )
    )
   )

 (W::explore
     (wordfeats (W::morph (:forms (-vb) :nom w::organization)))
   (SENSES
    ((meta-data :origin calo :entry-date 20040402 :change-date 20061005 :comments html-purchasing-corpus :vn ("investigate-35.4") :wn ("explore%2:31:02"))
     (LF-PARENT ONT::physical-scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-theme-xp-templ)
     (example "explore the region")
     )
    )
   )

 (W::test
     (wordfeats (W::morph (:forms (-vb) :nom w::test)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus :vn ("investigate-35.4"))
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ)
     (example "test the plan")
     )
    ((meta-data :origin calo-ontology :entry-date 20060124 :change-date nil :comments caloy3)
     (LF-PARENT ONT::scrutiny)
     (example "test whether it works")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite))))
     )
    )
   )

  (W::organize
   (wordfeats (W::morph (:forms (-vb) :nom w::organization)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("organize%2:31:00"))
     (LF-PARENT ONT::cause-make)
     (example "organize a meeting")
     (TEMPL cause-effect-xp-templ) 
     )
    )
   )
  (W::reorganize
      (wordfeats (W::morph (:forms (-vb) :nom w::reorganization)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("create-26.4-1"))
     (LF-PARENT ONT::arranging)
     (TEMPL agent-theme-xp-templ) ; like rearrange
     )
    )
   )
  (W::sort
   (SENSES
    ((lf-parent ont::sort)
     (example "sort them into groups of three")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::into))))
     (meta-data :origin plow :entry-date 20060626 :change-date 20090505 :comments pq0380)
     )
    ((lf-parent ont::sort)
     (example "sort them by departure date")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-CONTENT-TEMPL (xp (% W::PP (W::ptype W::by))))
     (meta-data :origin plow :entry-date 20070928 :change-date 20090505 :comments plow-travel)
     )
    ((lf-parent ont::sort)
     (example "sort by departure date")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-CONTENT-TEMPL (xp (% W::PP (W::ptype W::by))))
     (meta-data :origin plow :entry-date 20071003 :change-date 20090505 :comments plow-travel)
     )
    ;; need this for passive
    ((lf-parent ont::sort)
     (example "sort them into groups of three")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-theme-xp-templ)
     (meta-data :origin plow :entry-date 20060626 :change-date 20090505 :comments pq0380)
     )
    )
   )
  (W::arrange
   (wordfeats (W::morph (:forms (-vb) :nom w::arrangement)))
   (SENSES
    ((meta-data :origin monroe :entry-date 20031219 :change-date 20090515 :comments s11)
     (LF-PARENT ONT::planning)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-effect-objcontrol-templ)
     (example "arrange the meeting [to start at 10am]")
     )
    ((lf-parent ont::arranging)
     (example "arrange them into groups of three")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::into))))
     (meta-data :origin calo :entry-date 20040414 :change-date nil :comments calo-y1v4 :vn ("put-9.1") :wn ("arrange%2:35:00"))
     )
    )
   )

  (W::rearrange
   (SENSES
    ((lf-parent ont::arranging)
     (example "rearrange them into groups of three")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::into))))
     (meta-data :origin task-learning :entry-date 20050823 :change-date nil :comments nil :vn ("create-26.4-1"))
     )
    )
   )
  (W::reorder
   (wordfeats (W::morph (:forms (-vb) :past W::reordered :ing w::reordering)))
   (SENSES
    ((lf-parent ont::arranging)
     (example "reorder them")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-theme-xp-templ)
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     )
    ((lf-parent ont::arranging)
     (example "reorder them by departure date")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-CONTENT-TEMPL (xp (% W::PP (W::ptype W::by))))
     (meta-data :origin plow :entry-date 20070928 :change-date nil :comments plow-travel)
     )
    )
   )
  (W::format
   (SENSES
    ((lf-parent ont::arrange-text)
     (example "format the text")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-theme-xp-templ)
     (meta-data :origin task-learning :entry-date 20050812 :change-date 20090504 :comments nil)
     )
    )
   )
  (W::bullet
   (SENSES
    ((lf-parent ont::arrange-text)
     (example "bullet the text")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-theme-xp-templ)
     (meta-data :origin task-learning :entry-date 20050815 :change-date 20090504 :comments nil)
     )
    )
   )
  (W::indent
   (SENSES
    ((lf-parent ont::arrange-text)
     (example "indent the text")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-theme-xp-templ)
     (meta-data :origin task-learning :entry-date 20050815 :change-date 20090504 :comments nil)
     )
    )
   )
  (W::stylize
   (SENSES
    ((lf-parent ont::language-adjust)
     (example "stylize the message")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-theme-xp-templ)
     (meta-data :origin task-learning :entry-date 20050919 :change-date 20090504 :comments nil)
     )
    )
   )

(W::include
 (wordfeats (W::morph (:forms (-vb) :nom w::inclusion)))
 (SENSES
  ((EXAMPLE "it includes a wireless card")
   (LF-PARENT ONT::HAVE)
   (SEM (F::Aspect F::static) (F::Time-span F::extended))
     (TEMPL affected-THEME-XP-TEMPL)
     )
    ((EXAMPLE "include a wireless card in the order")
     (meta-data :origin calo :entry-date 20050425 :change-date 20090908 :comments projector-purchasing)
     (LF-PARENT ont::add-include)
     (TEMPL agent-THEME-goal-optional-TEMPL (xp (% W::PP (W::ptype (? pt W::in W::with)))))
     )
    )
 )

(W::exclude
   (wordfeats (W::morph (:forms (-vb) :nom w::exclusion)))
 (SENSES
  ((EXAMPLE "the battery is in a path which excludes the bulb" "the offer excludes previous purchases")
   (meta-data :origin beetle :entry-date 20092002 :change-date nil :comments beetle-pilots)	    
   (LF-PARENT ONT::EXCLUDE)
   (SEM (F::Aspect F::static) (F::Time-span F::extended))
   (TEMPL affected-THEME-XP-TEMPL)
   )
  )
 )

  (W::involve
   (wordfeats (W::morph (:forms (-vb) :nom w::involvement)))
   (SENSES
    ((EXAMPLE "it involves a wireless card")
     (meta-data :origin calo :entry-date 20050425 :change-date nil :comments projector-purchasing)
     (LF-PARENT ONT::HAVE)
     (SEM (F::Aspect F::static) (F::Time-span F::extended))
     (TEMPL affected-THEME-XP-TEMPL)
     )
    )
   )
  (W::purchase
   (wordfeats (W::morph (:forms (-vb) :nom w::purchase)))
   (SENSES
    ((EXAMPLE "I need to purchase a computer")
     (meta-data :origin calo :entry-date 20030715 :change-date nil :comments calo-y1script)
     (LF-PARENT ONT::purchase)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((EXAMPLE "Purchase me a computer")
      (meta-data :origin calo :entry-date 20040401 :change-date nil :comments y1-dialog-variations)
     (LF-PARENT ONT::purchase)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-RECIPIENT-THEME-TEMPL)
     )
    ((meta-data :origin calo :entry-date 20040505 :change-date nil :comments y1-variations)
     (EXAMPLE "purchase it with a credit card")
     (LF-PARENT ONT::commerce-pay)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-TEMPL (xp (% W::pp (W::ptype (? pt W::with w::on)))))
     )
    )
   )

  (W::buy
   (wordfeats (W::morph (:forms (-vb) :past W::bought :ing W::buying :nom w::buy)))
   (SENSES
    ((EXAMPLE "I need to buy a computer")
     (meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus :vn ("get-13.5.1") :wn ("buy%2:40:00" "buy%2:42:00"))
     (LF-PARENT ONT::purchase)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((EXAMPLE "Buy me a computer")
      (meta-data :origin calo :entry-date 20040401 :change-date nil :comments y1-dialog-variations)
     (LF-PARENT ONT::purchase)
     (TEMPL AGENT-RECIPIENT-THEME-TEMPL)
     )
    ((meta-data :origin calo :entry-date 20040505 :change-date nil :comments y1-variations)
     (EXAMPLE "buy it with a credit card")
     (LF-PARENT ONT::commerce-pay)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-TEMPL (xp (% W::pp (W::ptype (? pt W::with w::on)))))
     )
    ((lf-parent ont::purchase)
     (example "buy the book from amazon dot com")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-SOURCE-templ (xp (% W::PP (W::ptype (? pt w::on W::at W::from)))))
     )
    )
   )

(W::order
  (wordfeats (W::morph (:forms (-vb) :past W::ordered :ing w::ordering)))
   (SENSES
    ((EXAMPLE "I ordered a computer")
     (meta-data :origin monroe :entry-date 20040203 :change-date 20090504 :comments s11 :vn ("get-13.5.1") :wn ("order%2:32:00"))
     (LF-PARENT ONT::reserve)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((EXAMPLE "Order me a computer")
     (LF-PARENT ONT::reserve)
     (TEMPL AGENT-RECIPIENT-THEME-TEMPL)
     )
    ((lf-parent ont::reserve)
     (example "order the book from amazon dot com")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-SOURCE-templ (xp (% W::PP (W::ptype (? pt W::at W::from)))))
     )
    )
   )

  (W::PLACE
   (SENSES
    ((EXAMPLE "Place the order")
     (LF-PARENT ONT::submit)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((LF-PARENT ONT::put)
     (meta-data :origin plow :entry-date 20050318 :change-date nil :comments nil)
     (example "place the book on the table")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )

 (W::SUBMIT
  (wordfeats (W::morph (:forms (-vb) :nom w::submission)))
   (SENSES
    ((EXAMPLE "submit the order")
     (LF-PARENT ONT::submit)
     (meta-data :origin plow :entry-date 20050328 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )

  (W::modify
   (wordfeats (W::morph (:forms (-vb) :nom w::modification)))
   (SENSES
    ((LF-PARENT ONT::modify)
     (example "modify the plan")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::modulate
   (wordfeats (W::morph (:forms (-vb) :nom w::modulation)))
   (SENSES
    ((LF-PARENT ONT::modify)
     (example "modulate the signal")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
      (meta-data :origin calo-ontology :entry-date 20051214 :change-date 20090504 :comments Break-contact)
     )
    )
   )
 (W::detach
   (SENSES
    ((LF-PARENT ont::unattach)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "detach the file")
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Break-contact)
     )
     ((LF-PARENT ont::unattach)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "detach from the group")
     (TEMPL AGENT-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     (meta-data :origin coordops :entry-date 20070706 :change-date nil :comments nil)
     )
    )
   )
  (W::SEPARATE
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("separate-23.1-2"))
     (LF-PARENT ont::separation)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     (EXAMPLE "separate the crews")
     )
    ((meta-data :origin beetle :entry-date 20080716 :change-date nil :comments nil :vn ("separate-23.1-2"))
     (LF-PARENT ont::separation)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL INSTRUMENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     (EXAMPLE "a gap separates the terminals" "use the knife to separte two halfes")
     )    
    )
   )
 (W::isolate
   (wordfeats (W::morph (:forms (-vb) :nom w::isolation)))
   (SENSES
    ((meta-data :origin plow :entry-date 20060615 :change-date nil :comments pq)
     (LF-PARENT ont::separation)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     (EXAMPLE "isolate several dnas from a blood cell library")
     )
    ((meta-data :origin beetle :entry-date 20080716 :change-date nil :comments nil :vn ("separate-23.1-2"))
     (LF-PARENT ont::separation)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL INSTRUMENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     (EXAMPLE "a gap isolates one side from the other")
     )
    )
   )
  (W::ungroup
   (SENSES
    ((LF-PARENT ont::separation)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050819 :change-date nil :comments nil)
     (EXAMPLE "ungroup the objects")
     )
    )
   )
  (W::divide
   (SENSES
     ((meta-data :origin monroe :entry-date 20031219 :change-date 20090522 :comments s11 :vn ("separate-23.1-1"))
      (LF-PARENT ont::separation)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (templ cause-affected-result-templ)
      (example "divide the crews into/in teams")
      )
     ((meta-data :origin ptb :entry-date 20100603 :change-date 20090522 :comments s11 :vn ("separate-23.1-1"))
      (LF-PARENT ont::separation)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (templ cause-affected-xp-templ)
      (example "critical opinion is divided")
      )
     ((meta-data :origin beetle :entry-date 20080716 :change-date nil :comments nil :vn ("separate-23.1-2"))
      (LF-PARENT ont::separation) ; TODO change to ONT::spatial-divide
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (TEMPL INSTRUMENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
      (EXAMPLE "the divider divides the room")
      )
     ;; calc-divide should be restricted to numerical expressions
     ;; this is redundant with the senses below -- subcat should be removed
;     ((lf-parent ont::calc-divide)
;      (example "divide x [by 5]")
;      (templ cognizer-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::by))))
;      (meta-data :origin lam :entry-date 20050420 :change-date 20090522 :comments lam-initial)
;      (preference .98) ; prefer separation sense 
;      )
     ((lf-parent ont::calc-divide)
      (example "divide by 5")
      (templ cognizer-co-theme-xp-templ (xp (% w::pp (w::ptype w::by))))
      (meta-data :origin lam :entry-date 20050420 :change-date 20090522 :comments lam-initial)
      (preference .98) ; prefer separation sense 
      )
     ((lf-parent ONT::calc-divide)
      (example "divide 7 into 21")
      (templ cognizer-co-theme-theme-templ)
      (meta-data :origin "wordnet-3.0" :entry-date 20090522 :change-date nil :comments nil)
      (preference .98) ; prefer separation sense 
      )
    )
   )
  (W::subdivide
   (SENSES
     ((meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
      (LF-PARENT ont::separation)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (example "subdivide the crews")
     )
    )
   )
  ((W::divide w::up)
   (SENSES
     ((meta-data :origin monroe :entry-date 20031219 :change-date nil :comments s11)
      (LF-PARENT ont::separation)
      (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
      (example "divide up the crews")
     )
    )
   )
  (W::redraw
   (wordfeats (W::morph (:forms (-vb) :past W::redrew :past W::redrawn)))
   (SENSES
    ;;;; !!!??? Redraw the plan
    ((LF-PARENT ONT::REVISE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::reformulate
   (SENSES
    ;;;; reformulate the plan
    ((LF-PARENT ONT::REVISE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::accept
     (wordfeats (W::morph (:forms (-vb) :nom w::acceptance)))
   (SENSES
    (;;(LF-PARENT ONT::accept)
     (lf-parent ont::accept-agree) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "accept the cookie")
     )
    ((LF-PARENT ONT::is-compatible-with)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended) (f::trajectory -))
     (example "that projector accepts european voltage")
     (templ affected-theme-xp-templ)
     (meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     )
    )
   )
  (W::decline
   (SENSES
    ((LF-PARENT ONT::reject)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "decline the cookie")
     (meta-data :origin task-learning :entry-date 20050825 :change-date 20090508 :comments nil)
     )
    ((lf-parent ONT::decrease)
     (templ theme-templ)
     (example "the market declined")
     (meta-data :origin "wordnet-3.0" :entry-date 20090504 :change-date nil :comments nil)
     )
    )
   )
  (W::reject
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date 20090508 :comments html-purchasing-corpus)
     (LF-PARENT ONT::reject)
     (example "reject the cookie")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::oppose
   (SENSES
    ((meta-data :origin calo :entry-date 20050905 :change-date 20090508 :comments projector-purchasing)
     ;;(LF-PARENT ONT::contest)
     (lf-parent ont::contest-deny-oppose-protest) ;; 20120523 GUM change new parent
     (example "I oppose the plan")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::summarize
   (SENSES
    ((LF-PARENT ONT::SUMMARIZE)
     (example "summarize the information")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (W::summarise
   (SENSES
    ;;;; summarize the information
    ((LF-PARENT ONT::SUMMARIZE) 
     (LF-FORM W::SUMMARISE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (meta-data :origin beetle :entry-date 20040607 :change-date nil :comments portability-experiment)
     )
    )
   )

  (W::execute
   (wordfeats (W::morph (:forms (-vb) :nom w::execution)))
   (SENSES
    ((LF-PARENT ONT::EXECUTE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-EFFECT-XP-TEMPL)
     (example "execute the action/plan")
     )
    )
   )

 (W::perform
   (wordfeats (W::morph (:forms (-vb) :nom w::performance)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::EXECUTE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-EFFECT-XP-TEMPL)
     (example "perform the activity/task") 
     )
    )
   )
  ((W::think (W::through))
   (wordfeats (W::morph (:forms (-vb) :past W::thought)))
   (SENSES
    ;;;; THINK THROUGH THE PLAN!!!
    ((LF-PARENT ONT::information-scrutiny)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  ((W::work (W::through))
   (SENSES
    ;;;; swier -- work through the plan
    ((LF-PARENT ONT::information-scrutiny)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (W::WORK
   (wordfeats (W::morph (:forms (-vb) :nom w::work)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("cooperate-71-3"))
     (LF-PARENT ONT::working)
     (example "he worked on the problem")
     (SEM (F::Cause F::agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (templ agent-theme-xp-templ (xp (% W::PP (W::ptype (? p W::on)))))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("cooperate-71-3"))
     (LF-PARENT ONT::working)
     (example "he worked all day")
     (SEM (F::Cause F::agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (templ agent-templ)
     )    
    ;;;; swift 04/09/02 need a sense that doesn't require a human subject, e.g. 'it/the plan works'
    ((LF-PARENT ONT::FUNCTION)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    (;;(LF-PARENT ONT::employ)
     (lf-parent ont::work) ;;  20120524 GUM change new parent 
     (example "he works for that company")
     (meta-data :origin LbR :entry-date 20081124 :change-date 20090508 :comments nil :wn nil)
     (templ agent-theme-xp-templ (xp (% W::PP (W::ptype (? p W::for w::at)))))
     )
    )
   )
  (W::operate
   (SENSES
    ((LF-PARENT ONT::FUNCTION)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     (EXAMPLE "you must ensure that the facility still operates")
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil)
     )
     ((LF-PARENT ONT::control-manage)
      (EXAMPLE "he operated the gun")
     (meta-data :origin step :entry-date 20080724 :change-date nil :comments step5)
     )
    )
   )
  (W::practice
   (SENSES
    ((LF-PARENT ONT::practicing)
     (example "practice on this page")
     (SEM (F::Cause F::agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::on))))
     )
    ((LF-PARENT ONT::practicing)
     (example "practice (that)")
     (SEM (F::Cause F::agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-optional-TEMPL)
     )
    )
   )
  (W::excuse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("excuse%2:32:01" "excuse%2:32:02"))
     (LF-PARENT ONT::forgive)
     (TEMPL agent-addressee-theme-templ (xp (% w::pp (w::ptype w::for)))) ; like thank
     (PREFERENCE 0.96)
     )
    ;;;; swier -- excuse me
    ((LF-PARENT ONT::PARDON)
     (TEMPL AGENT-AFFECTED-XP-TEMPL)
     )
    )
   )
  (W::pardon
   (wordfeats (W::morph (:forms (-vb) :ing W::pardoning :past W::pardoned)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("pardon%2:32:00" "pardon%2:32:01"))
     (LF-PARENT ont::pardon)
     (TEMPL agent-affected-theme-optional-templ (xp (% w::pp (w::ptype w::for))))
     )
    )
   )
  (W::thank
   (SENSES
    ;; the for phrase is ont::reason, generated in the grammar
    ((LF-PARENT ONT::thank)
     (example "thank you [for your help]")
     (TEMPL AGENT-ADDRESSEE-TEMPL)
     )
    )
   )

  (W::ANSWER
   (SENSES
    ((LF-PARENT ONT::ANSWER)
     (example "answer the question")
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "if it says rain then answer yes")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% w::utt)))
     (meta-data :origin task-learning :entry-date 20051109 :change-date nil :comments nil)
     )
    )
   )

  (W::allow
   (SENSES
    ((LF-PARENT ONT::ALLOW)
     (TEMPL CAUSE-EFFECT-affected-OBJCONTROL-TEMPL)
     (example "allow the team by the lake to go home")
     )
    ((meta-data :origin plow :entry-date 20060414 :change-date nil :comments nil :vn ("allow-64"))
     (LF-PARENT ONT::ALLOW)
     (TEMPL cause-effect-xp-TEMPL)
     (example "smoking is not allowed")
     )
     (;;(LF-PARENT ONT::ACCOMMODATE)
      (lf-parent ont::accommodate-allow) ;; 20120524 GUM change new parent
      (example "the budget allows for a thousand dollars")
      (TEMPL theme-co-theme-XP-TEMPL (xp (% W::pp (W::ptype W::for))))
      (meta-data :origin calo :entry-date 20040507 :change-date nil :comments y1-variations)
     )
    )
   )

  (W::consider
   (wordfeats (W::morph (:forms (-vb) :past W::considered :ing W::considering :nom w::consideration)))
   (SENSES
    ((LF-PARENT ONT::Cogitation)
     (example "consider this option")
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::Cogitation)
     (example "he condisdered the speaker a genius")
     (TEMPL COGNIZER-THEME-adj-predicate-optional-TEMPL)
     (meta-data :origin calo :entry-date 20060124 :change-date nil :comments meeting-understanding)
     )
    )
   )
 (W::regard
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("characterize-29.2") :wn ("regard%2:31:00"))
     (LF-PARENT ONT::categorization)
     (TEMPL cognizer-theme-as-predicate-optional-templ) ; like interpret,classify
     (PREFERENCE 0.96)
     )
    ;; prefer vn sense
;    ((LF-PARENT ONT::scrutiny)
;     (example "he regarded the speaker as a genius")
;     (TEMPL COGNIZER-THEME-as-predicate-optional-TEMPL)
;     (meta-data :origin calo :entry-date 20060124 :change-date nil :comments meeting-understanding)
;     )
    ;; this sense is needed so the passive-by rule can apply 
    ((LF-PARENT ONT::scrutiny)
     (example "he regarded his opponent warily")
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (meta-data :origin calo :entry-date 20060124 :change-date nil :comments meeting-understanding :vn ("sight-30.2") :wn ("regard%2:39:00"))
     )
    )
   )
  (W::judge
   (wordfeats (W::morph (:forms (-vb) :nom w::judgement)))
   (SENSES
    ((LF-PARENT ONT::scrutiny)
     (example "he judged him")
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::scrutiny)
     (example "he judged his opponent incompetent")
     (TEMPL COGNIZER-THEME-adj-predicate-optional-TEMPL)
     (meta-data :origin calo :entry-date 20060124 :change-date nil :comments meeting-understanding :vn ("declare-29.4-1-1-2"))
     )
    )
   )
  (W::rate
   (wordfeats (W::morph (:forms (-vb) :nom w::rating)))
   (SENSES
    ((LF-PARENT ONT::ordering)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (example "how is this model rated?")
     (meta-data :origin calo :entry-date 20041122 :change-date 20090501 :comments caloy2)
     )
    )
   )
 (W::rank
    (wordfeats (W::morph (:forms (-vb) :nom w::ranking)))
   (SENSES
    ((LF-PARENT ONT::ordering)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     (example "how is this model ranked?")
     (meta-data :origin calo :entry-date 20050509 :change-date 20090501 :comments projector-purchasing)
     )
    )
   )
  (W::conflict
   (wordfeats (W::morph (:forms (-vb) :nom w::conflict)))
   (SENSES
    ((LF-PARENT ONT::HINDERING)
     (Example "a plan conflicts with another")
     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-expt)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL (xp (% W::PP (W::ptype W::with))))
     )    
     ((LF-PARENT ONT::HINDERING)
      (example "2 plans conflict")
      (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-expt)
      (TEMPL AFFECTED-plural-TEMPL)
      )
     ))

  (W::infringe
   (wordfeats (W::morph (:forms (-vb) :nom W::infringement)))
   (SENSES
    ((LF-PARENT ONT::HINDERING)
     (Example "a plan infringes on another")
     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-expt)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL (xp (% W::PP (W::ptype W::on))))
     )    
     ))

  (W::make
   (wordfeats (W::morph (:forms (-vb) :past W::made)))
   (SENSES
    ((EXAMPLE "Let's make a new plan")
     ;;;; Myrosia 03/10/02 - this is very unrestricted. I lowered the preverence so that cause-make is used first if posssible
     (LF-PARENT ONT::CREATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin trains :entry-date unknown :change-date nil :comments swier)
     (PREFERENCE 0.98)
     )
    ((EXAMPLE "make money" "make a profit")
     (LF-PARENT ONT::earning) 
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin step :entry-date 20081022 :change-date nil :comments step6)
     )
    ((LF-PARENT ONT::cause-make)
     (example "make the paper into a square")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-result-TEMPL (xp (% W::PP (W::ptype W::into))))
     )
    ((LF-PARENT ONT::cause-make)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "make that triangle a big triangle")
     (TEMPL AGENT-THEME-RESULT-TEMPL)
     (meta-data :origin fruitcarts :entry-date 20050427 :change-date nil :comments fruitcart-11-4)
     )
    ((LF-PARENT ONT::CAUSE-MAKE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "aspirin makes him vomit" "make the trucks wait")
     (meta-data :origin medadvisor :entry-date 20011126)
     (TEMPL cause-effect-affected-objcontrol-templ (xp (% W::VP (W::vform W::base))))
     )
    ((LF-PARENT ONT::CAUSE-MAKE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
       ;;;; at the moment this needs a different template from above; should try to consolidate
     (TEMPL cause-effect-affected-objcontrol-pred-templ)  
     (meta-data :origin medadvisor :entry-date 20011126)
     (example "aspirin makes him sick")
     )
    ((LF-PARENT ONT::CAUSE-MAKE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL cause-effect-xp-templ)
     )
    )
   )
  (W::build
   (wordfeats (W::morph (:forms (-vb) :past W::built)))
   (SENSES
    ((LF-PARENT ONT::CREATE)
     )
    ;;;; swift 08/14/02 need a sense for "build it into the schedule", but this doesn't work because the PP object
    ;;;; is not a spatial location!
    ((LF-PARENT ONT::nature-change)
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? pt W::into W::in)))))
     )
    )
   )

 ((W::build (w::up))
   (wordfeats (W::morph (:forms (-vb) :past W::built)))
   (SENSES
    ((LF-PARENT ONT::clog)
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::clog)
     (example "the fluid built up in his lungs")
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::rebuild
   (wordfeats (W::morph (:forms (-vb) :past W::rebuilt)))
   (SENSES
    ((LF-PARENT ONT::CREATE)
     (EXAMPLE "the file is rebuilt using data in the mbox file")
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil)
     )
    )
   )
  (W::want
   (SENSES
    ((LF-PARENT ONT::WANT)
     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
     (EXAMPLE "I want a dog")
     )
    ((LF-PARENT ONT::WANT)
     (TEMPL EXPERIENCER-action-SUBJCONTROL-TEMPL)
     (EXAMPLE "I want to go")
     )
    ((LF-PARENT ONT::WANT)
     (TEMPL EXPERIENCER-action-OBJCONTROL-TEMPL)
     (EXAMPLE "I want you to go")
     )
    )
   )
  (W::wanna
   (SENSES
    ((LF-PARENT ONT::WANT)
     (example "I wanna go along the coast")
     (TEMPL EXPERIENCER-effect-SUBJCONTROL-TEMPL (xp (% W::VP (W::vform W::base))))
     )
    )
   )
  (W::wish
   (SENSES
    ((LF-PARENT ONT::WANT)
     (TEMPL EXPERIENCER-action-SUBJCONTROL-TEMPL)
     (EXAMPLE "I wish to copy part of the code")
     (meta-data :origin task-learning :entry-date 20050819 :change-date nil )
     )
    ((LF-PARENT ONT::WANT)
     (TEMPL EXPERIENCER-action-XP-TEMPL (xp (% W::cp (W::ctype W::s-that))))
     (EXAMPLE "I wish (that) we could have spaghetti for dinner")
     (meta-data :origin task-learning :entry-date 20060208 :change-date nil  :vn ("wish-62"))
     )
    ((LF-PARENT ONT::WANT)
     (TEMPL EXPERIENCER-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::for))))
     (EXAMPLE "I wish for spaghetti")
     (meta-data :origin task-learning :entry-date 20060208 :change-date nil  :vn ("wish-62"))
     )
    )
   )
  (W::desire
   (SENSES
    ((LF-PARENT ONT::WANT)
     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
     (EXAMPLE "I desire that part of the image")
     (meta-data :origin task-learning :entry-date 20050824 :change-date nil )
     )
    )
   )
  (W::HELP
   (wordfeats (W::morph (:forms (-vb) :nom W::help)))
   (SENSES
    ((LF-PARENT ONT::HELP)
     (example "I want to help")
     (TEMPL cause-TEMPL)
     (meta-data :origin lam :entry-date 20050713 :change-date nil )
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("help-70-1"))
     (LF-PARENT ONT::HELP)
     (example "help the workers to load all the oranges")
     (TEMPL cause-EFFECT-affected-OBJCONTROL-TEMPL)
     )
    ((LF-PARENT ONT::HELP)
     (example "help the people help themselves")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-EFFECT-affected-OBJCONTROL-TEMPL (xp (% W::VP (W::vform W::base))))
     )
     ((LF-PARENT ONT::HELP)
     (example "it helped me")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
      (TEMPL CAUSE-effect-XP-TEMPL)
     )   
    )
   )
   (W::PROMOTE
   (SENSES
    ((LF-PARENT ONT::IMPROVE)
     (example "the flyers promote the idea")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     )    
    )
   )

  (W::NEED
   (wordfeats (W::morph (:forms (-vb) :nom w::need)))
   (SENSES
    ((LF-PARENT ONT::necessity)
     (SEM (F::Aspect F::stage-level));; allow temporal modifiers here, as implicit action
     (TEMPL affected-THEME-XP-TEMPL)
     (example "I need this book")
     )
    ((LF-PARENT ONT::WANT)
     (SEM (F::Aspect F::indiv-level))
     (TEMPL EXPERIENCER-action-OBJCONTROL-TEMPL)
     (example "I need the truck to go")
     (PREFERENCE 0.98)   ;;;; prefer above reading first
     )
    ((LF-PARENT ONT::NECESSITY)
     (example "The town needs to have supplies")
     (SEM (F::Aspect F::Indiv-level)) ;; don't allow temporal mods on the higher verb (need)
     (TEMPL affected-effect-SUBJCONTROL-TEMPL)
     )
    )
   )
  (W::clean
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("clear-10.3-1"))
     (LF-PARENT ONT::remove-parts)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype (? ptp w::from w::off))))) ; like clear
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::clean)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "clean the room")
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     )
    )
   )
  (W::vacuum
   (SENSES
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments nil)
     (LF-PARENT ONT::clean)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "vaccumm the room")
     )
    )
   )
 (W::tidy
   (SENSES
    ((LF-PARENT ONT::clean)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "tidy the room")
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     )
    )
   )
 ((W::tidy (w::up))
  (SENSES
   ((LF-PARENT ONT::clean)
    (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
    (example "tidy up the room")
    (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
    )   
   ((meta-data :origin lam :entry-date 20050422 :change-date nil :comments lam-initial)
    (LF-PARENT ONT::revise)
    (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
    )
   )
  )

 ((W::clean (w::up))
   (SENSES
    ((LF-PARENT ONT::clean)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "clean up the room")
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     )
    )
   )
 (w::enroll
   (SENSES
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "enroll in the class")
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     (templ agent-theme-optional-templ (xp (% W::PP (W::ptype (? t W::for W::in)))))
     )
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "enroll the student in the class")
     (meta-data :origin calo-ontology :entry-date 20060119 :change-date nil :comments caloy3)
     )
    )
   )
 ((W::check w::in)
    (wordfeats (W::morph (:forms (-vb) :nom (W::check w::in))))
   (SENSES
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "let me show you how to check in a patient")
     (meta-data :origin plot :entry-date 20081207 :change-date nil :comments nil)
     (templ agent-theme-xp-templ)
     )
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "when can I check in (at the hotel)")
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     (templ agent-goal-xp-templ (xp (% W::PP (W::ptype (? t W::to W::at)))))
     (preference .98)
     )
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "when can I check in" "he checked in yesterday")
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     (templ agent-templ)
     (preference .97)
     )
    )
   )
 ((W::check w::out)
  (wordfeats (W::morph (:forms (-vb) :nom (W::check w::out))))
   (SENSES
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "let me show you how to check out a patient")
     (meta-data :origin plot :entry-date 20081207 :change-date nil :comments nil)
     (templ agent-theme-xp-templ)
     )
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "when can I check out (at the hotel)")
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     (templ agent-goal-xp-templ (xp (% W::PP (W::ptype (? t W::from)))))
     (preference .98)
     )
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "when can I check out" "he checked out yesterday")
     (meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments caloy3)
     (templ agent-templ)
     (preference .97)
     )
    )
   )

  ((W::fix (W::up))
   (SENSES
    ((LF-PARENT ONT::REPAIR)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "he fixed up the apartment")
     )
    )
   )
  (W::fix
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090522 :comments nil :vn ("price-54.4") :wn ("fix%2:36:01"))
     (LF-PARENT ONT::becoming-aware-of-value)
     (example "fix the price")
     (TEMPL cognizer-theme-xp-templ)
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("preparing-26.3-1"))
     (LF-PARENT ONT::cooking)
     (example "fix dinner")
     (TEMPL agent-theme-xp-templ) ; like prepare
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::REPAIR)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "he fixed the truck with the wrench")
     (templ agent-theme-instrument-optional-templ)
     )
    )
   )
  (W::correct
   (wordfeats (W::morph (:forms (-vb) :nom W::correction)))
   (SENSES
    ((LF-PARENT ONT::REPAIR)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (EXAMPLE "correct the email address")
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     )
    )
   )
  (W::restore
   (SENSES
    ((meta-data :origin monroe :entry-date 20031219 :change-date nil :comments s3)
     (LF-PARENT ONT::REPAIR)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "restore the power lines")
     )
    )
   )
 (W::renovate
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (LF-PARENT ONT::REPAIR)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "restore the power lines")
     )
    )
   )
  ((W::perk (w::up))
   (SENSES
    ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "his friends perked him up")
      )
     ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "the elixir perked him up")
     (templ cause-theme-xp-templ)
      )
    ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (templ theme-templ)
     (example "he perked up")
     )
    )
   )
 (W::revive
   (SENSES
    ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "the doctor revived him")
      )
     ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "the elixir revived him")
     (templ cause-theme-xp-templ)
      )
    ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (templ theme-templ)
     (example "he revived")
     )
    )
   )
  (w::faint
    (SENSES
     ((LF-PARENT ONT::bodily-process) ;; not a process - need a new lf type
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (templ theme-templ)
     (example "he fainted")
     )
    )
   )
 ((W::come (w::to))
    (wordfeats (W::morph (:forms (-vb) :past W::came :pastpart W::come :ing W::coming)))
   (SENSES
     ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ theme-templ)
     (example "he came to")
     )
    )
   )
  ((W::bring (w::to))
    (wordfeats (W::morph (:forms (-vb) :past W::brought :ing W::bringing)))
   (SENSES
    ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "the doctor brought him to")
      )
     ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "the elixir brought him to")
     (templ cause-theme-xp-templ)
      )
     )
   )
  (w::resuscitate
    (SENSES
    ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "the doctor brought him to")
      )
     ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "the elixir brought him to")
     (templ cause-theme-xp-templ)
      )
     )
   )
 (w::animate
    (SENSES
    ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "the doctor brought him to")
      )
     ((LF-PARENT ONT::reviving)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "the elixir brought him to")
     (templ cause-theme-xp-templ)
      )
     )
   )
  (W::repair
   (SENSES
    ((LF-PARENT ONT::REPAIR)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (templ agent-theme-instrument-optional-templ)
     (example "repair the truck (with the wrench)")
     )
    )
   )
  (W::dump
   (SENSES
    ;;;; swier -- dump the oranges off the truck
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("funnel-9.3-2-1"))
     (LF-PARENT ONT::UNLOAD)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-TEMPL (xp (% W::PP (W::ptype (? t W::off W::from)))))
     )
    ;;;; swier -- dump the oranges there.
    ((LF-PARENT ONT::UNLOAD)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::discharge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("discharge%2:29:00" "discharge%2:35:00" "discharge%2:35:06"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     (PREFERENCE 0.96)
     (example "they discharged him from the military")
     )
    ;; this sense is specific to cargo and containers
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("free-80"))
     (LF-PARENT ONT::UNLOAD)
     (example "discharge the oj from the tanker")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-TEMPL (xp (% W::PP (W::ptype W::from))))
     )
     (;;(LF-PARENT ont::releasing)
      (lf-parent ont::emit-giveoff-discharge) ;; 20120524 GUM change new parent
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil :vn ("free-78-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the spark plug discharges a spark")
     (TEMPL cause-THEME-XP-TEMPL)
     )
    )
   )

  (W::LOAD
   ;; here the goal is subcategorized for because the meanings of in/into seem not to vary
   ;; and we preserve isomorphism with the representation of the 'with' alternation
   ;; however we treat other spatial prepositions as mods (adverbials) and preserve the meanings
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("spray-9.7-2"))
     (LF-PARENT ONT::Fill-container)
     (example "load the oj into the tanker")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-TO-LOC-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::into W::in)))))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("spray-9.7-2"))
     (LF-PARENT ONT::Fill-container)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "load the truck with oj")
     (TEMPL AGENT-GOAL-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::with)))))
     )
    )
   )
  ((W::load (W::up))
   (SENSES
    ;;;; swier -- load up the oj
    ((LF-PARENT ONT::Fill-container)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    ;;;; swier -- load up the truck with oj
    ((LF-PARENT ONT::Fill-container)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-GOAL-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::with)))))
     )
    )
   )
  (W::fill
   (SENSES
    ((LF-PARENT ONT::FILL-container)
     (example "fill the truck with oj")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-GOAL-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::with)))))
     )
    ((LF-PARENT ONT::FILL-container)
     (example "the container filled")
     (TEMPL THEME-TEMPL)
     )
    )
   )
  ((W::fill (W::up))
   (SENSES
     ((LF-PARENT ONT::FILL-container)
      (example "fill up the truck with oj")
      (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
      (TEMPL AGENT-GOAL-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::with)))))
     )
    )
   )
  ((W::fill (W::out))
   (SENSES
     ((LF-PARENT ONT::write)
      (meta-data :origin calo :entry-date 20040622 :change-date nil :comments y2)
      (example "fill out the requisition form")
      (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
      (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  ((W::fill (W::in))
   (SENSES
     ((LF-PARENT ONT::write)
      (meta-data :origin calo :entry-date 20040622 :change-date nil :comments y2)
      (example "fill in the requisition form")
      (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
      (TEMPL AGENT-THEME-XP-TEMPL)
     )
     ((LF-PARENT ONT::write)
      (meta-data :origin plow :entry-date 20080924 :change-date nil :comments nil)
      (example "fill in the place of employment")
      (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
      (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  (w::sign
   (SENSES
     ((LF-PARENT ONT::write)
      (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("sign%2:32:02" "sign%2:41:00"))
      (example "sign the requisition form")
      (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
      (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )

((W::pick (w::out))
 (SENSES
    ((LF-PARENT ONT::SELECT)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "pick out a computer")
     (meta-data :origin calo :entry-date 20050323 :change-date nil :comments caloy2)
     )
    )
   )

  (W::pick
   (SENSES
    ((LF-PARENT ONT::SELECT)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (PREFERENCE 0.95)
     (example "pick the route")
     )
    ((meta-data :origin plow :entry-date 20060531 :change-date nil :comments nil)
     (LF-PARENT ONT::SELECT)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "pick red")
     (templ agent-theme-pred-templ)
     (preference .95)
     )
    )
   )

  ((W::pick (W::up))
   (SENSES
    ;;;; swier -- pick up the oranges.
    ((LF-PARENT ont::pickup)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (prototypical-word t)
     )
    ((LF-PARENT ont::clean)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin asma :entry-date 20111004)
     )
    ((LF-PARENT ONT::increase)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "use of wind energy picked up after the oil shortage")
     (meta-data :origin windmill :entry-date 20080604 :change-date 20090504 :comments nil)
     (templ theme-templ)
     )
    )
   )


  (W::collect
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("herd-47.5.2") :wn ("collect%2:35:00" "collect%2:35:01" "collect%2:38:00" "collect%2:40:00"))
     (LF-PARENT ONT::meet)
     (example "the crowd collected in the square")
     (TEMPL theme-plural-templ) ; like congregate,assemble,gather
     (PREFERENCE 0.96)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("shake-22.3-2"))
     (LF-PARENT ont::collect)
     (example "collect all the loot")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090430 :change-date nil :comments nil)
     (LF-PARENT ONT::commerce-collect)
     (example "do not collect $200")
     (TEMPL agent-cost-templ)
     )
    )
   )

  (W::bundle
   (SENSES
    ((LF-PARENT ont::joining)
     (example "bundle the gear together")
     (meta-data :origin calo :entry-date 20040921 :change-date nil :comments caloy2)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::grab
   (wordfeats (W::morph (:forms (-vb) :ing W::grabbing :past W::grabbed)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090430 :comments nil :vn ("obtain-13.5.2") :wn ("grab%2:35:00" "grab%2:40:00"))
     (LF-PARENT ONT::appropriate)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     (PREFERENCE 0.96)
     )
    )
   )
  (W::pack
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::Fill-container)
     (example "pack the oranges into the boxcar")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-TO-LOC-TEMPL (xp (% W::PP (W::ptype (? t W::into W::in)))))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::Fill-container)
     (example "pack the oranges into the boxcar")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::Fill-container)
     (example "pack the truck with oranges")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-GOAL-THEME-TEMPL (xp (% W::PP (W::ptype (? t W::with)))))
     )
    )
   )
  ((W::pack (W::up))
   (SENSES
    ;;;; swier -- pack up the oranges
    ((LF-PARENT ONT::Fill-container)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    ;;;; added by swier
    ;;;; swier -- pack up the truck with oranges
    ((LF-PARENT ONT::Fill-container)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-GOAL-THEME-TEMPL (xp (% W::PP (W::ptype (? t W::with)))))
     )
    )
   )
  (W::cram
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-goal-theme-templ (xp (% w::pp (w::ptype (? t w::with))))) ; like crowd,jam,pack,pile
     (PREFERENCE 0.96)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::Fill-container)
     (example "cram the oranges in/into/on the truck")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-TO-LOC-TEMPL (xp (% W::PP (W::ptype (? t w::on W::into W::in)))))
     )
    )
   )
  (W::stuff
   (SENSES
    ((LF-PARENT ONT::Fill-container)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-TO-LOC-TEMPL (xp (% W::PP (W::ptype (? t W::into W::in)))))
     (example "stuff the people in/into the rescue vehicle (like sardines)")
     )
    )
   )
  (W::put
   (wordfeats (W::morph (:forms (-vb) :past W::put :ing W::putting)))
   (SENSES
    ((LF-PARENT ONT::put)
     (meta-data :origin vn-analysis :entry-date unknown :change-date 20040617 :comments change-lf)
     (example "put the oj into the tanker")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ;; removing b.c. of conflict with making tea data Nov 2010
;    ((meta-data :origin calo :entry-date 20040505 :change-date nil :comments y1-variations)
;     (EXAMPLE "put it on my account")
;     (LF-PARENT ONT::commerce-pay)
;     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
;     (TEMPL AGENT-THEME-SOURCE-TEMPL (xp (% W::pp (W::ptype (? pt W::on)))))
;     )
    )
   )
 
  (W::position
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("put-9.1") :wn ("position%2:35:00"))
     (LF-PARENT ONT::arranging)
     (TEMPL agent-theme-xp-templ) ; like arrange
     (PREFERENCE 0.96)
     )
    )
   )
  (W::reposition
   (SENSES
    ((LF-PARENT ONT::arranging)
     (meta-data :origin task-learning :entry-date 20050822 :change-date 20090507 :comments nil)
     (example "reposition the object")
     )
    )
   )
  (W::insert
   (wordfeats (W::morph (:forms (-vb) :nom w::insertion)))
   (SENSES
    ((LF-PARENT ONT::put)
     (meta-data :origin task-learning :entry-date 20050812 :change-date nil :comments nil :vn ("put-9.1"))
     (example "You can insert additional characters")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::introduce
   (wordfeats (W::morph (:forms (-vb) :nom W::introduction)))
   (SENSES
    ((LF-PARENT ONT::cause-make)
     (meta-data :origin task-learning :entry-date 20050831 :change-date nil :comments nil)
     (example "others introduce problems in the library")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::embed
   (SENSES
    ((LF-PARENT ONT::put)
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil)
     (example "embed an applet in the document")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::plant
   (SENSES
    ((LF-PARENT ONT::placing)
     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
     (example "plant the cactus")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )

  ((W::put (w::back))
   (wordfeats (W::morph (:forms (-vb) :past W::put :ing W::putting)))
   (SENSES
    ((LF-PARENT ONT::RETURN)
     (meta-data :origin lam :entry-date 20050629 :change-date nil )
     (example "put back in the original form")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded))
     )
    )
   )

  ((W::put (W::out))
    (wordfeats (W::morph (:forms (-vb) :past W::put :ing W::putting)))
   (SENSES
    ((LF-PARENT ONT::STOP) 
     (example "put out the fire")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-XP-TEMPL)
     )
    )
   )
  (W::LIKE
   (SENSES
    ;;;; NOTE: This is the only sense of "LIKE" meaning "want"
    ;;;; Swier -- Having just crossed Death Valley, I would like to have some water.
    ((LF-PARENT ONT::appreciate)
     (SEM (F::Aspect F::indiv-level))
     (TEMPL EXPERIENCER-action-SUBJCONTROL-TEMPL)
     (example "I would like to have some water")
     )
    ((LF-PARENT ONT::appreciate)
     (SEM (F::Aspect F::indiv-level))
     (meta-data :origin cardiac :entry-date 20081005 :change-date 200905008 :comments nil)
     (TEMPL EXPERIENCER-action-SUBJCONTROL-TEMPL  (xp (% W::VP (W::vform W::ing))))
     (example "He likes drinking water after a hike")
     )
    ((LF-PARENT ONT::appreciate)
     (SEM (F::Aspect F::indiv-level))
     (example "I like oranges")
     (TEMPL experiencer-theme-xp-templ)
     )    
    ((LF-PARENT ONT::appreciate)
     (SEM (F::Aspect F::indiv-level))
     (example "I like him to dance")
     (TEMPL EXPERIENCER-ACTION-OBJCONTROL-TEMPL)
     )
    )
   )
 (W::hate
   (SENSES
    ((LF-PARENT ONT::disliking)
     (meta-data :origin calo :entry-date 20050425 :change-date 20090511 :comments projector-purchasing)
     (SEM (F::Aspect F::indiv-level))
     (example "I hate oranges")
     (TEMPL experiencer-theme-xp-templ)
     )
    ((LF-PARENT ONT::disliking)
     (meta-data :origin calo :entry-date 20050425 :change-date 20090511 :comments projector-purchasing)
     (SEM (F::Aspect F::indiv-level))
     (example "I hate to dance")
     (TEMPL EXPERIENCER-ACTION-OBJCONTROL-TEMPL)
     )
    )
   )
  (W::love
   (SENSES
    ((LF-PARENT ONT::appreciate)
     (meta-data :origin calo :entry-date 20050425 :change-date 20090508 :comments projector-purchasing)
     (SEM (F::Aspect F::indiv-level))
     (example "I love oranges")
     (TEMPL experiencer-theme-xp-templ)
     )
    ((LF-PARENT ONT::appreciate)
     (meta-data :origin calo :entry-date 20050425 :change-date 20090508 :comments projector-purchasing)
     (SEM (F::Aspect F::indiv-level))
     (example "I love to dance")
     (TEMPL EXPERIENCER-ACTION-OBJCONTROL-TEMPL)
     )
    )
   )
 (W::adore
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("adore%2:37:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     (PREFERENCE 0.96)
     )
    ; prefer vn sense
;    ((LF-PARENT ONT::experiencer-emotion)
;     (meta-data :origin calo :entry-date 20050425 :change-date nil :comments projector-purchasing)
;     (SEM (F::Aspect F::indiv-level))
;     (example "I adore oranges")
;     (TEMPL experiencer-theme-xp-templ)
;     )
    )
   )
 (W::admire
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("admire%2:37:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     (PREFERENCE 0.96)
     )
    )
   )
 (W::despise
   (SENSES
    ((LF-PARENT ONT::disliking)
     (meta-data :origin calo :entry-date 20050425 :change-date 20090508 :comments projector-purchasing)
     (SEM (F::Aspect F::indiv-level))
     (example "I despise oranges")
     (TEMPL experiencer-theme-xp-templ)
     )
    )
   )
 (W::detest
   (SENSES
    ((LF-PARENT ONT::disliking)
     (meta-data :origin calo :entry-date 20050425 :change-date 20090508 :comments projector-purchasing)
     (SEM (F::Aspect F::indiv-level))
     (example "I detest oranges")
     (TEMPL experiencer-theme-xp-templ)
     )
    )
   )
 (W::loathe
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("admire-31.2") :wn ("loathe%2:37:00"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::disliking)
     (meta-data :origin calo :entry-date 20050425 :change-date 20090508 :comments projector-purchasing)
     (SEM (F::Aspect F::indiv-level))
     (example "I loathe oranges")
     (TEMPL experiencer-theme-xp-templ)
     )
    )
   )
 (W::dislike
   (SENSES
    ((LF-PARENT ONT::disliking)
     (meta-data :origin calo :entry-date 20050425 :change-date 20090508 :comments projector-purchasing)
     (SEM (F::Aspect F::indiv-level))
     (example "I dislike oranges")
     (TEMPL experiencer-theme-xp-templ)
     )
    )
   )
;; changed to ont::appreciate from ont::experiencer-emotion
 (W::appreciate
   (SENSES
    ((LF-PARENT ONT::appreciate)
     (meta-data :origin calo :entry-date 20050425 :change-date 20060125 :comments projector-purchasing :vn ("admire-31.2") :wn ("appreciate%2:37:00" "appreciate%2:40:00"))
     (SEM (F::Aspect F::indiv-level))
     (example "I appreciate oranges")
     (TEMPL experiencer-theme-xp-templ)
     )
    )
   )
  (W::COMPLETE
   (SENSES
    ((LF-PARENT ONT::COMPLETE)
     (example "complete the plan")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
 (W::finalize
   (SENSES
    ((LF-PARENT ONT::COMPLETE)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "let's finalize the order")
     (meta-data :origin calo :entry-date 20041026 :change-date nil :comments caloy2)
     )
    )
   )
  (W::finish
   (SENSES
    ;;;; swier -- Finish the plan
    ((LF-PARENT ONT::complete)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ cause-effect-xp-templ)
     )
    ;;;; they finished
    ((LF-PARENT ONT::COMPLETE)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-TEMPL)
     )
    ;;;; Finish doing the action
    ((LF-PARENT ONT::COMPLETE)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::VP (W::vform W::ing))))
     )
    )
   )
  ((W::finish (W::up))
   (SENSES
    ;;;; swier -- Finish the plan
    ((LF-PARENT ONT::COMPLETE)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    ;;;; they finished up
    ((LF-PARENT ONT::COMPLETE)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    ;;;; Finish doing the action
    ((LF-PARENT ONT::COMPLETE)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::VP (W::vform W::ing))))
     )
    )
   )
  (W::accomplish
   (SENSES
    ;;;; Accomplish the task
    ((LF-PARENT ONT::COMPLETE)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::solve
   (SENSES
    ((LF-PARENT ONT::SOLVE)
     (example "solve the problem")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (W::resolve
   (SENSES
    ((LF-PARENT ONT::SOLVE)
     (meta-data :origin task-learning :entry-date 20050830 :change-date nil :comments nil)
     (example "resolve the conflict")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::SOLVE)
     (meta-data :origin task-learning :entry-date 20050830 :change-date nil :comments nil)
     (example "the treaty resolved the conflict")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL THEME-CO-THEME-XP-TEMPL)
     )
    )
   )
  (W::achieve
   (SENSES
    ;;;; Achieve the goal
    ((LF-PARENT ONT::complete) ;; like attain
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((meta-data :origin step :entry-date 20080625 :change-date nil :comments nil)
     (LF-PARENT ONT::reach)
     (example "the piston achieves its target position")
     (TEMPL theme-goal-xp-templ)
     )
    )
   )
  (W::fit
   (wordfeats (W::morph (:forms (-vb) :ing W::fitting :past W::fit)))
   (SENSES
    ((EXAMPLE "The ball fits under the table" "will it fit in the truck")
     (LF-PARENT ONT::could-be-at)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    ((EXAMPLE "He fit it under the table")
     (LF-PARENT ONT::put)
     (TEMPL agent-theme-xp-TEMPL)
     (meta-data :origin gloss :entry-date 20110127 :change-date nil :comments Jansen)
     )
    )
   )

  ;; alternate past form
  (w::fitted
   (wordfeats (W::morph (:forms NIL)) (W::agr (? ag W::1s w::2s W::3s w::1p w::2p w::3p)))
   (senses
    ((EXAMPLE "He fitted it under the table")
     (LF-PARENT ONT::put)
     (syntax (w::vform (? vf w::past w::pastpart)))
     (templ agent-theme-xp-templ)
     )
    )
   )

  ((W::hitch (W::along))
   (SENSES
    ;;;; hitch the truck along the train
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  ((W::hook (W::on))
   (SENSES
    ;;;; hook the car on the train????
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  ((W::hook (W::up))
   (SENSES
    ;;;; hook up the car to the train
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     ;; Myrosia fixed 20040704 - used the incorrect template - needs 3 arguments, with optional pp!!! 
     (TEMPL AGENT-THEME-CO-THEME-OPTIONAL-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )
  ((W::rehook (W::up))
   (SENSES
    ;;;; hook the car up
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ;;;; hook up the car to the train
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-co-theme-optional-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )
  (W::attach
   (SENSES
    ;;;; attach the car to the train
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-CO-THEME-optional-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )

 (W::refer
  (wordfeats (W::morph (:forms (-vb) :past W::referred :ing W::referring :nom referral)))
   (SENSES
     ((meta-data :origin calo :entry-date 20031230 :change-date 20090506 :comments html-purchasing-corpus)
      ;;(LF-PARENT ONT::announce)
      (lf-parent ont::advertize-announce-convey-promulgate-refer-advertise) ;; 20120523 GUM change new parent
      (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
      (TEMPL AGENT-associated-information-TEMPL (xp (% W::pp (W::ptype W::to))))
      )
    ((meta-data :origin cernl :entry-date 20100503)
     (LF-PARENT ONT::SUGGEST)
     (example "I refer him (to you)")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-to-addressee-optional-TEMPL)
     )
     )
   )
  (W::COUPLE
   (SENSES
    ((LF-PARENT ONT::ATTACH)
     (example "couple the car with the train")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-co-theme-TEMPL (xp (% W::pp (W::ptype (? pt w::to W::with)))))
     )
    )
   )
  (W::hitch
   (SENSES
    ((LF-PARENT ONT::ATTACH)
     (example "hitch the boxcar to the engine")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-CO-THEME-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )
  (W::link
   (SENSES
    ;;;; link the car to the train
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    ;;;; the path links one city to/with another
    ((LF-PARENT ONT::CONNECTED)
     (SEM (F::Aspect F::indiv-level))
     (TEMPL INSTRUMENT-CO-THEME-XP-TEMPL)
     )
    ;;;; the path links 2 cities
    ((LF-PARENT ONT::CONNECTED)
     (SEM (F::Aspect F::indiv-level))
     (TEMPL THEME-PLURAL-TEMPL)
     )
    )
   )
  (W::relink
   (SENSES
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::to))))
     (EXAMPLE "relink the program to the library")
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments :nil)
     )
    )
   )
  (W::unhook
   (SENSES
    ;;;; swier -- unhook the boxcar
    ((LF-PARENT ONT::UNATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     )
    )
   )
  (W::unhitch
   (SENSES
    ;;;; swier -- unhich the boxcar
    ((LF-PARENT ONT::UNATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     )
    )
   )
  (W::decouple
   (SENSES
    ;;;; swier -- decouple the boxcar
    ((LF-PARENT ONT::UNATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     )
    )
   )
  (W::unplug
   (SENSES
    ((LF-PARENT ONT::UNATTACH)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (EXAMPLE "unplug the ethernet cable")
      (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     (meta-data :origin task-learning :entry-date 20050912 :change-date nil :comments nil)
     )
    )
   )
  (W::contain
   (SENSES
    ((LF-PARENT ONT::CONTAINMENT)
      (EXAMPLE "The truck contains the cargo")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL LOCATION-THEME-TEMPL)
     )
    )
   )

  (W::store
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("keep-15.2") :wn ("store%2:40:00" "store%2:40:02"))
     (LF-PARENT ONT::retain)
     (TEMPL agent-theme-xp-templ) ; like keep
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20031219 :change-date nil :comments s11)
     (EXAMPLE "The truck stored the cargo")
     (LF-PARENT ONT::CONTAINMENT)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL LOCATION-THEME-TEMPL)
     )
    ((meta-data :origin calo :entry-date 20040423 :change-date nil :comments s11)
     (LF-PARENT ONT::duplicate)
     (example "he stored the data on the computer")
     )
    )
   )

 (W::file
   (SENSES
    ((LF-PARENT ONT::submit)
     (meta-data :origin calo-ontology :entry-date 20051214 :change-date 20090501 :comments nil)
     (example "file the document")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
     ((LF-PARENT ONT::submit)
     (meta-data :origin calo-ontology :entry-date 20051214 :change-date 20090501 :comments nil)
     (example "file for protection")
     (templ agent-theme-xp-templ (xp (% W::pp (W::ptype W::for))))
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )

  (W::hold
   (wordfeats (W::morph (:forms (-vb) :past W::held :nom w::hold)))
   (SENSES
    ((EXAMPLE "The truck held the cargo")
     (LF-PARENT ONT::CONTAINMENT)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL LOCATION-THEME-TEMPL)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("hold-15.1-1"))
     (EXAMPLE "Hold the cup")
     (LF-PARENT ONT::BODY-MANIPULATION)
     (SEM (F::Cause F::agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ((EXAMPLE "Hold the reservation")
     (meta-data :origin calo-ontology :entry-date 20051214 :change-date nil :comments nil)
     (LF-PARENT ONT::retain)
     (SEM (F::Cause F::agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )

  (W::happen
   (wordfeats (W::morph (:forms (-vb) :past W::happened :ing W::happening :nom w::happening)))
   (SENSES
    ;;;; swier -- shit happens. (Ha!)
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("occurrence-48.3") :wn ("happen%2:30:00" "happen%2:30:01"))
     (LF-PARENT ONT::HAPPEN)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     )
    ((LF-PARENT ONT::HAPPEN)
     (example "it happened [to be true]")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-EFFECT-XP-TEMPL  (xp (% W::cp (W::ctype W::s-to))))
     )
    )
   )
  (W::occur
   (wordfeats (W::morph (:forms (-vb) :nom w::occurrence)))
   (SENSES
    ((LF-PARENT ONT::HAPPEN)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     (EXAMPLE "save error messages that occur in java applets")
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil :vn ("occurrence-48.3") :wn ("occur%2:30:00"))
     )
    )
   )

((w::look w::for)
 (senses
  ((EXAMPLE "look for something else")
   (LF-PARENT ONT::seek)
   (TEMPL cognizer-THEME-XP-TEMPL)
   (meta-data :origin calo :entry-date 20050323 :change-date nil :comments caloy2)
   )
  )
 )

(w::peek
   (wordfeats (W::morph (:forms (-vb) :nom W::peek)))
 (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("peek%2:39:00" "peek%2:39:02"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     (PREFERENCE 0.96)
     )
  ((EXAMPLE "peek at something")
   (LF-PARENT ONT::scrutiny)
   (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
   (TEMPL cognizer-THEME-XP-TEMPL  (xp (% W::pp (W::ptype W::at))))
   (meta-data :origin fruitcarts :entry-date 20060215 :change-date nil :comments nil)
   )
  )
 )

((w::look (w::over))
 (senses
  ((EXAMPLE "look over the choices")
   (LF-PARENT ONT::scrutiny)
   (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
   (TEMPL cognizer-THEME-XP-TEMPL)
   (meta-data :origin calo :entry-date 20050323 :change-date nil :comments caloy2)
   )
  )
 )
((w::look (w::up))
 (senses
  ((EXAMPLE "look up the number in the book")
   (LF-PARENT ONT::look-up)
   (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
   (TEMPL cognizer-THEME-XP-TEMPL)
   (meta-data :origin calo :entry-date 20050323 :change-date nil :comments caloy2)
   )
  )
 )

  (W::look
   (wordfeats (W::morph (:forms (-vb) :nom W::look)))
   (SENSES
    ((LF-PARENT ONT::APPEARS-TO-HAVE-PROPERTY)
     (example "he looks happy (to me)")
     (TEMPL THEME-PRED-EXPERIENCER-optional-TEMPL)
     )
    ;; but shouldn't this really be an agent??
    ;; seems reasonable -- but perception verbs in framenet have experiencer subjects
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("peer-30.3") :wn ("look%2:39:00" "look%2:39:02"))
     (LF-PARENT ONT::ACTIVE-PERCEPTION)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL EXPERIENCER-TEMPL)
     (example "look behind the shed")
     )
    ((EXAMPLE "look at something else")
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL  (xp (% W::pp (W::ptype W::at))))
     (meta-data :origin calo :entry-date 20041026 :change-date nil :comments caloy2)
     )
    ((EXAMPLE "look into the options")
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL  (xp (% W::pp (W::ptype W::into))))
     (meta-data :origin calo :entry-date 20050323 :change-date nil :comments caloy2)
     )
    )
   )


(w::investigate
  (wordfeats (W::morph (:forms (-vb) :nom W::investigation)))
 (senses
  ((EXAMPLE "investigate the options")
   (LF-PARENT ONT::scrutiny)
   (TEMPL cognizer-THEME-XP-TEMPL)
   (meta-data :origin calo :entry-date 20050323 :change-date nil :comments caloy2 :vn ("investigate-35.4") :wn ("investigate%2:32:00" "investigate%2:32:01"))
   )
  )
 )

(w::research
   (wordfeats (W::morph (:forms (-vb) :nom W::research)))
 (senses
  ((EXAMPLE "ressearch the options")
   (LF-PARENT ONT::scrutiny)
   (TEMPL cognizer-THEME-XP-TEMPL)
   (meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments LM-vocab :vn ("investigate-35.4") :wn ("investigate%2:32:00" "investigate%2:32:01"))
   )
  )
 )

(W::appear
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("appear-48.1.1") :wn ("appear%2:30:00" "appear%2:30:01"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-to-loc-xp-templ (xp (% w::pp (w::ptype w::at)))) ; like show-up
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20040916 :change-date nil :comments caloy2)
      (LF-PARENT ONT::APPEARS-TO-HAVE-PROPERTY)
     (example "he appears happy")
     (TEMPL THEME-PRED-EXPERIENCER-OPTIONAL-TEMPL)
     )
    ((EXAMPLE "It appears that he is happy")
     (meta-data :origin calo :entry-date 20040916 :change-date nil :comments caloy2)
     (LF-PARENT ONT::POSSIBLY-EXISTS)
     (SEM (F::Aspect F::stage-level))
     (TEMPL EXPLETIVE-THEME-TEMPL (xp1 (% W::NP (W::lex W::it))) (xp2 (% W::cp (W::ctype W::s-finite))))
     )
    ((EXAMPLE "there appears to be a truck on the corner")
     (LF-PARENT ONT::POSSIBLY-EXISTS)
     (SEM (F::Aspect F::stage-level))
     (TEMPL EXPLETIVE-THEME-TEMPL (xp1 (% W::NP (W::lex W::there))) (xp2 (% W::cp (W::ctype W::s-to))))
     )
    ((LF-PARENT ONT::APPEARS-TO-HAVE-PROPERTY)
     (meta-data :origin calo :entry-date 20040916 :change-date nil :comments caloy2)
     (example "he appears to be happy")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL experiencer-EFFECT-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
     )
    )
   )


  ((W::look W::like)
   (SENSES
    ;;;; It looks like we will have to go
    ((LF-PARENT ONT::POSSIBLY-EXISTS)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL EXPLETIVE-THEME-TEMPL (xp1 (% W::NP (W::lex W::it))) (xp2 (% W::s (W::stype W::decl))))
     )
    ((meta-data :origin calo :entry-date 20040421 :change-date nil :comments caloy1v4)
     (LF-PARENT ONT::object-compare)
     (example "delivery time looks like about a week")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     )
    )
   )
  ((W::seem W::like)
   (SENSES
    ;;;; it seems like we will have to go
    ((LF-PARENT ONT::POSSIBLY-EXISTS)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL EXPLETIVE-THEME-TEMPL (xp1 (% W::NP (W::lex W::it))) (xp2 (% W::s (W::stype W::decl))))
     )
    )
   )

  (W::seem
   (SENSES
    ((LF-PARENT ONT::APPEARS-TO-HAVE-PROPERTY)
     (example "he seems happy")
     (TEMPL THEME-PRED-EXPERIENCER-OPTIONAL-TEMPL)
     )
    ((EXAMPLE "It seems that he came")
     (LF-PARENT ONT::POSSIBLY-EXISTS)
     (SEM (F::Aspect F::stage-level))
     (TEMPL EXPLETIVE-THEME-TEMPL (xp1 (% W::NP (W::lex W::it))) (xp2 (% W::cp (W::ctype W::s-finite))))
     )
    ((EXAMPLE "there seems to be a truck on the corner")
     (LF-PARENT ONT::POSSIBLY-EXISTS)
     (SEM (F::Aspect F::stage-level))
     (TEMPL EXPLETIVE-THEME-TEMPL (xp1 (% W::NP (W::lex W::there))) (xp2 (% W::cp (W::ctype W::s-to))))
     )
    ((LF-PARENT ONT::APPEARS-TO-HAVE-PROPERTY)
     (example "he seems to be happy/the situation seems to be out of control")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-EFFECT-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
     )
    )
   )

  (W::process
   (SENSES
    ((LF-PARENT ONT::nature-change)
     (example "process the oranges into juice")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::into))))
     )
    )
   )

 (W::misunderstand
   (wordfeats (W::morph (:forms (-vb) :past W::misunderstood)))
   (SENSES
    ((LF-PARENT ONT::Misunderstand)
     (meta-data :origin "trips" :entry-date 20060315 :change-date nil :comments nil :wn ("misunderstand%2:31:01"))
     (example "I misunderstood the situation")
     (SEM (F::Aspect F::stage-level))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (W::understand
   (wordfeats (W::morph (:forms (-vb) :past W::understood)))
   (SENSES
    ((LF-PARENT ONT::come-to-understand)
      (meta-data :origin "trips" :entry-date 20060315 :change-date nil :comments nil :wn ("understand%2:31:00" "understand%2:31:01"))
     (example "I understand the plan")
     (SEM (F::Aspect F::Stage-level))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::come-to-understand)
     (SEM (F::Aspect F::Indiv-level))
     (TEMPL COGNIZER-TEMPL)
     (example "I understand")
     )
    )
   )
  (W::attempt
   (wordfeats (W::morph (:forms (-vb) :nom W::attempt)))
   (SENSES
    ((LF-PARENT ONT::TRY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-effect-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype (? ct W::s-to)))))
     (example "he attempted to climb mt everest")
     )
      ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("try-61"))
       (LF-PARENT ONT::TRY)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-effect-xp-TEMPL)
     (example "he attempted the puzzle")
     )
    )
   )
  (W::affect
   (SENSES
    ((meta-data :origin beetle :entry-date 20081107 :change-date nil :comments nil)
     (LF-PARENT ONT::objective-influence)
     (EXAMPLE "the plan affects another plan" "the plan affects the city")
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    ))

 (w::conduct
   (senses
    ((EXAMPLE "conduct an investigation")
     (LF-PARENT ont::execute)
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-XP-TEMPL)
     )
    ((meta-data :origin coordops :entry-date 20070511 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::guiding)
     (example "team alpha will conduct the activity")
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
 (w::emit
  (wordfeats (W::morph (:forms (-vb) :nom w::emission)))
   (senses
    (;(LF-PARENT ont::releasing)
     (lf-parent ont::emit-giveoff-discharge) ;; 20120524 GUM change new parent
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil :vn ("free-78-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the spark plug emits a spark")
     (TEMPL cause-THEME-XP-TEMPL)
     )
    )
   )
 (w::exert
    (wordfeats (W::morph (:forms (-vb) :nom w::exertion)))
   (senses
    ((LF-PARENT ont::use)
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil :vn ("free-78-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the amount of force exerted by the explosion")
     (TEMPL cause-THEME-XP-TEMPL)
     )
    )
   )
  ((w::let (w::off))
   (wordfeats (W::morph (:forms (-vb) :past W::let)))
   (senses
    ((LF-PARENT ont::releasing)
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil :vn ("free-78-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the spark plug lets off a spark")
     (TEMPL cause-THEME-XP-TEMPL)
     (preference .96)
     )
    )
   )
  ((w::give (w::off))
   (wordfeats (W::morph (:forms (-vb) :past W::gave)))
   (senses
    (;;(LF-PARENT ont::releasing)
     (lf-parent ont::emit-giveoff-discharge) ;; 20120524 GUM change new parent
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil :vn ("free-78-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the spark plug gives off a spark")
     (TEMPL cause-THEME-XP-TEMPL)
     )
    )
   )
  ((w::let (w::out))
   (wordfeats (W::morph (:forms (-vb) :past W::let)))
   (senses
    ((LF-PARENT ont::releasing)
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil :vn ("free-78-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the spark plug lets out a spark")
     (TEMPL cause-THEME-XP-TEMPL)
     (preference .96)
     )
    )
   )

 ((w::send (w::forth))
  (wordfeats (W::morph (:forms (-vb) :past W::sent)))
   (senses
    ((LF-PARENT ont::releasing)
     (meta-data :origin LbR :entry-date 20080922 :change-date nil :comments nil :vn ("free-78-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the spark plug emits a spark")
     (TEMPL cause-THEME-XP-TEMPL)
     )
    )
   )

  (w::release
   (senses
    ((EXAMPLE "release the resources")
     (LF-PARENT ont::releasing)
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Release-Resources :vn ("free-78-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-THEME-XP-TEMPL)
     )
    ((LF-PARENT ont::releasing)
     (meta-data :origin step :entry-date 20060630 :change-date nil :comments nil :vn ("free-78-1"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the curtain releases toxic fumes")
     (TEMPL cause-THEME-XP-TEMPL)
     )
    )
   )
 ((w::let w::go)
   (wordfeats (W::morph (:forms (-vb) :past W::let)))
   (senses
    ((EXAMPLE "let go of the problem")
     (LF-PARENT ont::releasing)
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Release-Resources)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::of))))
     (preference .97)
     )
    )
   )
  (W::manipulate
   (wordfeats (W::morph (:forms (-vb) :nom W::manipulation)))
   (SENSES
    ((EXAMPLE "manipulate the image")
     (LF-PARENT ONT::manipulate)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-THEME-XP-TEMPL)
     ;; changed from ont::interact to ont::manipulate
     (meta-data :origin task-learning :entry-date 20051213 :change-date nil :comments nil)
     )
    )
   )

 (W::influence
  (wordfeats (W::morph (:forms (-vb) :nom W::influence)))
   (SENSES
    ((EXAMPLE "influence the voters" "this decision influences our plan")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date 20081107 :comments nil)
     (LF-PARENT ONT::objective-influence)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    )
   )

  (W::let
   (wordfeats (W::morph (:forms (-vb) :past W::let :ing W::letting)))
   (SENSES
    ((LF-PARENT ONT::ALLOW)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "let them eat cake" "let me teach you how to dance")
     (TEMPL cause-effect-affected-OBJCONTROL-TEMPL (xp (% W::VP (W::vform W::base))))
     )
    ;; this should have an implicit effect
    ((LF-PARENT ONT::ALLOW)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "let them")
     (preference .95)
     (TEMPL cause-affected-XP-TEMPL)
     )
    )
   )
  (W::clear
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("clear%2:43:00"))
     (LF-PARENT ont::atmospheric-event)
     (TEMPL expletive-templ) ; like rain
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::empty)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-SOURCE-TEMPL)
     (example "clear the airfield")
     )
    ((LF-PARENT ONT::empty)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-SOURCE-THEME-TEMPL (xp (% W::pp (W::ptype W::of))))
     (example "clear the airfield of debris")
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090529 :comments nil :vn ("clear-10.3-1"))
     (LF-PARENT ONT::empty)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-SOURCE-TEMPL (xp (% W::PP (W::ptype (? ptp W::from W::off)))))
     ;;;; swier --
     (example "clear the dust from the monitor")
     )
    )
   )
  ((W::clear (W::out))
   (SENSES
    ((LF-PARENT ONT::empty)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-SOURCE-TEMPL)
     (preference .92)
     (example "clear out the airfield")
     )
    )
   )
  (W::dare
   (SENSES
    ((LF-PARENT ONT::PROVOKE)
     (TEMPL CAUSE-EFFECT-SUBJCONTROL-TEMPL)
     (example "he dared to release the storm report")
     )
    ((LF-PARENT ONT::PROVOKE)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)
     (example "he dared him to release the storm report")
     )
    )
   )
  (W::decide
   (wordfeats (W::morph (:forms (-vb) :nom w::decision)))
   (SENSES
    ((LF-PARENT ONT::decide)
     (example "decide how to do it")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-if))))
     )
    ((LF-PARENT ONT::decide)
     (example "he decided to do it")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-SUBJCONTROL-TEMPL)
     )
    ((LF-PARENT ONT::decide)
     (example "decide on the plan")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::on))))
     )
    ((LF-PARENT ONT::decide)
     (example "decide the issue")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ cognizer-theme-xp-templ)
     )
     ((LF-PARENT ONT::decide)
     (example "the committee decided this morning")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ cognizer-templ)
     (preference. 96)
     )
    )
   )

  (W::inform
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("advise-37.9"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-associated-information-templ) ; like notify
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("advise-37.9"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like notify
     (PREFERENCE 0.96)
     )
    )
  )
 (W::allocate
   (SENSES
    ((lf-parent ont::assign)
     (templ agent-theme-recipient-alternation-templ)
     (example "allocate the resources to them")
     (meta-data :origin calo-ontology :entry-date 20051208 :change-date nil :comments action-subclasses)
     )
    )
   )

 (W::dispense
   (SENSES
    ((lf-parent ont::assign)
     (templ agent-theme-to-recipient-optional-templ)
     (example "dispense the vaccine to the community")
     (meta-data :origin calo-ontology :entry-date 20051208 :change-date nil :comments action-subclasses)
     )
    )
   )
 (W::allot
   (wordfeats (W::morph (:forms (-vb) :past W::allotted)))
   (SENSES
    ((lf-parent ont::assign)
     (templ agent-theme-recipient-alternation-templ)
     (example "allot the resources to them")
     (meta-data :origin calo-ontology :entry-date 20051208 :change-date nil :comments action-subclasses)
     )
    )
   )
  (W::give
   (wordfeats (W::morph (:forms (-vb) :past W::gave :pastpart W::given)))
   (SENSES
    ((lf-parent ont::giving)
     (templ agent-theme-recipient-alternation-templ)
     (example "give a gift/a job to him")
     ;; restructured this to allow non-movable things to be given
     (meta-data :origin calo :entry-date unknown :change-date 20040505 :comments calo-y1variants)
    )
    ((LF-PARENT ONT::CAUSE-MAKE)
     (TEMPL cause-theme-effect-templ)
     (preference .96) ;; prefer ont::giving
     (EXAMPLE "aspirin gives me headaches")
     (meta-data :origin medadvisor :entry-date 20011227 :change-date nil :comments nil)
     )
    )
   )
  (W::lend
   (wordfeats (W::morph (:forms (-vb) :past W::lent)))
   (SENSES
    ((lf-parent ont::lend)
     (templ agent-theme-recipient-alternation-templ)
     (meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     )
    )
   )
  (W::grant
   (SENSES
    ((lf-parent ont::giving)
     (templ agent-theme-recipient-alternation-templ)
     (example "grant access to everyone in the class")
     (meta-data :origin task-learning :entry-date 20050823 :change-date nil :comments nil)
     )
    )
   )
  (W::surrender
    (wordfeats (W::morph (:forms (-vb) :past W::surrendered :ing surrendering)))
   (SENSES
    ((lf-parent ont::surrender)
     (templ agent-theme-to-recipient-optional-templ)
     (example "surrender rights to him")
     (meta-data :origin task-learning :entry-date 20050831 :change-date 20090501 :comments nil)
     )
    )
   )
  (W::relinquish
   (SENSES
    ((lf-parent ONT::surrender)
     (templ agent-theme-to-recipient-optional-templ)
     (example "I am relinquishing my bedroom to the long-term house guest")
     (meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     )
    )
   )
  (W::supply
   (SENSES
    ((lf-parent ont::supply)
     (templ agent-theme-recipient-alternation-templ)
     (example "supply a gift/a job to him supply him a job")
     (meta-data :origin task-learning :entry-date 20050822 :change-date 20090501 :comments nil :vn ("fulfilling-13.4.1-1"))
     )
    ((meta-data :origin calo-ontology :entry-date 20060315 :change-date 20090501 :comments nil)
     (LF-PARENT ONT::supply)
     (example "supply him with the goods")
     (TEMPL agent-recipient-theme-templ (xp (% w::pp (w::ptype w::with))))
     )
    ((lf-parent ont::supply)
     (templ cause-theme-recipient-alternation-templ)
     (example "supply a gift/a job to him supply him a job")
     (meta-data :origin step :entry-date 20080528 :change-date 20090501 :comments nil :vn ("fulfilling-13.4.1-1"))
     )
    ((meta-data :origin step :entry-date 20080528 :change-date 20090501 :comments nil)
     (LF-PARENT ONT::supply)
     (example "the engine supplied him with energy")
     (TEMPL cause-recipient-theme-templ (xp (% w::pp (w::ptype w::with))))
     )
    )
   )
  (W::equip
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     (LF-PARENT ONT::supply)
     (example "equip him with a sword")
     (TEMPL agent-recipient-theme-templ (xp (% w::pp (w::ptype w::with))))
     )
    )
   )
  (W::fuel
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090501 :change-date nil :comments nil)
     (LF-PARENT ONT::filling)
     (example "fuel the car with unleaded gasoline")
     (TEMPL AGENT-GOAL-THEME-OPTIONAL-TEMPL)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090521 :change-date nil :comments nil)
     (LF-PARENT ONT::filling)
     (example "The tanker fueled in Iran")
     (templ goal-templ)
     (preference .97) 
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090521 :change-date nil :comments nil)
     (LF-PARENT ONT::cause-stimulate)
     (example "oxygen fueled the fire" "he fueled the debate with his interest in the presidency")
     (TEMPL CAUSE-AFFECTED-XP-TEMPL)
     )
    )
   )
  (W::distribute
   (wordfeats (W::morph (:forms (-vb) :nom W::distribution)))
   (SENSES
    ((lf-parent ont::assign)
     (templ agent-theme-plural-recipient-optional-templ)
     (example "distribute gifts to them")
     (meta-data :origin task-learning :entry-date 20050818 :change-date 20090501 :comments nil)
    )
    ((lf-parent ont::assign)
     (templ agent-theme-mass-recipient-optional-templ)
     (example "distribute the software to them")
     (meta-data :origin task-learning :entry-date 20050818 :change-date 20090501 :comments nil)
    )
   )
  )
  (W::redistribute
   (SENSES
    ((lf-parent ont::assign)
     (templ agent-theme-plural-recipient-optional-templ)
     (example "redistribute gifts to them")
     (meta-data :origin task-learning :entry-date 20050831 :change-date 20090501 :comments nil)
    )
    ((lf-parent ont::assign)
     (templ agent-theme-mass-recipient-optional-templ)
     (example "redistribute the software to them")
     (meta-data :origin task-learning :entry-date 20050831 :change-date 20090501 :comments nil)
    )
   )
  )
(W::offer
   (SENSES
    ((lf-parent ont::offer)
     (templ agent-theme-recipient-alternation-templ)
     (example "offer a gift/a job to him offer him a job")
     ;; restructured this to allow non-movable things to be given
     (meta-data :origin calo :entry-date unknown :change-date 20090513 :comments calo-y1variants)
    )
    ((LF-PARENT ONT::supply)
     (example "the bid offers incentive (to the group)")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL cause-theme-to-recipient-optional-TEMPL)
     (meta-data :origin ptb :entry-date 20100604 :change-date 20090501 :comments nil)
     )
    )
   )

  (W::indicate
   (wordfeats (W::morph (:forms (-vb) :nom W::indication)))
   (SENSES
    ((LF-PARENT ONT::correlation)
     (example "a cough indicates a cold")
     (TEMPL theme-co-theme-xp-templ)
     )
    ((LF-PARENT ONT::correlation)
     (example "a cough indicates whether a person has a cold")
     (TEMPL theme-co-theme-xp-templ (xp (% w::cp (w::ctype (? ct w::s-that w::s-if)))))
     )
    )
   )
  (W::reflect
   (wordfeats (W::morph (:forms (-vb) :nom W::reflection)))
   (SENSES
    ((LF-PARENT ONT::correlation)
     (example "his actions reflect his beliefs")
     (TEMPL theme-co-theme-xp-templ)
     )
    )
   )

  (W::infect
   (wordfeats (W::morph (:forms (-vb) :nom W::infection)))
   (SENSES
    ( ;;(LF-PARENT ONT::affect)
     ;;(TEMPL cause-theme-xp-templ)
     (meta-data :origin beetle :entry-date 20081107 :change-date nil :comments nil)
     (LF-PARENT ont::objective-influence)
     (EXAMPLE "it infected him")
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    )
   )

  (W::WOUND
   (wordfeats (W::morph (:forms (-vb) :nom W::wound)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("wound%2:37:00"))
     (LF-PARENT ONT::evoke-injury)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::supplement
   (wordfeats (W::morph (:forms (-vb) :nom W::supplement)))
   (SENSES
    ((EXAMPLE "I supplemented my diet with vitamins")
     (LF-PARENT ONT::add-include)
     (TEMPL AGENT-GOAL-THEME-OPTIONAL-TEMPL)
     )
    ;; need this template to go through the adjectival passive rule
     ((LF-PARENT ONT::add-include)
     (example "the supplemented diet")
     (TEMPL AGENT-GOAL-xp-TEMPL)
     )
    )
   )

  (W::augment
   (wordfeats (W::morph (:forms (-vb) :nom w::augmentation)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date 20090908 :comments html-purchasing-corpus)
     (LF-PARENT ONT::add-include)
     (TEMPL AGENT-GOAL-THEME-TEMPL)
     )
    ;; need this template to go through the adjectival passive rule
    ((meta-data :origin calo :entry-date 20031230 :change-date 20090908 :comments html-purchasing-corpus)
     (LF-PARENT ONT::add-include)
     (example "the augmented version")
     (TEMPL AGENT-GOAL-xp-TEMPL)
     )
    )
   )
  (W::combine
   (wordfeats (W::morph (:forms (-vb) :result W::combination)))
   (SENSES
    ((EXAMPLE "I combined the aspirin with my vitamins")
     (LF-PARENT ONT::combine-objects)
     (TEMPL AGENT-THEME-CO-THEME-TEMPL (xp (% W::PP (W::ptype W::with))))
     )
    ;; need this template to go through the adjectival passive rule
    ((EXAMPLE "the combined costs")
     (LF-PARENT ONT::combine-objects)
     (TEMPL AGENT-THEME-xp-templ)
     )
    )
   )
  (W::merge
   (SENSES
    ((EXAMPLE "merge this cell with the next cell")
     (LF-PARENT ONT::joining)
     (TEMPL AGENT-THEME-CO-THEME-optional-TEMPL (xp (% W::PP (W::ptype W::with))))
     (meta-data :origin task-learning :entry-date 20050819 :change-date nil :comments nil)
     )
    ; need more senses
    ((EXAMPLE "the truck merged into the fast lane")
     (LF-PARENT ONT::joining)
     (TEMPL THEME-TEMPL)
     (meta-data :origin calo-ontology :entry-date 20060323 :change-date nil :comments nil)
     )
    ;; need this template to go through the adjectival passive rule
    ((EXAMPLE "the merged examples")
     (LF-PARENT ONT::joining)
     (TEMPL AGENT-THEME-xp-templ)
     )
    )
   )
  (W::incorporate
   (SENSES
    ((EXAMPLE "incorporate parts of the library into other programs")
     (LF-PARENT ONT::add-include)
     (TEMPL AGENT-THEME-GOAL-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? ptp w::into W::with)))))
     (meta-data :origin task-learning :entry-date 20050826 :change-date 20090908 :comments nil)
     )
    ;; need this template to go through the adjectival passive rule
    ((EXAMPLE "the incorporated objects")
     (LF-PARENT ONT::add-include)
     (TEMPL AGENT-THEME-xp-templ)
     )
    )
   )
  (W::join
   (SENSES
    ((EXAMPLE "join this cell with the next cell")
     (LF-PARENT ONT::joining)
     (TEMPL AGENT-THEME-CO-THEME-optional-TEMPL (xp (% W::PP (W::ptype (? ptype w::to W::with)))))
     (meta-data :origin task-learning :entry-date 20050819 :change-date nil :comments nil)
     )
    ((EXAMPLE "green join team bravo")
     (LF-PARENT ONT::get-together)
     (TEMPL AGENT-THEME-xp-TEMPL)
     (meta-data :origin coordops :entry-date 20070707 :change-date nil :comments nil)
     )
    ((EXAMPLE "they joined together")
     (LF-PARENT ONT::get-together)
     (TEMPL theme-plural-TEMPL) 
     (preference .98)
     (meta-data :origin general :entry-date 20110128 :change-date nil :comments jantzen)
     )
    ((LF-PARENT ONT::enroll)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "join the newsgroup")
     (meta-data :origin calo-ontology :entry-date 20060119 :change-date nil :comments caloy3)
     (templ agent-theme-xp-templ)
     )
    )
   )
  (W::group
   (SENSES
   ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("herd-47.5.2") :wn ("group%2:31:00" "group%2:33:00"))
     (LF-PARENT ONT::meet)
     (example "they grouped around the painting")
     (TEMPL theme-plural-templ) ; like congregate,assemble,gather
     (PREFERENCE 0.96)
     )
    ((EXAMPLE "group the red one with those orange ones")
     (LF-PARENT ONT::joining)
     (TEMPL AGENT-THEME-CO-THEME-TEMPL (xp (% W::PP (W::ptype W::with))))
     (meta-data :origin task-learning :entry-date 20050819 :change-date nil :comments nil)
     )
    ((EXAMPLE "group them together")
     (LF-PARENT ONT::joining)
     (TEMPL AGENT-THEME-PLURAL-TEMPL)
     (meta-data :origin task-learning :entry-date 20050819 :change-date nil :comments nil)
     )
    )
   )
  (W::integrate
   (SENSES
    ((EXAMPLE "integrate mail with other applications")
     (LF-PARENT ont::add-include)
     (TEMPL AGENT-THEME-GOAL-optional-TEMPL (xp (% W::PP (W::ptype (? pt w::into w::in W::with)))))
     (meta-data :origin task-learning :entry-date 20050919 :change-date 20090908 :comments nil)
     )
    ; more senses?
    )
   )
  (W::warn
   (wordfeats (W::morph (:forms (-vb) :nom W::warning)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090506 :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::warn)
     (TEMPL agent-addressee-theme-objcontrol-req-templ (xp (% w::cp (w::ctype w::s-to)))) ; like advise,instruct
     (PREFERENCE 0.96)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090506 :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::warn)
     (TEMPL agent-addressee-theme-OPTIONAL-templ)
     )
    )
   )
  (W::taste
   (wordfeats (W::morph (:forms (-vb) :nom W::taste)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("stimulus_subject-30.4") :wn ("taste%2:39:02" "taste%2:39:12"))
     (LF-PARENT ONT::appears-to-have-property)
     (example "it tastes good")
     (TEMPL theme-pred-experiencer-optional-templ) ; like look
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ)
     )
    )
   )
  (W::progress
   (wordfeats (W::morph (:forms (-vb) :nom W::progression)))
   (SENSES
    ((EXAMPLE "The disease progressed")
     (LF-PARENT ONT::situation-change)
     (TEMPL theme-templ)
     )
    )
   )
  (W::study
   (wordfeats (W::morph (:forms (-vb) :nom W::study)))
   (SENSES
    ((LF-PARENT ONT::scrutiny)
     (TEMPL cognizer-theme-xp-templ)
     )
    )
   )
  (W::cut
   (wordfeats (W::morph (:forms (-vb) :past W::cut :ing W::cutting :nom W::cut)))
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (example "the criticism cut him deeply")
     (LF-PARENT ONT::evoke-injury)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("build-26.1-1"))
     (LF-PARENT ONT::shape-change)
     (TEMPL agent-theme-result-templ (xp (% w::pp (w::ptype w::into)))) ; like carve
     (PREFERENCE 0.96)
     )
    (;;(LF-PARENT ONT::cut)
     (lf-parent ont::carve-cut) ;; 20120524 GUM change new parent
     (EXAMPLE "he cut the rope")
     )
    ((EXAMPLE "the knife cut the rope")
     (lf-parent ont::carve-cut) ;; 20120524 GUM change new parent
     ;;(LF-PARENT ONT::cut)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ instrument-theme-xp-templ)
     (meta-data :origin calo-ontology :entry-date 20050831 :change-date nil :comments nil)
     )
    )
   )

  (W::sever
   (SENSES
    ((EXAMPLE "He severed communications")
     (LF-PARENT ONT::STOP)
     (templ cause-effect-xp-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo-ontology :entry-date 20050831 :change-date nil :comments Break-contact)
     )
    ((EXAMPLE "He severed the power lines")
     (LF-PARENT ONT::cut)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin calo-ontology :entry-date 20050831 :change-date nil :comments nil)
     )
    ((EXAMPLE "the knife severed the rope")
     (LF-PARENT ONT::cut)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ instrument-theme-xp-templ)
     (meta-data :origin calo-ontology :entry-date 20050831 :change-date nil :comments nil)
     )
    )
   )

 ((W::cut (W::off))
   (wordfeats (W::morph (:forms (-vb) :past W::cut :ing W::cutting :nom W::cut)))
   (SENSES
    ((LF-PARENT ONT::stop)
     (example "he cut off communications")
     (templ cause-effect-xp-templ)
     (meta-data :origin calo-ontology :entry-date 20050831 :change-date nil :comments Break-contact)
     )
    )
   )

  ((W::cut (W::up))
   (wordfeats (W::morph (:forms (-vb) :past W::cut :ing W::cutting)))
   (SENSES
    ((LF-PARENT ONT::cut)
     (LF-FORM W::cut-up)
     )
    )
   )
  (W::absorb
   (wordfeats (W::morph (:forms (-vb) :nom W::absorption)))
   (SENSES
    ((LF-PARENT ONT::cause-to-move)
     (TEMPL cause-theme-xp-templ)
     )
    )
   )
  (W::experience
   (wordfeats (W::morph (:forms (-vb) :nom W::experience)))
   (SENSES
    ((LF-PARENT ONT::have-experience)
     (example "he is experiencing a headache")
     (meta-data :origin cardiac :entry-date 20080217 :change-date nil :comments nil)
     (TEMPL affected-theme-xp-templ)
     )
    )
   )
  (W::assess
   (wordfeats (W::morph (:forms (-vb) :nom W::assessment)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090522 :comments nil :vn ("price-54.4") :wn ("assess%2:31:00" "assess%2:40:00"))
     (LF-PARENT ONT::becoming-aware-of-value)
     (TEMPL cognizer-theme-xp-templ)
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::scrutiny)
     (TEMPL cognizer-theme-xp-templ)
     )
    )
   )
  (W::evaluate
   (wordfeats (W::morph (:forms (-vb) :nom W::evaluation)))
   (SENSES
    ((LF-PARENT ONT::scrutiny)
     (TEMPL cognizer-theme-xp-templ)
     (EXAMPLE "evaluate the problem")
     (meta-data :origin task-learning :entry-date 20050830 :change-date nil :comments nil)
     )
    )
   )
  (W::honor
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("honor%2:41:00" "honor%2:41:01"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ;; prefer vn sense
    ((LF-PARENT ONT::praise)
     (TEMPL agent-theme-xp-templ)
     (EXAMPLE "honor the achievement")
     (meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil)
     )
    )
   )
  (W::treasure
   (SENSES
    ((LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ)
     (EXAMPLE "treasure each day")
     (meta-data :origin calo :entry-date 20060124 :change-date nil :comments meeting-understanding :vn ("admire-31.2") :wn ("treasure%2:37:00" "treasure%2:40:00"))
     )
    )
   )
  (W::prize
   (SENSES
    ((LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ)
     (EXAMPLE "He prizes virtue")
     (meta-data :origin calo :entry-date 20060124 :change-date nil :comments meeting-understanding :vn ("admire-31.2") :wn ("prize%2:31:00" "prize%2:40:00"))
     )
    )
   )
  (W::bleed
   (wordfeats (W::morph (:forms (-vb) :past W::bled :nom W::bleed)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6") :wn ("bleed%2:30:00" "bleed%2:40:09"))
     (LF-PARENT ONT::take-incrementally)
     (TEMPL agent-source-theme-optional-templ)
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::BODILY-PROCESS)
     (TEMPL THEME-TEMPL)
     )
    )
   )

 (W::ache
   (wordfeats (W::morph (:forms (-vb) :past W::ached :nom W::ache)))
   (SENSES
    ((meta-data :origin chf :entry-date 20070827 :change-date nil :comments chf-dialogues)
     (LF-PARENT ONT::bodily-process)
     (templ theme-templ)
     )
    )
   )
 (W::pee
   (wordfeats (W::morph (:forms (-vb) :past W::peed :ing W::peeing :nom w::pee)))
   (SENSES
    ((meta-data :origin chf :entry-date 20070827 :change-date nil :comments chf-dialogues)
     (LF-PARENT ONT::bodily-process)
     (templ theme-templ)
     )
    )
   )
 (W::urinate
   (wordfeats (W::morph (:forms (-vb) :past W::urinated :ing W::urinating)))
   (SENSES
    ((meta-data :origin chf :entry-date 20070827 :change-date nil :comments chf-dialogues)
     (LF-PARENT ONT::bodily-process)
     (templ theme-templ)
     )
    )
   )
  (W::sleep
   (wordfeats (W::morph (:forms (-vb) :past W::slept :nom W::sleep)))
   (SENSES
    ((LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ)
     )
    )
   )
   (W::oversleep
   (wordfeats (W::morph (:forms (-vb) :past W::overslept)))
   (SENSES
    ((LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ)
     (meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments LM-vocab)
     )
    )
   )
  (W::pulse
   (wordfeats (W::morph (:forms (-vb) :nom W::pulse)))
   (SENSES
    ((LF-PARENT ONT::pulse)
     (example "the blood pulsed in his veins")
     (TEMPL theme-templ)
     )
    )
   )
  (W::throb
   (wordfeats (W::morph (:forms (-vb) :nom W::throb)))
   (SENSES
    ((LF-PARENT ONT::pulse)
     (example "his heart throbbed")
     (TEMPL theme-templ)
     (meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments LM-vocab)
     )
    )
   )
   (W::pound
   (wordfeats (W::morph (:forms (-vb) :nom W::pound)))
   (SENSES
    ((LF-PARENT ONT::pulse)
     (example "his heart pounds after exercise")
     (TEMPL theme-templ)
     (preference .96) ;; prefer noun sense
     (meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments LM-vocab)
     )
    )
   )
   (W::pulsate
   (wordfeats (W::morph (:forms (-vb))))
   (SENSES
    ((LF-PARENT ONT::pulse)
     (example "the blood pulsated in his veins")
     (TEMPL theme-templ)
     (meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments LM-vocab)
     )
    )
   )
  (W::call
   (SENSES
    ((EXAMPLE "Call the doctor")
     (LF-PARENT ONT::establish-communication)
     (TEMPL AGENT-ADDRESSEE-TEMPL)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090501 :comments nil :vn ("dub-29.3") :wn ("call%2:32:00" "call%2:32:02" "call%2:41:14"))
     (EXAMPLE "call me ishmael")
     (LF-PARENT ONT::naming)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL COGNIZER-THEME-bare-predicate-TEMPL)
     )
    ((EXAMPLE "he calls for change")
     (LF-PARENT ONT::establish-communication)
     (TEMPL AGENT-ASSOCIATED-INFORMATION-TEMPL  (xp (% W::PP (W::ptype W::for))))
     (meta-data :origin step :entry-date 20080629 :change-date 20090508 :comments nil)
     )
    ((EXAMPLE "the agenda calls for change")
     (LF-PARENT ONT::establish-communication)
     (TEMPL THEME-ASSOCIATED-INFORMATION-TEMPL  (xp (% W::PP (W::ptype W::for))))
     (meta-data :origin step :entry-date 20080629 :change-date 20090508 :comments nil)
     )
    )
   )
  
  (W::cure
   (SENSES
    ((EXAMPLE "The doctor cured my arthritis")
     (LF-PARENT ONT::CURE)
     )
    ((EXAMPLE "The medicine cured my arthritis")
     (LF-PARENT ONT::CURE)
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )
    ((EXAMPLE "The doctor cured me of arthritis")
     (LF-PARENT ONT::CURE)
     (TEMPL AGENT-EXPERIENCER-THEME-OPTIONAL-TEMPL)
     )
    )
   )
  (W::treat
   (SENSES
    ((EXAMPLE "The doctor treated me/my arthritis")
     (LF-PARENT ONT::CURE)
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
     )
   )
  (W::eat
   (wordfeats (W::morph (:forms (-vb) :past W::ate :pastpart W::eaten :ing W::eating)))
   (SENSES
    ((EXAMPLE "Eat a meal" "Eat calcium for your bones")
     (LF-PARENT ONT::CONSUME)
     (TEMPL AGENT-AFFECTED-XP-TEMPL)
     )
    ((EXAMPLE "Eat!")
     (LF-PARENT ONT::CONSUME)
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::digest
   (SENSES
    ((EXAMPLE "he digested the meal")
     (LF-PARENT ONT::bodily-process)
     (meta-data :origin cardiac :entry-date 20090408 :change-date nil :comments nil)
     (TEMPL theme-co-theme-xp-TEMPL)
     )
    ((EXAMPLE "he digested in silence")
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-TEMPL)
     )
    )
   )
  (W::swallow
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("gobble-39.3-2"))
     (EXAMPLE "Swallow the pill")
     (LF-PARENT ONT::CONSUME)
     (TEMPL AGENT-AFFECTED-XP-TEMPL)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("gobble-39.3-2"))
     (EXAMPLE "Don't swallow")
     (LF-PARENT ONT::CONSUME)
     (TEMPL AGENT-TEMPL)
     (PREFERENCE 0.98)
     )
    )
   )
  (W::drink
   (wordfeats (W::morph (:forms (-vb) :past W::drank :pastpart W::drunk :ing W::drinking)))
   (SENSES
    ((EXAMPLE "Drink water")
     (LF-PARENT ONT::CONSUME)
     (syntax (w::resultative +))
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-AFFECTED-XP-TEMPL)
     )
    ((EXAMPLE "Don't drink")
     (LF-PARENT ONT::CONSUME)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     (PREFERENCE 0.98)
     )
    )
   )
  (W::expect
   (wordfeats (W::morph (:forms (-vb) :nom w::expectation)))
   (SENSES
    ((LF-PARENT ONT::EXPECTATION)
     (example "what side effects should I expect")
     (TEMPL cognizer-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::expectation)
     (example "he expects to have a degree next year")
     (meta-data :origin calo :entry-date 20040907 :change-date nil :comments caloy2 :vn ("wish-62") :wn ("expect%2:31:00"))
     (TEMPL cognizer-action-SUBJCONTROL-TEMPL)
     )
    ((LF-PARENT ONT::EXPECTATION)
     (example "she expects him to have a degree next year")
     (meta-data :origin calo :entry-date 20040907 :change-date nil :comments caloy2 :vn ("wish-62")  :wn ("expect%2:31:00"))
     (TEMPL cognizer-ACTION-OBJCONTROL-TEMPL)
     )
    ((meta-data :origin calo-ontology :entry-date 20060315 :change-date nil :comments nil  :wn ("expect%2:31:00"))
     (LF-PARENT ONT::expectation)
     (example "he expects that he will do it")
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype (? cp w::s-finite)))))
     )
    )
   )
  (W::anticipate
   (SENSES
    ((LF-PARENT ONT::EXPECTATION)
     (example "anticipate the problem")
     (meta-data :origin calo :entry-date 20040907 :change-date nil :comments caloy2  :wn ("anticipate%2:31:00"))
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )

  ((W::feel W::like)
    (wordfeats (W::morph (:forms (-vb) :past W::felt)))
   (SENSES
    ;;;; It feels like we will have to go
    ((LF-PARENT ONT::possibly-exists)
     (meta-data :origin cardiac :entry-date 20090416 :change-date nil :comments speechtests)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL EXPLETIVE-THEME-TEMPL (xp1 (% W::NP (W::lex W::it))) (xp2 (% W::s (W::stype W::decl))))
     )
    (
     (LF-PARENT ONT::active-perception)
     (example "I feel like I have to catch my breath")
     (meta-data :origin cardiac :entry-date 20090416 :change-date nil :comments speechtests)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL experiencer-action-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like see
     )
    )
   )
  (W::feel
   (wordfeats (W::morph (:forms (-vb) :past W::felt)))
   (SENSES
     ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("consider-29.9-2"))
      (LF-PARENT ONT::believe)
      (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like believe,think
     (PREFERENCE 0.96)
      )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("see-30.1") :wn ("feel%2:29:00" "feel%2:31:00" "feel%2:35:00" "feel%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (example "I can feel the sun" "he feels pain in his leg")
     (TEMPL experiencer-theme-xp-templ) ; like smell,taste
     (PREFERENCE 0.96)
     )
    ((meta-data :origin trips :entry-date 20090331 :change-date nil :comments missing-sense)
     (LF-PARENT ONT::active-perception)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "he felt him move")
     (TEMPL experiencer-action-objcontrol-templ (xp (% W::VP (W::vform W::base))))
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("stimulus_subject-30.4") :wn ("feel%2:39:09" "feel%2:42:00"))
     (LF-PARENT ONT::appears-to-have-property)
     (example "it feels good")
     (TEMPL theme-pred-experiencer-optional-templ) ; like look
     (PREFERENCE 0.96)
     )
    ;;;; I feel poorly
    ;;;; I feel like a coke
    ;;;; I feel like doing the samba
    ;;;; I feel that I'm going downhill
    ;;;; I feel with my hands <<---- NOT THIS ONE!
    ;;;; swift 01/12/01 added the aspect feature F_Stage-Level to allow progressive 'feeling poorly'
    ;;;; swift 02/12/02 changed subject to experiencer
    ((LF-PARENT ONT::experiencer-emotion)
     (SEM (F::Aspect F::Stage-Level))
     (TEMPL EXPERIENCER-PRED-TEMPL)
     )
    )
   )

  ((W::sit (w::out))
   (SENSES
    ((meta-data :origin asma :entry-date 20111004)
     (LF-PARENT ONT::avoiding)
     (example "sitting out gym class")
     )
    )
   )
   ((W::refrain w::from)
   (SENSES
    ((meta-data :origin cardiac :entry-date 200904221219)
     (LF-PARENT ONT::avoiding)
     (example "he refrained from jogging")
     (templ agent-action-subjcontrol-templ (xp (% W::VP (W::vform W::ing))))
     )
    ((meta-data :origin cardiac :entry-date 200904221219)
     (LF-PARENT ONT::avoiding)
     (example "he refrained from red meat")
     )
    )
   )
   

  (W::skip
   (wordfeats (W::morph (:forms (-vb) :ing W::skipping :past W::skipped)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("skip%2:35:00" "skip%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::SKIP-ACTION)
     (example "he skipped a dose")
     )
    )
   )
  (W::miss
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("miss%2:37:00"))
     (LF-PARENT ONT::misses)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     (PREFERENCE 0.96)
     )
    ;;;; missed a my dr. appointment
    ((LF-PARENT ONT::action-salience)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::SKIP-ACTION)
     (example "miss a dose")
     (PREFERENCE 0.98)
     )
    ;; perhaps there should be an ont::fail for cases like these?
    ;; ok
    ((LF-PARENT ONT::fail)
     (TEMPL agent-THEME-XP-TEMPL)
     (meta-data :origin fruitcarts :entry-date 20050427 :change-date nil :comments nil)
     (example "miss the target")
     )
    ((LF-PARENT ONT::misses)
     (SEM (F::Aspect F::indiv-level))
     (example "I miss oranges")
     (TEMPL experiencer-theme-xp-templ)
     )
    )
   )
  ((W::wear W::off)
   (wordfeats (W::morph (:forms (-vb) :pastpart w::worn :past W::wore)))
   (SENSES
    ((LF-PARENT ONT::STOP)
     (example "the effect wore off")
     (TEMPL effect-TEMPL)
     )
    )
   )

  (W::lose
   (wordfeats (W::morph (:forms (-vb) :past W::lost :nom w::loss)))
   (SENSES
    ((EXAMPLE "He lost the book")
     (LF-PARENT ONT::lose)
     (syntax (w::resultative +))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (meta-data :origin calo-ontology :entry-date 20060412 :change-date 20090507 :comments nil)
     )
    )
   )
  (W::lack
   (wordfeats (W::morph (:forms (-vb) :nom W::lack)))
   (SENSES
    ((EXAMPLE "He lacked enthusiasm")
     (LF-PARENT ONT::lacking)
      (TEMPL affected-THEME-XP-TEMPL)
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     )
    )
   )
  (W::CARE
   (wordfeats (W::morph (:forms (-vb) :nom W::care)))
   (SENSES
    ((LF-PARENT ONT::care)
     (SEM (F::Aspect F::Stage-Level))
     (TEMPL EXPERIENCER-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? p W::for W::about)))))
     (example "I don't care about it")
     )
    ((LF-PARENT ONT::care)
     (TEMPL EXPERIENCER-TEMPL)
     (example "I don't care")
     )
    )
   )
  (W::mind
   (SENSES
    ;;;; I don't mind about the weather
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090511 :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::care)
     (TEMPL EXPERIENCER-THEME-XP-TEMPL (xp (% W::PP (W::ptype (? p W::about)))))
     )
    ;;;; I don't mind the weather
    ((LF-PARENT ONT::care)
     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
     )
    ;;;; I don't mind
    ((LF-PARENT ONT::care)
     (TEMPL EXPERIENCER-TEMPL)
     )
    )
   )
  ((W::throw (W::off))
   (wordfeats (W::morph (:forms (-vb) :past W::threw :pastpart W::thrown)))
   (SENSES
    ((EXAMPLE "My schedule is all thrown off ")
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    )
   )
  (W::space
   (SENSES
    ((EXAMPLE "Space your doses three hours apart ")
     (LF-PARENT ONT::SPACE)
     )
    )
   )
  (W::swing
   (wordfeats (W::morph (:forms (-vb) :past W::swung :pastpart W::swung :ing W::swinging)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("swing%2:35:00" "swing%2:38:02" "swing%2:38:03"))
     (LF-PARENT ONT::move-back-and-forth)
     (TEMPL theme-templ) ; like move,bounce
      )
;    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("swing%2:35:00" "swing%2:38:02" "swing%2:38:03"))
;     (LF-PARENT ONT::rotate)
;     (TEMPL agent-theme-xp-templ) ; like rotate,turn,spin
;     (PREFERENCE 0.96)
;     )
     ;;;; the driver swung by the hospital
    ((EXAMPLE "the driver swung by the hospital")
     (LF-PARENT ONT::swing-by)
     (preference .98)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-theme-XP-TEMPL (xp (% W::pp (W::ptype W::by))))
     )
    ;;;; the ambulance swung by the hospital
    ((EXAMPLE "the ambulance swung by the hospital")
     (LF-PARENT ONT::swing-by)
     (preference .98)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-VIA-XP-TEMPL (xp (% W::pp (W::ptype W::by))))
     )
    )
   )
  (W::mark
   (wordfeats (W::morph (:forms (-vb) :ing W::marking)))
   (SENSES
    ((EXAMPLE "Mark those points red")
     (LF-PARENT ONT::classify)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-bare-predicate-temPL)
     (preference .92) ;; prefer the highlight sense
     )
    ((EXAMPLE "Mark the search criteria")
     (LF-PARENT ONT::select) ;; like select
     (meta-data :origin plot :entry-date 20081024 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )

  ((W::mark (W::off))
   (SENSES
    ((EXAMPLE "Mark off those points")
     (LF-PARENT ONT::highlight)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (w::flag
   (SENSES
    ((EXAMPLE "flag that message")
     (LF-PARENT ONT::highlight)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     )
    )
   )
  (w::uncheck
   (SENSES
    ((EXAMPLE "Check or uncheck the selected calendar in the Calendars list")
     (LF-PARENT ONT::select)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     )
    )
   )

  (W::click
   (wordfeats (W::morph (:forms (-vb) :nom W::click)))
   (SENSES
    ((EXAMPLE "click on the url")
     (LF-PARENT ONT::click)
     (meta-data :origin plow :entry-date 20050315 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% w::pp (w::ptype (? ptp w::on)))))
     )
    ((EXAMPLE "click the link in your browser")
     (LF-PARENT ONT::click)
     (meta-data :origin plow :entry-date 20050321 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    ((EXAMPLE "click in the window")
     (LF-PARENT ONT::click)
     (meta-data :origin plow :entry-date 20060808 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     (preference .98) ;; prefer transitive sense
     )
    )
   )

  ;; capture alternate spelling
  (W::labelled
    (wordfeats (W::morph (:forms NIL)) (W::vform W::pastpart))
   (SENSES
    ((EXAMPLE "the link labelled advanced search")
     (meta-data :origin plow :entry-date 20050329 :change-date 20090501 :comments nil)
     (LF-PARENT ONT::naming)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-bare-predicate-TEMPL)
     )
    )
   )
  (W::label
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::naming)
     (TEMPL cognizer-theme-bare-predicate-optional-templ) ; like name
     (PREFERENCE 0.96)
     )
     )
   )
  (W::designate
   (SENSES
    ((EXAMPLE "designate the libraries")
     (LF-PARENT ONT::classify)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-xp-TEMPL)
     (meta-data :origin task-learning :entry-date 20050823 :change-date 20090501 :comments nil)
     )
    )
   )
  (W::plot
   (wordfeats (W::morph (:forms (-vb) :past W::plotted)))
   (SENSES
    ((EXAMPLE "plot those points")
     (LF-PARENT ONT::categorization)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-bare-predicate-TEMPL)
     )
    )
   )
 (W::edit
  (wordfeats (W::morph (:forms (-vb) :past W::edited :ing W::editing)))
   (SENSES
    ((EXAMPLE "edit the text")
     (LF-PARENT ONT::revise)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
 (W::text
   (SENSES
    ((LF-PARENT ONT::communication)
     (meta-data :origin asma :entry-date 20110921 :change-date nil :comments nil)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     (EXAMPLE "he texted this morning")
     (PREFERENCE 0.98) ;; prefer transitive sense
     )
    ((LF-PARENT ONT::communication)
     (meta-data :origin asma :entry-date 20110921 :change-date nil :comments nil)
     (example "text me a text")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     )
    ((LF-PARENT ONT::communication)
     (meta-data :origin asma :entry-date 20110921 :change-date nil :comments nil)
     (example "write me about the problem")
     (TEMPL AGENT-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL)
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (meta-data :origin asma :entry-date 20110921 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     (EXAMPLE "he texted that he couldn't come")
     )
    )
   )
  (W::write
   (wordfeats (W::morph (:forms (-vb) :past W::wrote :pastpart W::written :ing W::writing)))
   (SENSES
    ((EXAMPLE "Write the letter")
     ;;(LF-PARENT ONT::write)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (prototypical-word t)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    (;;(LF-PARENT ONT::write)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     (EXAMPLE "he wrote")
     (PREFERENCE 0.98) ;; prefer transitive sense
     )
    (;;(LF-PARENT ONT::write)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (example "write me an email")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     )
    (;;(LF-PARENT ONT::write)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (example "write me about the problem")
     (TEMPL AGENT-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL)
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     (EXAMPLE "he wrote that he couldn't come")
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (EXAMPLE "he wrote green")
     (PREFERENCE 0.92) ;; only as a last resort
     )
    )
   )
 (W::debug
   (wordfeats (W::morph (:forms (-vb) :past W::debugged :ing W::debugging)))
   (SENSES
    ((EXAMPLE "debug the procedure")
     (LF-PARENT ONT::debug)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin plot :entry-date 20080403 :change-date nil :comments nil)
     )
    )
   )
  (W::state
   (SENSES
    ((LF-PARENT ONT::REPORT-SPEECH)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     (EXAMPLE "he stated that he couldn't come")
     (meta-data :origin task-learning :entry-date 20050831 :change-date nil :comments nil)
     )
    (;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (example "he stated his name/purpose")
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  (W::author
   (SENSES
    ((EXAMPLE "he authored the letter")
     (meta-data :origin task-learning :entry-date 20050831 :change-date nil :comments nil)
     ;;(LF-PARENT ONT::write)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (PREFERENCE 0.98) ;; prefer the noun sense
     )
    )
   )

 (W::print
    (SENSES
    ((EXAMPLE "print the document")
     ;;(LF-PARENT ONT::print)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2 :wn-sense (4))
     )
    (;;(LF-PARENT ONT::print)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "I want to be able to print and fax")
     (TEMPL AGENT-TEMPL)
     (meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2  :wn-sense (4))
     (PREFERENCE 0.98) ;; prefer transitive sense
     )
    )
   )

  (W::reprint
    (SENSES
    ((EXAMPLE "reprint the document")
     ;;(LF-PARENT ONT::print)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin quicken :entry-date 20071129 :change-date nil :comments nil)
     )
    )
   )

 (W::type
    (SENSES
    ((EXAMPLE "type the letter")
     ;;(LF-PARENT ONT::type)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin calo :entry-date 20050318 :change-date nil :comments caloy2)
     )
    )
   )
(W::retype
    (SENSES
    ((EXAMPLE "let me retype it")
     ;;(LF-PARENT ONT::type)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin plow :entry-date 20050927 :change-date nil :comments naive-subjects)
     )
    )
   )
((W::type (w::in))
    (SENSES
    ((EXAMPLE "type in the title")
     (LF-PARENT ONT::put) ;; as in entering text
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin plow :entry-date 20050927 :change-date nil :comments naive-subjects)
     )
    )
   )

 (W::mistype
    (SENSES
    ((EXAMPLE "I mistyped the address")
     ;;(LF-PARENT ONT::type)
     (lf-parent ont::author-write-burn-print_reprint_type_retype_mistype) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (meta-data :origin task-learning :entry-date 20050912 :change-date nil :comments nil)
     )
    )
   )

(W::read
   (wordfeats (W::morph (:forms (-vb) :past W::read :ing W::reading)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date 20090508 :comments html-purchasing-corpus :wn ("read%2:31:00" "read%2:31:04""read%2:31:09""read%2:31:01" ))
     (EXAMPLE "read the letter")
     (LF-PARENT ONT::read)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (templ cognizer-theme-xp-templ)
     )
    ((LF-PARENT ONT::read)
     (meta-data :origin calo :entry-date 20031230 :change-date 20090508 :comments html-purchasing-corpus :wn ("read%2:31:00" "read%2:31:04""read%2:31:09""read%2:31:01" ))
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-TEMPL)
     )
    ((example "he read that the meeting was tomorrow")
     (meta-data :origin calo :entry-date 20031230 :change-date 20090508 :comments html-purchasing-corpus :wn ("read%2:31:00" "read%2:31:04""read%2:31:09""read%2:31:01" ))
     (LF-PARENT ONT::read)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ; TODO reading aloud as ONT::report-speech?
    )
   )
(W::scan
; (wordfeats (W::morph (:forms (-vb) :nom w::scan)))
 (wordfeats (W::morph (:forms (-vb))))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("sight-30.2" "investigate-35.4") :wn ("scan%2:31:01" "scan%2:39:00" "scan%2:39:01"))
     (LF-PARENT ONT::physical-scrutiny)
     (example "he scanned the area")
     (TEMPL agent-theme-xp-templ) ; like explore,investigate,examine,test,survey,inspect,regard
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("sight-30.2" "investigate-35.4") :wn ("scan%2:31:01" "scan%2:39:00" "scan%2:39:01"))
     (LF-PARENT ONT::physical-scrutiny)
     (example "he scanned along the horizon for a glimpse of the ship")
     (TEMPL agent-templ) 
     (PREFERENCE 0.97)
     )
    )
   )

  (W::EMPTY
   (wordfeats (W::morph (:forms (-vb) :past W::emptied)))
   (SENSES
    ((EXAMPLE "empty the truck")
     (LF-PARENT ONT::UNLOAD)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-SOURCE-TEMPL)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("clear-10.3-1"))
     (LF-PARENT ONT::empty)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype (? ptp w::from)))) ) ; like drain
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090529 :comments nil :vn ("clear-10.3-1"))
     (LF-PARENT ONT::empty)
     (TEMPL theme-source-xp-templ ) ; like drain
     (PREFERENCE 0.96)
     )
    )
   )

  ((W::empty (W::out))
   (wordfeats (W::morph (:forms (-vb) :past W::emptied)))
   (SENSES  
    ((EXAMPLE "empty out the truck")
     (LF-PARENT ONT::UNLOAD)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-SOURCE-TEMPL)
     )
    )
   )
  (W::quelch
   (SENSES
    ((LF-PARENT ONT::STOP)
     (example "they quelched the rebellion")
     (templ cause-effect-xp-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::realize
   (SENSES
    ;;;; I realized that the origional route is no longer available.
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::come-to-understand)
     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
     )
    ;;;; I realize the risk
    ((LF-PARENT ONT::come-to-understand)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (W::TURN
   (wordfeats (W::morph (:forms (-vb) :ing W::turning :nom w::turn)))
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("turn%2:38:01" "turn%2:38:02" "turn%2:38:04" "turn%2:38:13"))
     (LF-PARENT ONT::rotate)
     (TEMPL theme-templ) ; like move,bounce but use ont::rotate (more specific) instead of ont::move
     (PREFERENCE 0.96)
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("turn%2:38:01" "turn%2:38:02" "turn%2:38:04" "turn%2:38:13"))
     (LF-PARENT ONT::ROTATE)
     (example "turn the car (to the right)")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((LF-PARENT ONT::ROTATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "turn (to the right)")
     (TEMPL AGENT-TEMPL)
     )
     ((LF-PARENT ONT::cause-make)
      (templ cause-theme-xp-templ)
      (example "turn a profit")
     )
    )
   )
  (W::rotate
    (wordfeats (W::morph (:forms (-vb) :nom W::rotation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("rotate%2:38:00" "rotate%2:38:01"))
     (LF-PARENT ONT::rotate)
     (TEMPL theme-templ) ; like move,bounce but use ont::rotate (more specific) instead of ont::move
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::ROTATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin fruit-carts :entry-date 20041103 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("rotate%2:38:00" "rotate%2:38:01"))
     (example "rotate the triangle to the left")
     )
    ((EXAMPLE "rotate")
     (LF-PARENT ONT::rotate)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-templ)
     (meta-data :origin fruit-carts :entry-date 20050422 :change-date nil :comments nil)
     )
    )
   )
  (W::wrap
   (SENSES
    ((LF-PARENT ONT::arrange-text)
     (meta-data :origin task-learning :entry-date 20050926 :change-date 20090709 :comments nil)
     (example "make text wrap around an object")
     )
    ((LF-PARENT ONT::surround)
     ;(SEM (F::Aspect F::bounded))
     (meta-data :origin task-learning :entry-date 20050926 :change-date 20090709 :comments nil)
     (example "he wrapped his car around a tree")
     )
    ((LF-PARENT ONT::cover)
;     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-theme-co-theme-optional-templ (xp (% W::PP (W::ptype (? pt W::with W::in)))))
     (meta-data :origin trips :entry-date 20090911 :change-date nil :comments nil)
     (example "wrap the present [with paper]")
     )
    ((LF-PARENT ONT::cover)
      (TEMPL co-theme-theme-xp-templ)
     (meta-data :origin trips :entry-date 20090911 :change-date nil :comments nil)
     (example "paper wrapped the present")
     )
    )
   )
  (W::fold
   (SENSES
    ((LF-PARENT ONT::fold)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050926 :change-date nil :comments nil :vn ("bend-45.2") :wn ("fold%2:30:10" "fold%2:35:00" "fold%2:30:00"))
     (example "fold the paper in half")
     )
    )
   )
  (W::spin
    (wordfeats (W::morph (:forms (-vb) :past W::spun :nom w::spin)))
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("spin%2:38:01" "spin%2:38:02"))
     (LF-PARENT ONT::rotate)
     (TEMPL theme-templ) ; like move,bounce but use more specific ont::rotate 
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::ROTATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("spin%2:38:01" "spin%2:38:02"))
     (example "spin the triangle to the left")
     )
    ((EXAMPLE "spin")
     (LF-PARENT ONT::rotate)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-templ)
     (meta-data :origin task-learning :entry-date 20050829 :change-date nil :comments nil)
     )
    )
   )
  ((W::flip (w::over))
   (SENSES
    ((LF-PARENT ONT::ROTATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin fruit-carts :entry-date 20050401 :change-date nil :comments nil)
     (example "flip over the triangle")
     )
    )
   )
  (W::flip
   (SENSES
    ((LF-PARENT ONT::ROTATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin fruit-carts :entry-date 20050401 :change-date nil :comments fruitcarts-07-2)
     (example "flip the triangle to the other side")
     )
    )
   )
  (W::reverse
   (SENSES
    ((LF-PARENT ONT::ROTATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (meta-data :origin task-learning :entry-date 20050823 :change-date nil :comments nil)
     (example "reverse the sort order")
     )
    )
   )


  ((W::turn (W::off))
   (wordfeats (W::morph (:forms (-vb) :ing W::turning)))
   (SENSES
    ((LF-PARENT ont::turn-off)
     (example "turn off the radio")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ;; turning off things like water means really turning off whatever source produces them
    ((LF-PARENT ont::turn-off)
     (example "turn off the water") 
     (templ agent-affected-xp-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (preference 0.95) ;; to interpret turn it off primarily as agent-theme
     )
    ))
   
  ((W::turn (W::on))
   (wordfeats (W::morph (:forms (-vb) :ing W::turning)))
   (SENSES
    ((LF-PARENT ont::start-object)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ;; turning on things like water means really turning on whatever source produces them
    ((LF-PARENT ont::start-object)
     (example "turn on the water") 
     (templ agent-affected-xp-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (preference 0.95) ;; to interpret turn it off primarily as agent-theme
     )
    ))
   
  ((W::switch (W::off))
   (SENSES
    ((LF-PARENT ont::turn-off)
     (example "switch off the radio")
     (meta-data :origin beetle :entry-date 20081106 :change-date nil :comments nil)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ;; turning off things like water means really turning off whatever source produces them
    ((LF-PARENT ont::turn-off)
     (meta-data :origin beetle :entry-date 20081106 :change-date nil :comments nil)
     (example "switch off the water") 
     (templ agent-affected-xp-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (preference 0.95) ;; to interpret turn it off primarily as agent-theme
     )
    )
   )



  ((W::switch (W::on))
   (SENSES
    ((LF-PARENT ont::start-object)
     (example "switch on the radio")
     (meta-data :origin beetle :entry-date 20081106 :change-date nil :comments nil)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ;; turning off things like water means really turning off whatever source produces them
    ((LF-PARENT ont::start-object)
     (meta-data :origin beetle :entry-date 20081106 :change-date nil :comments nil)
     (example "switch on the water") 
     (templ agent-affected-xp-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (preference 0.95) ;; to interpret turn it off primarily as agent-theme
     )
    )
   )


(W::laugh
   (SENSES
    ((LF-PARENT ONT::NONVERBAL-EXPRESSION)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::RIOT
   (wordfeats (W::morph (:forms (-vb) :ing W::rioting)))
   (SENSES
    ((LF-PARENT ONT::RIOT)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::receive
   (SENSES
    (;;(lf-parent ont::acquire)
     (lf-parent ont::incur-inherit-receive) ;; 20120524 GUM change new parent
     (example "he received the package")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-source-optional-templ (xp (% W::PP (W::ptype (? pt W::at W::from)))))
     )
    )
   )
  (W::hurry
   (wordfeats (W::morph (:forms (-vb) :nom W::hurry)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("hurry%2:30:01" "hurry%2:38:00"))
     (example "he hurried along the path")
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     (PREFERENCE 0.96)
     )
    )
   )
  (W::depend
   (SENSES
    (;;(LF-PARENT ont::rely)
     (lf-parent ont::rely-depend) ;; 20120523 GUM change new parent
     (example "one thing depends on another")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::on))))
     )
    (;;(LF-PARENT ont::rely)
     (lf-parent ont::rely-depend) ;; 20120523 GUM change new parent
     (example "it depends whether it works or not")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL THEME-CO-THEME-XP-TEMPL (xp (% W::NP (W::sort W::wh-desc))))
     )
    )
   )
 (W::rely
   (SENSES
    (;;(LF-PARENT ont::rely)
     (lf-parent ont::rely-depend) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::on))))
     (example "they rely on them")
     )
    )
   )
 (W::count
   (SENSES
    ((LF-PARENT ont::rely)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::PP (W::ptype W::on))))
     (example "a product you can count on")
     (meta-data :origin calo :entry-date 20041122 :change-date nil :comments caloy2)
     )
    )
   )
  (W::require
   (SENSES
    ;;;; It requires cleaning
    ((LF-PARENT ONT::Necessity)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL affected-THEME-XP-TEMPL)
     )
    )
   )
  ((W::clean (W::out))
   (SENSES
    ;;;; clean out the truck
    ((LF-PARENT ONT::clean)
     )
    )
   )
  (W::die
   (wordfeats (W::morph (:forms (-vb) :past W::died :ing w::dying :nom w::death)))
    (SENSES
    ((LF-PARENT ONT::die)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL experiencer-TEMPL)
     )
    )
   )
  (W::survive
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("exist-47.1-1"))
     (LF-PARENT ONT::survive)
     (TEMPL experiencer-templ) ; like live
     )
    ((LF-PARENT ONT::survive)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL experiencer-theme-xp-TEMPL)
     (example "he survived the experience")
     )
    )
   )

   (W::live
   (SENSES
    ((LF-PARENT ONT::stay)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     (example "he lived in Chicago for ten years")
     )
     ((LF-PARENT ONT::live)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL experiencer-TEMPL)
     (example "he lived to a ripe old age")
     )
    )
   )
  (W::dig
   (wordfeats (W::morph (:forms (-vb) :past W::dug)))
   (SENSES
    ((LF-PARENT ONT::dig)
     (example "dig a hole")
     )
    )
   )
  ((W::dig (W::out))
   (wordfeats (W::morph (:forms (-vb) :past W::dug)))
   (SENSES
    ((LF-PARENT ONT::cause-out-of)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "dig out the power lines")
     (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::pp (W::ptype (? ptype W::of W::from)))))
     )
    )
   )
  ((W::shut (W::off))
   (wordfeats (W::morph (:forms (-vb) :past W::shut)))
   (SENSES
    ((LF-PARENT ONT::turn-off)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "shut off the power")
     )
    )
   )
 (W::rid
   (wordfeats (W::morph (:forms (-vb) :past W::rid)))
   (SENSES
    ((LF-PARENT ONT::remove-from)
     (example "rid him of it")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )

  ((W::get W::rid)
   (wordfeats (W::morph (:forms (-vb) :past W::got :pastpart W::gotten)))
   (SENSES
    ;;;; get rid of s.t.
    ((LF-PARENT ONT::discard)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-IOTHEME-XP-TEMPL (xp (% W::PP (W::ptype W::of))))
     )
    )
   )
 (W::dispose
   (wordfeats (W::morph (:forms (-vb) :nom w::disposal)))
   (SENSES
    ((meta-data :origin monroe :entry-date 20031219 :change-date 20090529 :comments s11)
     (LF-PARENT ONT::discard)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-IOTHEME-XP-TEMPL (xp (% W::PP (W::ptype W::of))))
     (example "dispose of something")
     )
    )
   )
  ((W::pay W::attention)
   (wordfeats (W::morph (:forms (-vb) :past W::paid)))
   (SENSES
    ((LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "pay attention")
     (TEMPL cognizer-templ)
     )
    ((LF-PARENT ONT::scrutiny)
     (example "pay attention to the road")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-iotheme-xp-templ (xp (% W::pp (W::ptype W::to))))
     )
    )
   )
  (W::recap
   (SENSES
    ;;;; recap the information
    ((LF-PARENT ONT::REPEAT)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    ;;;; He recapped
    ((LF-PARENT ONT::repeat)
     (TEMPL agent-templ)
     )
    ;;;; he recapped on the injured (monroe s2)
    ((LF-PARENT ONT::REPEAT)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-COMP-THEME-TEMPL (xp (% W::pp (W::ptype W::on))))
     )
    )
   )
  ((W::mix (W::up))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("mix-22.1-1-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::with)))) ; like combine
     (PREFERENCE 0.96)
     )
    ((EXAMPLE "He mixes them up ")
     (LF-PARENT ONT::Confuse)
     (TEMPL COGNIZER-THEME-XP-TEMPL)
     )
    )
   )
  (W::jump
   (SENSES
    ;;;; jump on the highway
    ((LF-PARENT ONT::jump)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-templ)
     )
    ((LF-PARENT ONT::jump)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-templ)
     )
    )
   )
  (W::bounce
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("bounce%2:35:03" "bounce%2:38:00" "bounce%2:38:02"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like roll,scoot,walk,stomp,dart,roam,nip,parade,mosey,clamber,slither,troop,speed,leap,promenade,totter,trot,jog,stride,lope,hike,wander,somersault,cavort,tear,lurch,pad,canter,scramble,prance,plod,hobble,trudge,hurry,slog,slide,clump,saunter,skip,gallop,slink,skulk,prowl,gambol,carom,scurry,dash,journey,meander,swim,travel,slouch,file,romp,waddle,crawl,inch,creep,skitter,limp,dodder,mince,trek,stumble,race,climb,amble,rush,stray,hurtle,vault,charge,toddle,strut,stroll,sneak,trundle,shamble,backpack,tiptoe,tramp,whiz,scud,perambulate,scamper,scuttle,sashay,lollop,stump,rove,flit,wade,drift,stagger,float,sweep,traipse,run,hasten,coast,bolt,zigzag,ramble,sidle,sleepwalk,streak,frolic,march,swagger,glide,goose-step,bound,scutter,shuffle,lumber,bowl
     (PREFERENCE 0.96)
     )
    ((meta-data :origin calo :entry-date 20040916 :change-date nil :comments caloy2 :vn ("roll-51.3.1") :wn ("bounce%2:35:03" "bounce%2:38:00" "bounce%2:38:02"))
     (LF-PARENT ONT::move-up-and-down)
     (example "the ball bounced")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-templ)
     )
    )
   )
  (W::hop
   (SENSES
    ;;;; hop on the highway
    ((LF-PARENT ONT::jump)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-templ)
     )
    ((LF-PARENT ONT::jump)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-templ)
     )
    )
   )
;  ((W::kip w::up)
;   (SENSES
;    ((LF-PARENT ONT::kip)
;     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
;     (TEMPL agent-templ)
;     (meta-data :origin coordops :entry-date 20070619 :change-date nil :comments nil)
;     )
;    )
;   )
; ((W::kip w::down)
;   (SENSES
;    ((LF-PARENT ONT::kip)
;     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
;     (TEMPL agent-templ)
;     (meta-data :origin coordops :entry-date 20070619 :change-date nil :comments nil)
;     )
;    )
;   )
  ((W::break (W::up))
   (wordfeats (W::morph (:forms (-vb) :past W::broke :pastpart W::broken :nom (w::break w::up))))
   (SENSES
    ((LF-PARENT ONT::Separation)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     )
    )
   )
  ((W::chop (W::up))
   (wordfeats (W::morph (:forms (-vb) :ing W::chopping)))
   (SENSES
    ((LF-PARENT ONT::cut)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::bind
   (wordfeats (W::morph (:forms (-vb) :past W::bound)))
   (SENSES
    ;;;; bind the patient to the stretcher
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL AGENT-THEME-CO-THEME-optional-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )
  (W::tie
   (wordfeats (W::morph (:forms (-vb) :past W::tied :ing w::tying)))
   (SENSES
    ;;;; tie the patient to the stretcher
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Aspect F::bounded) (F::Time-span F::Atomic))
     (TEMPL AGENT-THEME-CO-THEME-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    ((LF-PARENT ONT::ATTACH)
     (SEM (F::Aspect F::bounded) (F::Time-span F::Atomic))
     (example "tie your shoes")
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  (W::tether
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::ATTACH)
     (SEM (F::Aspect F::bounded) (F::Time-span F::Atomic))
     (TEMPL AGENT-THEME-CO-THEME-TEMPL (xp (% W::pp (W::ptype W::to))))
     )
    )
   )
  (W::switch
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("convert-26.6.2-1"))
     (LF-PARENT ONT::Replacement)
     (example "let's switch trucks")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     )
    ((meta-data :origin fruitcarts :entry-date 20050331 :change-date nil :comments fruitcarts-11-1)
     (LF-PARENT ONT::Replacement)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (example "switch the triangle with the square")
     (TEMPL agent-theme-co-theme-templ (xp (% W::PP (W::ptype W::with))))
     )
    )
   )
  (W::override
   (SENSES
    ((LF-PARENT ONT::Replacement)
     (example "override a page's font")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (meta-data :origin task-learning :entry-date 20050819 :change-date nil :comments nil)
     )
    )
   )
  (W::replace
   (wordfeats (W::morph (:forms (-vb) :nom W::replacement)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::Replacement)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     )
    ((meta-data :origin fruitcarts :entry-date 20050331 :change-date nil :comments fruitcarts-11-1)
     (LF-PARENT ONT::Replacement)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (example "replace the triangle with the square")
     (TEMPL agent-theme-co-theme-templ (xp (% W::PP (W::ptype W::with))))
     )
    )
   )

  (W::exchange
   (wordfeats (W::morph (:forms (-vb) :nom W::exchange)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::Replacement)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     )
    ((LF-PARENT ONT::Replacement)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (example "exchange the triangle with the square")
     (TEMPL agent-theme-co-theme-templ (xp (% W::PP (W::ptype (? pt w::for W::with)))))
     )
    )
   )
 (W::substitute
    (wordfeats (W::morph (:forms (-vb) :nom W::substitution)))
   (SENSES
    ((meta-data :origin calo :entry-date 20031230 :change-date nil :comments html-purchasing-corpus)
     (LF-PARENT ONT::Replacement)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     )
    ((meta-data :origin fruitcarts :entry-date 20050331 :change-date nil :comments fruitcarts-11-1 :vn ("exchange-13.6-1-1"))
     (LF-PARENT ONT::Replacement)
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (example "substitute the triangle for the square")
     (TEMPL agent-theme-co-theme-templ (xp (% W::PP (W::ptype (? pt w::with W::for)))))
     )
    )
   )
  (W::tend
   (SENSES
    ((LF-PARENT ONT::be-inclined)
     (example "he tends to speed")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL AGENT-effect-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
     )
    ((LF-PARENT ONT::be-inclined)
     (example "the window tends to stick")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL theme-effect-SUBJCONTROL-TEMPL (xp (% W::cp (W::ctype W::s-to))))
     )
    )
   )
  (W::deal
   (wordfeats (W::morph (:forms (-vb) :past W::dealt :nom w::deal)))
   (SENSES
    (;;(LF-PARENT ONT::managing)
     (lf-parent ont::cope-deal) ;; 20120524 GUM change new parent
     (example "deal with it")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::with))))
     )
    )
   )
  (W::handle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("hold-15.1-1"))
     (LF-PARENT ONT::body-manipulation)
     (TEMPL agent-theme-xp-templ) ; like clutch,grip,clasp,hold,wield,grasp
     (PREFERENCE 0.96)
     )
    ((meta-data :origin monroe :entry-date 20031217 :change-date nil :comments s7)
     ;;(LF-PARENT ONT::managing)
     (lf-parent  ont::calm-manage-regulate-watch-handle-cover-takecare-run) ;; 20120521 GUM change new parent 
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "handle the situation")
     )
    )
   )
((W::settle (w::down))
   (SENSES
    ((LF-PARENT ont::subduing)
     (example "settle down")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL experiencer-TEMPL)
     (preference .97) ;; prefer transitive
     (meta-data :origin plow :entry-date 20050922 :change-date nil :comments nil)
     )
    ((LF-PARENT ont::subduing)
     (example "settle him down")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-experiencer-xp-TEMPL)
     (meta-data :origin plow :entry-date 20050922 :change-date nil :comments nil)
     )
    )
   )
((W::chill w::out)
   (SENSES
    ((LF-PARENT ont::subduing)
     (example "chill out")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL experiencer-TEMPL)
     (meta-data :origin plow :entry-date 20050922 :change-date nil :comments nil)
     )
    )
   )
((W::calm (w::down))
   (SENSES
    ((LF-PARENT ont::subduing)
     (example "calm down")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL experiencer-TEMPL)
     (preference .97) ;; prefer transitive
     (meta-data :origin plow :entry-date 20050922 :change-date nil :comments nil)
     )
    ((LF-PARENT ont::subduing)
     (example "calm him down")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-experiencer-xp-TEMPL)
     (meta-data :origin plow :entry-date 20050922 :change-date nil :comments nil)
     )
    )
   )
(W::relax
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("relax%2:29:01"))
     (LF-PARENT ont::experiencer-obj)
     (example "relax the constraints")
     (TEMPL cause-theme-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     (preference .98) ;; prefer ont::subduing 
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ont::subduing)
     (example "relax")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL experiencer-TEMPL)
     (preference .96) ;; prefer transitive
     (meta-data :origin plow :entry-date 20050922 :change-date nil :comments nil)
     )
    ((LF-PARENT ont::subduing)
     (example "a massage will relax him")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-experiencer-xp-TEMPL)
     (meta-data :origin plow :entry-date 20050922 :change-date nil :comments nil)
     )
    ;; need another sense for "relax the constraints"
    )
   )
  (W::soothe
   (SENSES
    ((LF-PARENT ont::subduing)
     (example "music soothes the savage beast")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-experiencer-xp-TEMPL)
     (meta-data :origin plow :entry-date 20050922 :change-date nil :comments nil)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-comfort)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
   
  (W::calm
   (SENSES
    (;;(LF-PARENT ONT::managing)
     (lf-parent  ont::calm-manage-regulate-watch-handle-cover-takecare-run) ;; 20120521 GUM change new parent 
     (example "calm the situation")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    ((LF-PARENT ont::subduing)
     (example "music calms the savage beast")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cause-experiencer-xp-TEMPL)
     (meta-data :origin calo-ontology :entry-date 20050922 :change-date nil :comments vn2-integration)
     )
    )
   )
  (W::provide
      (wordfeats (W::morph (:forms (-vb) :nom W::provision)))
   (SENSES
    ((LF-PARENT ONT::supply)
     (example "provide the solution (to him)")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL agent-theme-recipient-alternation-TEMPL)
     )
    ((LF-PARENT ONT::supply)
     (example "provide him with the solution")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL agent-recipient-theme-templ (xp (% w::pp (w::ptype w::with))))
     (meta-data :origin calo-ontology :entry-date 20050922 :change-date 20090501 :comments vn2-integration)
     )
    ((LF-PARENT ONT::supply)
     (example "the battery provides a spark (to the engine)")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL cause-theme-to-recipient-optional-TEMPL)
     (meta-data :origin step :entry-date 20080626 :change-date 20090501 :comments nil)
     )
    ((LF-PARENT ONT::supply)
     (example "the battery provides the engine with power")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL cause-recipient-theme-templ (xp (% w::pp (w::ptype w::with))))
     (meta-data :origin step :entry-date 20080626 :change-date 20090501 :comments nil)
     )
    )
   )
 (W::furnish
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("fulfilling-13.4.1-1"))
     (LF-PARENT ONT::supply)
     (TEMPL agent-theme-to-recipient-optional-templ) ; like supply but doesn't have ditransitive variant
     (PREFERENCE 0.96)
     )
   ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("fulfilling-13.4.1-1"))
     (LF-PARENT ONT::supply)
     (TEMPL agent-recipient-theme-templ (xp (% w::pp (w::ptype w::with))))
     (PREFERENCE 0.96)
     )    
    ((LF-PARENT ONT::supply)
     (example "furnish the office")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL agent-THEME-XP-TEMPL)
     (meta-data :origin calo-ontology :entry-date 20051214 :change-date 20090501 :comments Office)
     )
    ((LF-PARENT ONT::supply)
     (example "the battery furnishes a spark (to the engine)")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL cause-theme-to-recipient-optional-TEMPL)
     (meta-data :origin step :entry-date 20080626 :change-date 20090501 :comments nil)
     )
    ((LF-PARENT ONT::supply)
     (example "the battery furnishes the engine with power")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL cause-recipient-theme-templ (xp (% w::pp (w::ptype w::with))))
     (meta-data :origin step :entry-date 20080626 :change-date 20090501 :comments nil)
     )
    )
   )
  (W::serve
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("fulfilling-13.4.1-1"))
     (LF-PARENT ONT::supply)
     (example "that company only serves paying customers")
     (SEM (F::Aspect F::Bounded) (F::Time-span F::Atomic))
     (TEMPL agent-theme-recipient-alternation-templ) ; like supply
     (PREFERENCE 0.96)
     )
    )
   )

;; nb ont::be-at-loc is trajectory - so e.g. "sitting at the window" doesn't parse as ont::be-at-loc
  (W::LIE
   (wordfeats (W::morph (:forms (-vb) :past W::lay :pastpart W::lain :ing W::lying)))
   (SENSES
    ((EXAMPLE "The stick was lying in the road")
     (LF-PARENT ONT::BE-AT-LOC)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::Extended))
     (TEMPL theme-templ)
     )
    )
   )
  (W::stand
   (wordfeats (W::morph (:forms (-vb) :past W::stood :ing W::standing)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("put_spatial-9.2-1"))
     (EXAMPLE "The tree was standing on the hill")
     (LF-PARENT ONT::BE-AT-LOC) 
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::Extended))
     (TEMPL theme-templ)
     )
    )
   )
  (W::sit
   (wordfeats (W::morph (:forms (-vb) :past W::sat :ing W::sitting)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("put_spatial-9.2-1"))
     (EXAMPLE "the cup is sitting on the table")
     (LF-PARENT ONT::BE-AT-LOC)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::Extended))
     (TEMPL theme-templ)
     )
    ((EXAMPLE "he sat at the desk" )
     ;;(LF-PARENT ONT::BODY-MOVEMENT)
     (lf-parent ont::sit-lay-stand-bend-flop-lean-perch-plop) ;; 20120523 GUM change new parent
      (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::hang
   (wordfeats (W::morph (:forms (-vb) :past W::hung)))   
   (SENSES
    ((EXAMPLE "he was hanging from the tree")
     (LF-PARENT ONT::BE-AT-LOC)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::Extended))
     (TEMPL theme-templ)
     )
    )
   )
  ))

  
(define-words :pos W::v :templ AGENT-THEME-XP-TEMPL
 :words (
  (w::zoom
   (wordfeats (W::morph (:forms (-vb) :nom w::zoom)))
   (SENSES
    ((lf-parent ont::move-quickly)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::Atomic))
     (TEMPL AGENT-TEMPL)
     (example "he zoomed across the room")
     )
    ((lf-parent ont::move-quickly)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::Atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (example "zoom the camera in/out")
     (meta-data :origin coordops :entry-date 20070514 :change-date nil :comments nil)
     )
    )
   )
  (w::surge
   (wordfeats (W::morph (:forms (-vb) :nom w::surge)))
   (SENSES
    ((lf-parent ont::move-quickly)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::Atomic))
     (TEMPL theme-TEMPL)
     )
    )
   )
  (W::center
   (wordfeats (W::morph (:forms (-vb) :ing w::centering :past W::centered)))   
   (SENSES
;    ((LF-PARENT ONT::computer-action)
;     (SEM (F::Aspect F::bounded) (F::Time-span F::Atomic))
;     (TEMPL AGENT-TEMPL)
;     (meta-data :origin ralf :entry-date 20040621 :change-date nil :comments ralf.txt)
;     (example "center on Atlanta")
;     (preference 0.98)
;     )
    ((LF-PARENT ONT::arranging)
     (SEM (F::Aspect F::bounded) (F::Time-span F::Atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (meta-data :origin task-learning :entry-date 20050923 :change-date 20090507 :comments nil)
     (example "center the image within the window")
     )
    )
   )
  (W::recenter
    (wordfeats (W::morph (:forms (-vb) :ing w::recentering :past W::recentered)))   
   (SENSES
    ((LF-PARENT ONT::arranging)
     (SEM (F::Aspect F::bounded) (F::Time-span F::Atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     (meta-data :origin task-learning :entry-date 20050916 :change-date 20090507 :comments nil)
     (example "recenter the image within the window")
     )
    )
   )

;  ((W::home W::camera)
;   
;   (SENSES
;    ((LF-PARENT ONT::computer-action)
;     (SEM (F::Aspect F::unbounded) (F::Time-span F::Atomic))
;     (meta-data :origin lou-2 :entry-date 20061106 :change-date nil :comments demo)
;     (TEMPL AGENT-TEMPL)
;     )
;    )
;   )
;   ((W::center W::camera)
;    (wordfeats (W::morph (:forms NIL)))
;   (SENSES
;    ((LF-PARENT ONT::computer-action)
;     (SEM (F::Aspect F::unbounded) (F::Time-span F::Atomic))
;     (meta-data :origin coordops :entry-date 20070514 :change-date nil :comments demo)
;     (TEMPL AGENT-TEMPL)
;     )
;    )
;   )
  (W::own
   (SENSES
    ((EXAMPLE "he owns a truck")
     (LF-PARENT ONT::possess)
     (TEMPL AFFECTED-THEME-XP-TEMPL)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     )
    )
   )
  (W::possess
   (wordfeats (W::morph (:forms (-vb) :nom w::possession)))
   (SENSES
    ((EXAMPLE "he possesses a truck")
     (LF-PARENT ONT::possess)
     (TEMPL AFFECTED-THEME-XP-TEMPL)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     )
    )
   )
  ))



(define-words :pos W::v :boost-word t :templ AGENT-THEME-XP-TEMPL
 :words (
	 
;;;	 (W::hrv
;;;	  (senses 
;;;	   ((EXAMPLE "I have a book ready")
;;;	    (TEMPL AFFECTED-THEME-PROPERTY-PRED-TEMPL)
;;;	    (LF-parent ONT::HAVE-PROPERTY)
;;;	    )
;;;	   ))

  (W::hve
   (wordfeats (W::morph (:forms (-vb)  :3s W::hs :past W::hd)))
   (SENSES
    ((EXAMPLE "have a letter sent")
     (LF-PARENT ONT::MAKE-IT-SO)
     (meta-data :origin trains :entry-date unknown :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-passive-templ (xp (% W::VP (W::vform W::passive))))
     )
    )
   )

	  
  (W::have
   (wordfeats (W::morph (:forms (-vb) :3s W::has :past W::had)))
   (SENSES
    ((EXAMPLE "I have to go")
     (LF-PARENT ONT::NECESSITY)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL affected-effect-SUBJCONTROL-TEMPL)
     )
    ((LF-PARENT ONT::HAVE)
     (example "I have a truck")
     (TEMPL AFFECTED-THEME-XP-TEMPL)
     (preference .98)
     )
    ;; this doesn't work
    ;;;; myrosia 01/05/03 I have work to do // we have a line down
;    ((LF-PARENT ONT::HAVE-PROPERTY)
    ;;(example "I have work to do" "we have a line down")
    ;; (meta-data :origin monroe :entry-date 2003/0105 :change-date nil :comments nil)
;     (TEMPL affected-PROPERTY-COMPLEX-TEMPL)
;     )
 ; 12/2010 james wants to conflate this with ont::have
 ;   ((LF-PARENT ONT::secondary-HAVE-PROPERTY)
 ;   ((lf-parent ont::have)
 ;    (example "We have lines down at pittsford" "we have a book ready for you")
 ;    (TEMPL affected-theme-property-pred-templ)
 ;    )
    ((LF-PARENT ONT::CONSUME)
     (TEMPL AGENT-AFFECTED-XP-TEMPL)
     (meta-data :origin medadvisor :entry-date 20011121 :change-date nil :comments nil)
     (example "I like to have an antacid at bedtime")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((LF-PARENT ONT::MAKE-IT-SO)
     (meta-data :origin trains :entry-date unknown :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "have the trucks go there")
     (TEMPL cause-effect-affected-objcontrol-templ (xp (% W::VP (W::vform (? x W::base W::passive)))))
     )
    ((LF-PARENT ONT::have-experience)
     (TEMPL affected-theme-xp-TEMPL)
     (example "he has a headache")
     (meta-data :origin cardiac :entry-date 20080217 :change-date nil :comments nil)
     )
; 12/2010 jfa wants to conflate this with ont::have-experience
;    ((LF-PARENT ONT::participating)
;     (TEMPL affected-theme-xp-TEMPL)
;     (example "he has a meeting")
;     (meta-data :origin cardiac :entry-date 20080217 :change-date nil :comments nil)
;     ) 
    ;;;; auxiliary have in perfect construction
    ((LF-PARENT ONT::PERFECTIVE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL PERFECTIVE-TEMPL)
     (example "they have gone")
     (SYNTAX (W::auxname W::perf) (w::changesem +))
     )
    ;;;; auxiliary have in perfect construction with main V elided
    ((LF-PARENT ONT::PERFECTIVE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL AUX-NOCOMP-TEMPL)
     (example "they have")
     (SYNTAX (W::auxname W::perf) (W::changesem +))
     )
    )
   )
  (W::^ve
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pres) 
	      (W::agr (? vf W::1s W::2s W::1p W::2p W::3p))
	      (w::contraction +)
   )
   (SENSES
    ;;;; auxiliary have in perfect construction
    ((LF-PARENT ONT::PERFECTIVE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::have)
     (TEMPL PERFECTIVE-TEMPL)
     (example "they've gone")
     (SYNTAX (W::auxname W::perf) (w::changesem +))
     )
    )
   )
  (W::can
   (SENSES
    ;;;; I can drive a truck
    ((LF-PARENT ONT::ABILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::can)
     (TEMPL AUX-MODAL-TEMPL)
     (SYNTAX (W::VFORM W::PRES))
     )
    ((LF-PARENT ONT::ABILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::can)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (W::changesem +))
     )
    )
   )
   (W::cannot
   (SENSES
    ((LF-PARENT ONT::ABILITY)
     (lf-form w::can)
     (meta-data :origin calo-ontology :entry-date 20060201 :change-date nil :comments meeting-understanding)
     (example "it cannot fail")
     (TEMPL AUX-MODAL-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (w::neg +))
     )
    ((LF-PARENT ONT::ABILITY)
     (lf-form w::can)
     (meta-data :origin calo-ontology :entry-date 20060201 :change-date nil :comments meeting-understanding)
     (example "it cannot")
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (w::neg +) (W::changesem +))
     )
    )
   )

;; negated auxiliaries with no apostrophe -- added for asma texting 2012/01/30
 (W::cant
  (wordfeats (W::morph (:forms NIL)) (W::vform W::pres) (W::agr (? vf W::1s 2s w::3s W::1p w::2p w::3p)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::ABILITY)
     (lf-form w::can)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (example "it cant fail")
     (TEMPL AUX-MODAL-TEMPL)
      )
    ((LF-PARENT ONT::ABILITY)
     (lf-form w::can)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (example "it cant")
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     )
    )
   )

 (W::couldnt
  (wordfeats (W::morph (:forms NIL)) (W::vform W::past) (W::agr (? vf W::1s 2s w::3s W::1p w::2p w::3p)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::ABILITY)
     (lf-form w::can)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (example "it cant fail")
     (TEMPL AUX-MODAL-TEMPL)
     )
    ((LF-PARENT ONT::ABILITY)
     (lf-form w::can)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (example "it cant")
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     )
    )
   )

 (W::shouldnt
  (wordfeats (W::morph (:forms NIL)) (W::vform W::fut) (W::agr (? vf W::1s 2s w::3s W::1p w::2p w::3p)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::SHOULD)
     (lf-form w::should)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (example "it cant fail")
     (TEMPL AUX-MODAL-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (w::neg +))
     )
    ((LF-PARENT ONT::SHOULD)
     (lf-form w::should)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (example "it cant")
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (w::neg +) (W::changesem +))
     )
    )
   )

 (W::wont
  (wordfeats (W::morph (:forms NIL)) (W::vform W::fut) (W::agr (? vf W::1s 2s w::3s W::1p w::2p w::3p)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::FUTURE)
     (lf-form w::will)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL AUX-MODAL-TEMPL)
     )
    ((LF-PARENT ONT::FUTURE)
     (lf-form w::will)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     )
    )
   )

 (W::wouldnt
  (wordfeats (W::morph (:forms NIL)) (W::vform W::fut) (W::agr (? vf W::1s 2s w::3s W::1p w::2p w::3p)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::FUTURE)
     (lf-form w::will)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL AUX-MODAL-TEMPL)
     )
    ((LF-PARENT ONT::FUTURE)
     (lf-form w::will)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     )
    )
   )

  (W::dont
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pres) (W::agr (? vf W::1s 2s W::1p w::2p w::3p)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::DO)
     (lf-form w::do)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL AUX-MODAL-TEMPL)
     )
    ((LF-PARENT ONT::DO)
     (lf-form w::do)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     )
    )
   )

  (W::didnt
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pres) (W::agr (? vf 3s)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::DO)
     (lf-form w::do)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL AUX-MODAL-TEMPL)
     )
    ((LF-PARENT ONT::DO)
     (lf-form w::do)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     )
    )
   )

 (W::isnt
   (wordfeats (W::morph (:forms NIL))(W::vform W::pres) (W::agr W::3s) (w::neg +))
   (SENSES
    ;;;; He isnt loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL PROG-TEMPL)
     )
    ;;;; it isnt loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
      )
    ;;;; she isnt hungry
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; It isnt the truck
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    ;;;; .. there isnt a box
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr w::3s))) )
     )
    )
   )

(W::ARENT
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pres) (W::agr (? vf W::2s W::1p W::2p W::3p)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     )
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::progr) (W::changesem +))
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
      )
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     )
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL theme-pred-TEMPL)
     )
    (;;(LF-PARENT ONT::IN-RELATION)
      (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr (? ag w::3p w::2s w::2p w::1p)))))
     )
    )
   )

(W::WASNT
   (wordfeats (W::morph (:forms NIL)) (W::vform W::past) (W::agr (? vf W::1s W::3s)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     )
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::progr) (W::changesem +))
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
      )
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     )
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL theme-pred-TEMPL)
     )
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr (? ag w::3p w::2s w::2p w::1p)))))
     )
    )
   )

(W::WERENT
   (wordfeats (W::morph (:forms NIL)) (W::vform W::past) (W::agr (? vf W::2s w::2p w::1p w::3p)) (w::neg +))
   (SENSES
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     )
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::progr) (W::changesem +))
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
      )
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     )
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL theme-pred-TEMPL)
     )
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (PREFERENCE 0.96)
     )
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (meta-data :origin asma :entry-date 20120130 :change-date nil)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr (? ag w::3p w::2s w::2p w::1p)))))
     )
    )
   )

   (W::ca
    (wordfeats (w::contraction +))    
   (SENSES
    ;;;; I can't drive a truck i.e., I CA N^T
    ((LF-PARENT ONT::ABILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::CAN)
     (TEMPL AUX-MODAL-TEMPL)
     (SYNTAX (W::VFORM W::PRES))
     )
    ((LF-PARENT ONT::ABILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::can)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (W::changesem +))
     )
    )
   )
  (W::could
   (SENSES
    ;;;; I could drive a truck
    ((LF-PARENT ONT::CONDITIONAL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::could)
     (TEMPL COND-PRES-TEMPL)
     )
    ;;;; I could have driven a truck
    ((LF-PARENT ONT::CONDITIONAL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::could)
     (TEMPL COND-PAST-TEMPL)
     )
    ((LF-PARENT ONT::CONDITIONAL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::could)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (W::changesem +))
     )
    )
   )
  (W::MAY
   (SENSES
    ;;;; I may drive a truck
    ((LF-PARENT ONT::POSSIBILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::may)
     (TEMPL COND-PRES-TEMPL)
     )
    ;;;; I may have driven a truck
    ((LF-PARENT ONT::POSSIBILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::may)
     (TEMPL COND-PAST-TEMPL)
     )
    ((LF-PARENT ONT::POSSIBILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::may)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (W::changesem +))
     )
    )
   )
  (W::might
   (SENSES
    ;;;; I might drive a truck
    ((LF-PARENT ONT::POSSIBILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::might)
     (TEMPL COND-PRES-TEMPL)
     )
    ;;;; I might have driven a truck
    ((LF-PARENT ONT::POSSIBILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::might)
     (TEMPL COND-PAST-TEMPL)
     )
    ((LF-PARENT ONT::POSSIBILITY)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::might)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (W::changesem +))
     )
    )
   )
  (W::shall
   (SENSES
    ;;;; I shall drive a truck
    ((LF-PARENT ONT::FUTURE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::shall)
     (TEMPL AUX-FUTURE-TEMPL)
     (SYNTAX (W::VFORM W::FUT))
     )
    ((LF-PARENT ONT::FUTURE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::shall)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::FUT) (W::changesem -))
     )
    )
   )
  (W::sha
   (wordfeats (w::contraction +))    
   (SENSES
    ;;;; I shan't drive a truck
    ((LF-PARENT ONT::FUTURE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::shall)
     (TEMPL AUX-FUTURE-TEMPL)
     (SYNTAX (W::VFORM W::FUT)
	     )
     )
    )
   )
  
  (W::should
   (SENSES
    ;;;; I should drive a truck
    ((LF-PARENT ONT::should)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::should)
     (TEMPL COND-PRES-TEMPL)
     )
    ;;;; I should have driven a truck
    ((LF-PARENT ONT::should)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::should)
     (TEMPL COND-PAST-TEMPL)
     )
    ((LF-PARENT ONT::should)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::should)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::PRES) (W::changesem +)
	     )
     )
    )
   )
  
  ((w::had w::better)
   (wordfeats (W::morph (:forms NIL)))
   (SENSES
    ((LF-PARENT ONT::should)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL COND-PRES-TEMPL)
     (example "he had better hire him")
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil :wn nil)
     )
    ((LF-PARENT ONT::should)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (example "he had better")
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil :wn nil)
     (SYNTAX (W::VFORM W::PRES) (W::changesem +))
     )
    )
   )
  ((w::^d w::better)   
   (wordfeats (W::morph (:forms NIL))
	      (w::contraction +)
	      )
   (SENSES
    ((LF-PARENT ONT::should)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL COND-PRES-TEMPL)
     (example "he'd better hire him")
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil :wn nil)
     )
    ((LF-PARENT ONT::should)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (example "he'd better")
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil :wn nil)
     (SYNTAX (W::VFORM W::PRES) (W::changesem +))
     )
    )
   )
  
  (w::better
   (wordfeats (W::morph (:forms NIL))
	      (w::contraction +) ;; MD -- this is not quite a contraction, but we mark it so that it does not go into nocomp rules and other rules that disallow contractions
	      )
   (SENSES
    ((LF-PARENT ONT::should)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL COND-PRES-TEMPL)
     (example "he better hire him")
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil :wn nil)
     (preference .97)
     )
    ((LF-PARENT ONT::should)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (example "he better")
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil :wn nil)
     (SYNTAX (W::VFORM W::PRES) (W::changesem +))
     (preference .97)
     )
    )
   )

  (W::WILL
   (SENSES
    ;;;; I will drive a truck
    ((LF-PARENT ONT::FUTURE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::will)
     (TEMPL AUX-FUTURE-TEMPL)
     (SYNTAX (W::VFORM W::FUT))
     )
    ((LF-PARENT ONT::FUTURE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::will)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::FUT) (W::changesem -))
     )
    )
   )
  (W::^LL
   (wordfeats (w::contraction +))    
   (SENSES
    ;;;; I will drive a truck
    ((LF-PARENT ONT::FUTURE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::will)
     (TEMPL AUX-FUTURE-TEMPL)
     (SYNTAX (W::VFORM W::FUT))
     )
    )
   )
  (W::WO
   (wordfeats (w::contraction +))    
   (SENSES
    ;;;; I will drive a truck
    ((LF-PARENT ONT::FUTURE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::will)
     (TEMPL AUX-FUTURE-TEMPL)
     (SYNTAX (W::VFORM W::FUT))
     )
    ((LF-PARENT ONT::FUTURE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::will)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::FUT) (W::changesem -))
     )
    )
   )
  (W::would
   (SENSES
    ;;;; I would drive a truck
    ((LF-PARENT ONT::CONDITIONAL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::would)
     (TEMPL COND-PRES-TEMPL)
     )
    ;;;; I would have driven a truck
    ((LF-PARENT ONT::CONDITIONAL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::would)
     (TEMPL COND-PAST-TEMPL)
     )
    ((LF-PARENT ONT::CONDITIONAL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::would)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::VFORM W::PRES))
     )
    )
   )
  (W::^d
   (wordfeats (W::morph (:forms NIL)) 
	      (W::agr (? vf W::1s W::2s W::3s W::1p W::2p W::3p))
	      (w::contraction +)
	      )
   (SENSES
    ;;;; I'd like to be under the sea
    ((LF-PARENT ONT::CONDITIONAL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::would)
     (TEMPL COND-PRES-TEMPL)
     )
    ;;;; I'd have been under the sea
    ((LF-PARENT ONT::CONDITIONAL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::would)
     (TEMPL COND-PAST-TEMPL)
     )
    ;;;; swift 03/21/02
    ;;;; auxiliary have in perfect construction -- I/you/she/we/they'd gone
    ((LF-PARENT ONT::PERFECTIVE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL PERFECTIVE-TEMPL)
     (SYNTAX (W::vform W::past))
     )
    )
   )
  (W::must
   (SENSES
    ;;;; I must drive a truck
    ((LF-PARENT ONT::must)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::must)
     (TEMPL COND-PRES-TEMPL)
     )
    ;;;; I must have driven a truck
    ((LF-PARENT ONT::must)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::must)
     (TEMPL COND-PAST-TEMPL)
     )
    ((LF-PARENT ONT::must)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::must)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     )
    )
   )

  (W::redo
   (wordfeats (W::morph (:forms (-vb) :past W::redid :pastpart W::redone :3s W::redoes)))
   (SENSES
    ((LF-PARENT ONT::EXECUTE)
     (meta-data :origin calo :entry-date 20040622 :change-date nil :comments y2)
     (example "redo it")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL cause-EFFECT-XP-TEMPL)
     )
    )
   )

;  ((W::carry (w::out))
;   (SENSES
;    ((LF-PARENT ONT::EXECUTE)
;     (meta-data :origin gloss-training :entry-date 20100219 :change-date nil :comments nil)
;     (SEM (F::Aspect F::Unbounded) (F::Time-span F::extended))
;     (TEMPL AGENT-THEME-XP-TEMPL)
;     (example "He carried out the task")
;     )
;    )
;   )
  (W::do
   (wordfeats (W::morph (:forms (-vb) :past W::did :pastpart W::done :3s W::does)))
   (SENSES
    ;;;; the rock did fall on a truck
    ((LF-PARENT ONT::DO)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::do)
     (TEMPL DO-TEMPL)
     )
    ;;;; I do, I don't
    ((LF-PARENT ONT::DO)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::do)
     (TEMPL MODAL-AUX-NOCOMP-TEMPL)
     (SYNTAX (W::changesem -))
     )
    ;;;; I did it. I did the a.
    ;;;; what should the temporal features of 'do' be? for now, treat like activity
    ((LF-PARENT ONT::EXECUTE)
     (example "I did it." "I did the task")
     (SEM (F::Aspect F::Unbounded) (F::Time-span F::extended))
     (TEMPL cause-EFFECT-XP-TEMPL)
     (example "I did the activity")
     )
    ; this is now handled by the regular cause-effect-xp-templ
;    ((LF-PARENT ONT::EXECUTE)
;     (example "Let's do the helicopter instead" "Can we do sin(x)")
;     (SEM (F::Aspect F::Unbounded) (F::Time-span F::extended))
;     (TEMPL cause-EFFECT-IMPLICIT-XP-TEMPL)
;     (preference 0.96)
;     )    
    )
    )
  
  (W::gonna
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((LF-PARENT ONT::GOING-TO)
     (TEMPL GONNA-TEMPL)
;     (PREFERENCE 1.03) why is this boosted?
     )
    )
   )
  ((W::going W::to)
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((LF-PARENT ONT::GOING-TO)
     (TEMPL GONNA-TEMPL)
     (PREFERENCE 1.07) ;; boosted b.c. of multi-word processing?
     )
    )
   )
  (W::BE
   (wordfeats (W::morph (:forms NIL)) (W::vform W::base) (W::agr ?agr))
   (SENSES
    ;;;; ...be loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     )
    ((LF-PARENT ONT::PROGRESSIVE)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::progr) (W::changesem +))
     )
    ;;;; ... be loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     (TEMPL PASSIVE-TEMPL)
     )
    ;;;; .. be happy
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; .. be the best
    ;;;; I set a lower preference to prefer EXISTS readings for sentences like "It is there" JFA 3/03
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    ;;;; .. there is a box
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL)
     )
    )
   
   )
  (W::AM
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pres) (W::agr W::1s))
   (SENSES
    ;;;; I am loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; I am
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::progr) (W::changesem +))
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; I am hungry
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)  
     )
    ;;;; I am the best
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    )
   )
  (W::^M
   (wordfeats (W::morph (:forms NIL)) 
	      (W::vform W::pres) (W::agr W::1s)
	      (w::contraction +)
	      )
   (SENSES
    ;;;; I am loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; The truck was loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; I^m hungry
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; I'm the winner
    (;(;;LF-PARENT ONT::IN-RELATION)
      (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    )
   )
  (W::ARE
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pres) (W::agr (? vf W::2s W::1p W::2p W::3p)))
   (SENSES
    ;;;; I am loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; you are
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::progr) (W::changesem +))
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; The truck was loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; You are in trouble
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; You are the winner
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    ;;;; .. there is a box
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr (? ag w::3p w::2s w::2p w::1p)))))
     )
    )
   )
  (W::^RE
   (wordfeats 
    (W::morph (:forms NIL)) 
    (W::vform W::pres) (W::agr (? vf W::2s W::1p W::2p W::3p))
    (w::contraction +)
    )
   (SENSES
    ;;;; I am loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; The truck was loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; you're at the store.
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; you're the one
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    ;;;; .. there is a box
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr (? ag w::3p w::2s w::2p w::1p)))))
     )
    )
   )
  (W::IS
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pres) (W::agr W::3s))
   (SENSES
    ;;;; He is loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; he is
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::progr) (W::changesem +))
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; it is loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; she is hungry
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; It is the truck
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    ;;;; .. there is a box
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr w::3s))) )
     )
    )
   )
  (W::^S
   (wordfeats (W::morph (:forms NIL)) 
	      (W::vform W::pres) (W::agr W::3s)
	      (w::contraction +)    
	      )
   (SENSES
    ;;;; He's loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; auxiliary have in perfect construction
    ((LF-PARENT ONT::PERFECTIVE)
     (TEMPL PERFECTIVE-TEMPL)
     (LF-FORM W::be)
     (SYNTAX (W::auxname W::perf))
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; it's loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; she's hungry
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; It's the truck
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    ;;;; .. there's a box
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr w::3s))) )
     )
    )
   )
  
  (W::WAS
   (wordfeats (W::morph (:forms NIL)) (W::vform W::past) (W::agr (? ag W::1s W::3s)))
   (SENSES
    ;;;; I was loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; He was
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::progr) (W::changesem +))
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; The truck was loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; I was hungry
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; I was the leader
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    ;;;; .. there is a box
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr (? ag w::1s w::3s)))))
     )
    )
   )
  (W::Were
   (wordfeats (W::morph (:forms NIL)) (W::vform W::past) (W::agr (? ag W::2s W::1p W::2p W::3p)))
   (SENSES
    ;;;; You were loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (TEMPL PROG-TEMPL)
     (LF-FORM W::be)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; they were
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::progr) (W::changesem +))
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; The trucks were loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     )
    ;;;; They were hungry
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; The trucks were the convoy.
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    ;;;; .. there is a box
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr (? ag  w::2s w::1p w::2p w::3p)))))
     )
    )
   )
  (W::BEING
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ;;;; The truck is being loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )

    ;;;; she's being the doctor.
    ;;;; swift 01/12/01 added aspect feature F_Stage-Level
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (SEM (F::Aspect F::Stage-Level))
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; .. there is a box
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL)
     )
    )
   )
  (W::BEEN
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pastpart) (W::AGR ?agr))
   (SENSES
    ;;;; I added (AGR ?agr) in order to make "There has been an accident" work
    ;;;; Myrosia should check JFA 11/02
    ;;;; I have been loading a truck
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL PROG-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; I have been
    ((LF-PARENT ONT::PROGRESSIVE)
     (LF-FORM W::be)
     (TEMPL AUX-NOCOMP-TEMPL)
     (SYNTAX (W::auxname W::PROGR) (W::changesem +))
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; The truck has been loaded.
    ((LF-PARENT ONT::PASSIVE)
     (LF-FORM W::be)
     (TEMPL PASSIVE-TEMPL)
     (meta-data :origin trips :entry-date nil :change-date 20073003 :comments csli-revision)
     )
    ;;;; she has been hungry
    ((LF-PARENT ONT::HAVE-PROPERTY)
     (LF-FORM W::be)
     (TEMPL theme-pred-TEMPL)
     )
    ;;;; The city has been the largest ...
    (;;(LF-PARENT ONT::IN-RELATION)
     (lf-parent ont::be) ;; 20120524 GUM change new parent
     (LF-FORM W::be)
     (TEMPL THEME-CO-THEME-EQUAL-TEMPL)
     (PREFERENCE 0.96)
     )
    ;;;; There has been an accident.
    ((LF-PARENT ONT::EXISTS)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL)
     )
    )
   )
  ))

(define-words :pos W::v :templ AGENT-THEME-XP-TEMPL 
 :words (
  (W::^S
   (wordfeats (W::morph (:forms NIL)) 
	      (W::vform W::pres) (W::agr W::3p)
	      (w::contraction +)
	      )
   (SENSES
    ;;;; a special contraction for "there's" NOTE the AGR 3p!!
    ((LF-PARENT ONT::Exists)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr w::3p))))
     (PREFERENCE 0.97)
     )
    ((LF-PARENT ONT::Have-property)
     (LF-FORM W::be)
     (TEMPL expletive-theme-pred-templ (xp1 (% W::np (W::lex W::there))))
     (PREFERENCE 0.97)
     )    
    )
   )

  (W::IS
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pres) (W::agr W::3p))
   (SENSES
    ;;;; a special contraction for "there is 1.5 volts at 3" NOTE the AGR 3p!!
    ((LF-PARENT ONT::Exists)
     (LF-FORM W::be)
     (TEMPL THERE-THEME-TEMPL (xp (% w::NP (w::agr w::3p))))
     (PREFERENCE 0.92)
     (meta-data :origin bee :entry-date 20050403 :change-date nil :comments mockup-student-1)     
     )
    ))
   

  ))

(define-words :pos W::v :templ AGENT-THEME-XP-TEMPL
 :words (
  (W::CAUSE
   (wordfeats (W::morph (:forms (-vb) :nom w::cause)))
   (SENSES
    ((EXAMPLE "Aspirin causes headaches")
     ;;(LF-PARENT ONT::CAUSE-EFFECT)
     (lf-parent ont::cause-produce-reproduce) ;;  20120524 GUM change new parent
     (TEMPL CAUSE-EFFECT-XP-TEMPL)
     )
    ((EXAMPLE "A caused B to hire C")
     (meta-data :origin csli-ts :entry-date 20070320 :change-date nil :comments nil :wn nil)
     (LF-PARENT ONT::CAUSE-MAKE)
     (TEMPL CAUSE-EFFECT-OBJCONTROL-TEMPL)
     )
    )
   )

  
  (W::vomit
     (wordfeats (W::morph (:forms (-vb) :past W::vomited :ing W::vomiting)))
   (SENSES
    ((EXAMPLE "The patient vomited")
     (LF-PARENT ONT::bodily-process)
     (TEMPL THEME-TEMPL)
     )
    ((EXAMPLE "The patient vomited green matter")
     (LF-PARENT ONT::bodily-process)
     (TEMPL THEME-CO-THEME-XP-TEMPL)
     )
    )
   )
  (W::LIE
   (wordfeats (W::morph (:forms (-vb) :past W::lied :ing W::lying)))
   (SENSES
    ((EXAMPLE "The patient lied")
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (templ agent-templ)
     )
    (;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (example "he lied to her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL 
	    (xp1 (% w::pp (w::ptype (? ptp w::to)))))
     )
    (;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (example "he spoke about it to her")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
    )
   )
  
  ((W::lay (W::down))
   (wordfeats (W::morph (:forms (-vb) :past W::lay :pastpart W::laid :ing W::laid)))
   (SENSES
    ((EXAMPLE "You had better lie down")
     ;;(LF-PARENT ONT::BODY-MOVEMENT)
     (lf-parent ont::sit-lay-stand-bend-flop-lean-perch-plop) ;; 20120523 GUM change new parent
     (LF-FORM W::lie-down)
     ;; need this sense for sloppy speakers
     (TEMPL AGENT-TEMPL)
     (preference .98)
     )
    ((EXAMPLE "lay down your weapons")
     (LF-PARENT ONT::PUT)
     )
    )
   )
  
  (W::lay
   (wordfeats (W::morph (:forms (-vb) :past W::lay :pastpart W::laid :ing W::laid)))
   (SENSES
    ((EXAMPLE "lay an egg on the table")
     (LF-PARENT ONT::PUT)
     )
    )
   )
  
  ((W::lie (W::down))
   (wordfeats (W::morph (:forms (-vb) :past W::lay :pastpart W::lain :ing W::lying)))
   (SENSES
    ((EXAMPLE "You had better lie down")
     ;;(LF-PARENT ONT::BODY-MOVEMENT)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (LF-FORM W::lie-down)
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  ((W::sit (W::down))
   (wordfeats (W::morph (:forms (-vb) :past W::sat :ing W::sitting)))
   (SENSES
    ((EXAMPLE "You had better sit down")
     (LF-PARENT ONT::BODY-MOVEMENT)
     (TEMPL AGENT-TEMPL)
     )
    )
   )
   ((W::sit (W::up))
   (wordfeats (W::morph (:forms (-vb) :past W::sat :ing W::sitting)))
   (SENSES
    ((EXAMPLE "You had better sit down")
     (LF-PARENT ONT::BODY-MOVEMENT)
      (TEMPL AGENT-TEMPL)
     )
    )
   )
  ((W::stand (W::up))
   (wordfeats (W::morph (:forms (-vb) :past W::stood :ing W::standing)))
   (SENSES
    ((EXAMPLE "You had better stand up")
     ;;(LF-PARENT ONT::BODY-MOVEMENT)
     (lf-parent ont::sit-lay-stand-bend-flop-lean-perch-plop) ;; 20120523 GUM change new parent
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  ((W::wake (W::up))
   (wordfeats (W::morph (:forms (-vb) :past W::woke :pastpart W::woken :ing W::waking)))
   (SENSES
    ((EXAMPLE "As soon as I wake up")
     (LF-PARENT ONT::BODILY-PROCESS)
     (LF-FORM W::wake-up)
     (SEM (F::trajectory -))
     (TEMPL THEME-TEMPL)
     )
    ((EXAMPLE "he woke up happy")
     (LF-PARENT ONT::BODILY-PROCESS)
     (SEM (F::trajectory -))
     (TEMPL THEME-PRED-TEMPL)
     )
    ((EXAMPLE "he/it woke him up")
     (LF-PARENT ONT::objective-influence)
     (SEM (F::trajectory -))
     (preference .98)
     (TEMPL cause-affected-xp-TEMPL)
     )
    )
   )

   (W::awake
   (wordfeats (W::morph (:forms (-vb) :past W::awoke :partpart w::awoken :ing W::awaking)))
   (SENSES
    ((EXAMPLE "he awoke at dawn")
     (LF-PARENT ONT::BODILY-PROCESS)
     (TEMPL THEME-TEMPL)
     )
    ((EXAMPLE "he awoke happy")
     (LF-PARENT ONT::BODILY-PROCESS)
     (SEM (F::trajectory -))
     (TEMPL THEME-PRED-TEMPL)
     )
    )
   )
   
  (W::wake
   (wordfeats (W::morph (:forms (-vb) :past W::woke :pastpart W::woken :ing W::waking)))
   (SENSES
    ((EXAMPLE "he woke at dawn")
     (LF-PARENT ONT::BODILY-PROCESS)
     (LF-FORM W::wake-up)
     (SEM (F::trajectory -))
     (TEMPL THEME-TEMPL)
     )
    ((EXAMPLE "he woke happy")
     (LF-PARENT ONT::BODILY-PROCESS)
     (SEM (F::trajectory -))
     (TEMPL THEME-PRED-TEMPL)
     )
    ((EXAMPLE "he/it woke him")
     (LF-PARENT ONT::objective-influence)
     (SEM (F::trajectory -))
     (TEMPL cause-affected-xp-TEMPL)
     )
    )
   )
  
  (W::matter
   (SENSES
    ((EXAMPLE "Does it matter")
     (LF-PARENT ONT::SALIENCE)
     (SEM (F::Aspect F::Indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     )
    ((EXAMPLE "It doesn't matter that the switch is off")
     (LF-PARENT ONT::SALIENCE)
     (SEM (F::Aspect F::Indiv-level) (F::Time-span F::extended))
     (TEMPL EXPLETIVE-THEME-TEMPL)
     (meta-data :origin beetle :entry-date 20050216 :change-date nil :comments mockup-1)
     )    
    ((EXAMPLE "It doesn't matter where the switch is located")
     (LF-PARENT ONT::SALIENCE)
     (SEM (F::Aspect F::Indiv-level) (F::Time-span F::extended))
     (TEMPL EXPLETIVE-THEME-TEMPL (xp2 (% w::NP (w::sort w::wh-desc))))
     (meta-data :origin beetle :entry-date 20050216 :change-date nil :comments mockup-1)
     )    
    ))
  
  (w::socialize
   (SENSES
    ((LF-PARENT ONT::social-activity)
     (example "he socializes (with them) regularly")
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (w::hobnob
   (SENSES
    ((LF-PARENT ONT::social-activity)
     (example "he hobnobs (with them) regularly")
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  ((W::go W::out)
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ((LF-PARENT ONT::social-activity)
     (example "I want to go out tonight")
     (meta-data :origin medadvisor :entry-date 2003???? :change-date nil :comments nil)
     (TEMPL AGENT-TEMPL)
     )
    ((LF-PARENT ONT::extinguish)
     (TEMPL THEME-TEMPL)
     (meta-data :origin beetle :entry-date 20050216 :change-date nil :comments mockup-1)
     (example "the lamp went out")
     ))
   )

  ((W::go W::off)
   (wordfeats (W::morph (:forms (-vb) :3s W::goes :past W::went :pastpart W::gone)))
   (SENSES
    ((LF-PARENT ONT::START-OBJECT)
     (TEMPL THEME-TEMPL)
     (meta-data :origin beetle :entry-date 20080516 :change-date nil :comments pilot2)
     (example "the bulb went off")
     ))
   )

  
  
  (W::interest
    (wordfeats (W::morph (:forms (-vb) :nom w::interest)))
   (SENSES
    ((EXAMPLE "does that interest you")
     (LF-PARENT ONT::evoke-attention)
     (meta-data :origin calo :entry-date 20041122 :change-date 20090512 :comments caloy2)
     (TEMPL CAUSE-experiencer-XP-TEMPL)
     )
    )
   )
  
  (W::interested
   (wordfeats (W::VFORM W::PASSIVE) (W::AGR ?agr) (W::MORPH (:forms NIL)))
   (SENSES
    ((EXAMPLE "I am interested in that")
     (LF-PARENT ONT::evoke-attention)
     (meta-data :origin calo :entry-date 20041122 :change-date 20090512 :comments caloy2)
     (TEMPL experiencer-cause-optional-TEMPL (xp (% w::pp (w::ptype (? p w::in)))))
     )
    )
   )
  
  (W::UPSET
   (wordfeats (W::morph (:forms (-vb) :past W::upset)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090515 :comments nil :vn ("amuse-31.1") :wn ("upset%2:30:00"))
     (EXAMPLE "Aspirin upsets my stomach")
     (LF-PARENT ONT::evoke-ill-being)
     (TEMPL CAUSE-EXPERIENCER-XP-TEMPL)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090512 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("upset%2:37:00" "upset%2:37:01"))
     (EXAMPLE "The horror movie upset me")
     (LF-PARENT ONT::evoke-distress)
     (TEMPL CAUSE-EXPERIENCER-XP-TEMPL)
     )
    )
   )
  (W::annoy
   (wordfeats (W::morph (:forms (-vb) :nom w::annoyance)))
   (SENSES
    ((EXAMPLE "he annoys her")
     (LF-PARENT ONT::evoke-annoyance)
     (meta-data :origin calo :entry-date 20040915 :change-date 20090512 :comments caloy2)
     (TEMPL CAUSE-experiencer-XP-TEMPL)
     )
    )
   )
  (W::disturb
   (wordfeats (W::morph (:forms (-vb) :nom w::disturbance)))
   (SENSES
    ((EXAMPLE "he disturbed her reverie")
     (LF-PARENT ONT::EXPERIENCER-OBJ)
     (meta-data :origin calo-ontology :entry-date 20051209 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("disturb%2:37:00"))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     )
    )
   )
  (W::bother
    (wordfeats (W::morph (:forms (-vb) :past W::bothered :ing W::bothering)))
   (SENSES
;    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("marvel-31.3-2"))
;     (LF-PARENT ONT::annoying)
;     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype (? p w::about))))) ; like mind,worry
;     (PREFERENCE 0.96)
;     )
    ((EXAMPLE "light bothers his eyes")
     (LF-PARENT ONT::evoke-annoyance)
     (meta-data :origin calo :entry-date 20040915 :change-date 20090512 :comments caloy2)
     (TEMPL CAUSE-experiencer-XP-TEMPL)
     )
    )
   )
 (w::disagree
;;	   (wordfeats (W::morph (:forms (-vb) :past W::disagreed :ing W::disagreeing :pastpart W::disagreed)))
	   (senses
	    ((LF-parent ont::contest)
	     (Example "He disagreed [with John]")
	     (TEMPL AGENT-ADDRESSEE-OPTIONAL-TEMPL (xp (% w::PP (w::ptype w::with))))
	     (meta-data :origin calo :entry-date 20050509 :change-date 20090508 :comments projector-purchasing) 
	     )
	    ((LF-parent ont::contest)
	     (Example "He disagreed with the findings")
	     (TEMPL AGENT-THEME-XP-TEMPL)
	     (meta-data :origin calo :entry-date 20050509 :change-date 20090508 :comments projector-purchasing) 
	     )	    
	    ))
 (w::dispute
	   (senses
	    ((LF-parent ont::response)
	     (Example "He disputes the findings")
	     (TEMPL AGENT-THEME-XP-TEMPL)
	     (meta-data :origin calo :entry-date 20050509 :change-date nil :comments projector-purchasing) 
	     )	    
	    ))
 (w::object
   (wordfeats (W::morph (:forms (-vb) :nom w::objection)))
	   (senses
	    (;;(LF-parent ont::contest)
	     (lf-parent ont::object) ;; 20120524 GUM change new parent
	     (Example "He objects to the findings")
	     (TEMPL AGENT-THEME-XP-TEMPL  (xp (% w::PP (w::ptype w::to))))
	     (meta-data :origin calo-ontology :entry-date 20060125 :change-date 20090508 :comments caloy3) 
	     )	    
	    ))
 (w::contest
	   (senses
	    (;;(LF-parent ont::contest)
	     (lf-parent ont::contest-deny-oppose-protest) ;; 20120523 GUM change new parent
	     (Example "He contests the findings")
	     (TEMPL AGENT-THEME-XP-TEMPL)
	     (meta-data :origin task-learning :entry-date 20050825 :change-date 20090508 :comments nil) 
	     )	    
	    ))
 (w::refute
	   (senses
	    ((LF-parent ont::contest)
	     (Example "He refutes the findings")
	     (TEMPL AGENT-THEME-XP-TEMPL)
	     (meta-data :origin calo :entry-date 20050509 :change-date 20090508 :comments projector-purchasing) 
	     )	    
	    ))
  (W::concern
   (SENSES
    ((EXAMPLE "the problem concerns him")
     (LF-PARENT ONT::AFFECT-experiencer)
     (meta-data :origin calo :entry-date 20050425 :change-date nil :comments projector-purchasing)
     (TEMPL CAUSE-experiencer-XP-TEMPL)
     )
;   the problem concerns last year's budget
    )
   )
  (W::hurt
   (wordfeats (W::morph (:forms (-vb) :past W::hurt)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090515 :comments nil :vn ("amuse-31.1") :wn ("hurt%2:30:04"))
     (EXAMPLE "Light hurts my eyes")
     (LF-PARENT ONT::evoke-pain)
     (TEMPL CAUSE-EXPERIENCER-XP-TEMPL)
     )
   ((meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("hurt%2:30:04"))
     (EXAMPLE "his leg hurts")
     (LF-PARENT ONT::experiencer-obj)
     (TEMPL THEME-TEMPL)
     )
   )
   )
  ))

(define-words :pos W::v :templ AGENT-THEME-XP-TEMPL
	      :words (
		      ;; this is only for the construction 'let X know', so know can only be in its base form and
		      ;; it must have dynamic aspect to combine with let
		      (W::know
		       (wordfeats (W::VFORM W::BASE) (W::MORPH (:forms NIL)))
		       (SENSES
			((meta-data :origin calo :entry-date 20040413 :change-date nil :comments y1v3)
			 (example "let me know")
			 (LF-PARENT ONT::awareness)			 
			 (templ cognizer-templ)
			 (preference .96) ;; prefer other senses
			 )
			)
		       )

  (W::track
   (SENSES
    ((EXAMPLE "Start tracking my location")
     (LF-PARENT ONT::FOLLOW)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::log
   (SENSES
    ((EXAMPLE "Start logging my bio sensors")
     (LF-PARENT ONT::RECORD)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::record
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("transcribe-25.4") :wn ("record%2:32:01"))
     (EXAMPLE "record a voice note")
     (LF-PARENT ONT::RECORD)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::note
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("sight-30.2") :wn ("note%2:32:01" "note%2:39:00" "note%2:39:02"))
     (LF-PARENT ONT::scrutiny)
     (TEMPL cognizer-theme-xp-templ) ; like regard
     (PREFERENCE 0.96)
     )
    ((EXAMPLE "note it")
     (LF-PARENT ONT::RECORD)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::annotate
    (wordfeats (W::morph (:forms (-vb) :nom w::annotation)))
   (SENSES   
     ((meta-data :origin calo-ontology :entry-date 20060424 :change-date nil :comments iris :vn ("image_impression-25.1"))
      (LF-PARENT ONT::write)
      (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
      (EXAMPLE "annotate the text")
     )
    )
   )
  (W::notate
    (wordfeats (W::morph (:forms (-vb) :nom w::notation)))
   (SENSES   
     ((meta-data :origin calo-ontology :entry-date 20060424 :change-date nil :comments iris)
      (LF-PARENT ONT::write)
      (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
      (EXAMPLE "annotate the text")
     )
    )
   )
  (W::SAMPLE
   (SENSES
    ((EXAMPLE "I am starting to sample fossils")
     (LF-PARENT ONT::sampling)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::play
   (SENSES
    ((EXAMPLE "play the voice note")
     ; changed from ont::execute to ont::play for asma
     (meta-data :origin boudreaux :entry-date 20060424 :change-date 20111004 :comments asma)
     (LF-PARENT ONT::play)
     (templ cause-effect-xp-templ)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     )
    )
   )
  (W::download
   (SENSES
    ((EXAMPLE "download all of the images from my camera")
     (LF-PARENT ONT::acquire)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-SOURCE-templ (xp (% W::PP (W::ptype (? pt W::at W::from)))))
     )
    ((EXAMPLE "download the images")
     (LF-PARENT ONT::acquire)
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     )
    )
   )
  (W::upload
   (SENSES
    ((EXAMPLE "upload an image to hab")
     (meta-data :origin boudreaux :entry-date 20050824 :change-date 20090501 :comments nil)
     (LF-PARENT ONT::submit)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::time-span F::atomic))
     )
    )
   )
  (W::patent
   (SENSES
    ((EXAMPLE "he patented the invention")
     (meta-data :origin mobius :entry-date 20080729 :change-date 20090501 :comments nil)
     (LF-PARENT ONT::reserve)
     (SEM (F::Cause F::agentive))
     )
    )
   )
  (W::activate
   (SENSES
    ((EXAMPLE "activate all alerting") 
     (LF-PARENT ont::start)
     (templ cause-effect-xp-templ)
     (SEM (F::Aspect F::bounded) (F::time-span F::atomic))
     )
    )
   )
   (W::deactivate
   (SENSES
     ((EXAMPLE "deactivate all alerting") 
     (LF-PARENT ont::stop)
     (templ cause-effect-xp-templ)
     (SEM (F::Aspect F::bounded) (F::time-span F::atomic))
     )
      ((EXAMPLE "deactivate the alarm")
       (LF-PARENT ont::stop)
      (templ cause-affected-xp-templ)
      (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::time-span F::atomic))
      )
    )
   )
  (W::enable
   (SENSES
    ((EXAMPLE "enable all alerting")
     (LF-PARENT ont::enable)
     (templ cause-effect-xp-templ)
     (SEM (F::Aspect F::bounded) (F::time-span F::atomic))
     )
    ((EXAMPLE "enable the alarm [to sound]") 
     (LF-PARENT ont::enable)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)
     (SEM (F::Aspect F::bounded) (F::time-span F::atomic))
     )
    )
   )
  (W::disable
   (SENSES
    ((EXAMPLE "disable all alerting")
     (LF-PARENT ont::disable)
     (templ cause-effect-xp-templ)
     (SEM (F::Aspect F::bounded) (F::time-span F::atomic))
     )
     ((EXAMPLE "disable the alarm")
      (LF-PARENT ont::disable)
      (templ cause-affected-xp-templ)
      (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::time-span F::atomic))
      )
     ((meta-data :origin "wordnet-3.0" :entry-date 20090603 :change-date nil :comments nil)
     (LF-PARENT ONT::disable)
     (TEMPL CAUSE-AFFECTED-EFFECT-TEMPL  (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "he disabled the alarm from sounding")
     )
    )
   )
  (W::associate
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("amalgamate-22.2-2"))
     (EXAMPLE "associate this voice note with site three")
     (LF-PARENT ONT::ASSOCIATE)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-CO-THEME-TEMPL (xp (% W::pp (W::ptype W::with))))
     )
    )
   )
  
  (W::SET
   (SENSES
    ((lf-parent ont::change-device-state)
     (TEMPL AGENT-THEME-RESULT-TEMPL (xp (% w::pp (w::ptype w::to))))
     (Example "Set the knob [to VDC]")
     (meta-data :origin bee :entry-date 20040412 :change-date nil :comments test-s)    
     )    
    ))

  (W::GEAR
   (SENSES
    ((EXAMPLE "this projector is specifically geared for home theater")
     (LF-PARENT ONT::ACCOMMODATE)
     (TEMPL agent-THEME-co-theme-TEMPL (xp (% W::pp (W::ptype (? pt W::for w::to)))))
     (meta-data :origin calo :entry-date 20050527 :change-date nil :comments projector-purchasing)
     )
    ))

  (W::ADAPT
   (SENSES
    ((EXAMPLE "this projector is specifically adapted for home theater")
     ;;(LF-PARENT ONT::ACCOMMODATE)
     (lf-parent ont::adapt) ;; 20120524 GUM change new parent
     (TEMPL agent-THEME-co-theme-TEMPL (xp (% W::pp (W::ptype (? pt W::for w::to)))))
     (meta-data :origin calo :entry-date 20050527 :change-date nil :comments projector-purchasing)
     )
    ))
  
  (W::accommodate
    (wordfeats (W::morph (:forms (-vb) :nom w::accommodation)))
   (SENSES
    ((EXAMPLE "this room accommodates six")
     ;;(LF-PARENT ONT::ACCOMMODATE)
     (lf-parent ont::accommodate-allow) ;; 20120524 GUM change new parent
     (TEMPL agent-THEME-XP-TEMPL)
     (meta-data :origin gloss-training :entry-date 20100223 :change-date nil :comments nil)
     )
    ))
  (W::tailor
    (wordfeats (W::morph (:forms (-vb) :past W::tailored :ing W::tailoring)))
   (SENSES
    ((EXAMPLE "this message is custom-tailored for you")
     (LF-PARENT ONT::ACCOMMODATE)
     (TEMPL agent-THEME-co-theme-TEMPL (xp (% W::pp (W::ptype (? pt W::for w::to)))))
     (meta-data :origin task-learning :entry-date 200500909 :change-date nil :comments nil)
     )
    ))
  (W::halt
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("stop-55.4") :wn ("halt%2:38:01" "halt%2:38:05" "halt%2:41:00"))
     (LF-PARENT ONT::stop)
     (example "he halted the truck")
     (TEMPL cause-affected-xp-templ) ; like terminate
      )
    ((EXAMPLE "he halted the proceedings")
     (LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-xp-TEMPL)
     )
    ((EXAMPLE "the truck halted")
     (LF-PARENT ONT::STOP)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL affected-TEMPL)
     )
    )
   )
  (W::egress
   (SENSES
    ((EXAMPLE "I am starting to egress")
     (LF-PARENT ONT::departing)
     (meta-data :origin boudreaux :entry-date 20060414 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::ingress
   (SENSES
    ((EXAMPLE "I am starting to ingress")
     (LF-PARENT ONT::entering)
     (meta-data :origin boudreaux :entry-date 20060414 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-TEMPL)
     )
    )
   )
  (W::penetrate
   (SENSES
    ((EXAMPLE "the vehicle penetrated the enclosure")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Penetrate)
     (LF-PARENT ONT::entering)
     (templ theme-goal-xp-templ)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::enter
   (wordfeats (W::morph (:forms (-vb) :past W::entered :ing W::entering)))
   (SENSES
    ((EXAMPLE "the vehicle entered the enclosure")
     (meta-data :origin calo-ontology :entry-date 20051213 :change-date nil :comments Penetrate)
     (LF-PARENT ONT::entering)
     (templ theme-goal-xp-templ)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((EXAMPLE "enter the title in the textbox")
     (meta-data :origin calo :entry-date 20050621 :change-date nil :comments plow)
     (LF-PARENT ONT::put)
     (templ agent-theme-xp-templ)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
     ((EXAMPLE "enter!")
     (meta-data :origin gloss-training :entry-date 20100301 :change-date nil :comments nil)
     (LF-PARENT ONT::entering)
     (templ agent-templ)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
     ((EXAMPLE "it entered")
     (meta-data :origin gloss-training :entry-date 20100301 :change-date nil :comments nil)
     (LF-PARENT ONT::entering)
     (templ theme-templ)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::reenter
   (SENSES
    ((EXAMPLE "I am reentering the canyon")
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     (LF-PARENT ONT::entering)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL theme-goal-xp-TEMPL)
     )
    ((EXAMPLE "reenter the title in the textbox")
     (meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
     (LF-PARENT ONT::put)
     (templ agent-theme-xp-templ)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::access
   (SENSES
    ((EXAMPLE "He couldn't access the data")
     (meta-data :origin calo :entry-date 20040915 :change-date nil :comments caloy2)
     (LF-PARENT ONT::acquire)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::wear
   (wordfeats (W::morph (:forms (-vb) :past W::wore)))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090401 :change-date 20090910 :comments nil)
     (EXAMPLE "he was wearing a hat")
     (LF-PARENT ONT::wear)
     (TEMPL AFFECTED-THEME-XP-TEMPL)
     )
    )
   )
    ((W::put (w::on))
   (wordfeats (W::morph (:forms (-vb) :past W::put)))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090401 :change-date nil :comments nil)
     (EXAMPLE "he put on a hat")
     (LF-PARENT ONT::put-on)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::don
   (wordfeats (W::morph (:forms (-vb) :past W::donned :ing W::donning)))
   (SENSES
    ((meta-data :origin boudreaux :entry-date 20060414 :change-date nil :comments nil :vn ("simple_dressing-41.3.1") :wn ("don%2:29:00"))
     (EXAMPLE "I am starting to don the suit")
     (LF-PARENT ONT::put-on)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
   (W::dress
   (SENSES
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments nil)
     (EXAMPLE "he dressed quickly")
     (LF-PARENT ONT::PUT-ON)
     (templ agent-templ)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments nil)
     (EXAMPLE "he dressed the child")
     (LF-PARENT ONT::PUT-ON)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
   ((W::get w::dressed)
       (wordfeats (W::morph (:forms (-vb) :past w::got :ing w::getting)))
   (SENSES
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments nil)
     (EXAMPLE "he got dressed quickly")
     (LF-PARENT ONT::PUT-ON)
     (templ agent-templ)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments nil)
     (EXAMPLE "he got dressed the child")
     (LF-PARENT ONT::PUT-ON)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::stow
   (SENSES
    ((EXAMPLE "I am starting to stow the equipment")
     (LF-PARENT ONT::PUT-AWAY)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::cache
   (wordfeats (W::morph (:forms (-vb) :nom w::cache)))
   (SENSES
    ((EXAMPLE "cache the webpage")
     (meta-data :origin task-learning :entry-date 20050825 :change-date nil :comments nil)
     (LF-PARENT ONT::retain)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::archive
     (wordfeats (W::morph (:forms (-vb) :nom w::archive)))
   (SENSES
    ((EXAMPLE "archive a calendar")
     (meta-data :origin task-learning :entry-date 20050816 :change-date nil :comments nil)
     (LF-PARENT ONT::archive)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::compress
     (wordfeats (W::morph (:forms (-vb) :nom w::compression)))
   (SENSES
    ((EXAMPLE "compress the files")
     (meta-data :origin task-learning :entry-date 20050823 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::decrease)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::survey
   (wordfeats (W::morph (:forms (-vb) :nom w::survey)))
   (SENSES
    ((EXAMPLE "I want amigo to start surveying this area")
     (LF-PARENT ONT::physical-scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-THEME-XP-TEMPL)
     (meta-data :origin lou :entry-date 20031026 :vn ("investigate-35.4") :wn ("survey%2:31:00" "survey%2:39:00" "survey%2:39:13"))
     )
    )
   )
  (W::examine
   (wordfeats (W::morph (:forms (-vb) :nom w::examination)))
   (SENSES
    ((EXAMPLE "I want amigo to start examining this area")
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL)
     (meta-data :origin lou :entry-date 20031105 :vn ("investigate-35.4") :wn ("examine%2:31:00" "examine%2:32:01" "examine%2:39:00"))
     )
    )
   )
   (W::search
    (wordfeats (W::morph (:forms (-vb) :nom w::search)))
   (SENSES
    ((EXAMPLE "search the lane")
     (LF-PARENT ONT::physical-scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-THEME-XP-TEMPL)
     (meta-data :origin lou :entry-date 20040311 :change-date nil :comments lou-sent-entry :vn ("search-35.2") :wn ("search%2:35:00" "search%2:35:01" "search%2:39:00"))
     )
    )
   )
   (W::inspect
     (wordfeats (W::morph (:forms (-vb) :nom w::inspection)))
   (SENSES
    ((EXAMPLE "inspect an object")
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL)
     (meta-data :origin lou :entry-date 20040311 :change-date nil :comments lou-sent-entry :vn ("investigate-35.4") :wn ("inspect%2:38:00" "inspect%2:39:00"))
     )
    )
   )
  ((W::check (W::out))
   (SENSES
    ((EXAMPLE "I want amigo to check out this area")
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL)
     (meta-data :origin lou :entry-date 20031106)
     )
    )
   )
  ((W::check (W::on))
   (SENSES
    ((EXAMPLE "check on the situation")
     (LF-PARENT ONT::scrutiny)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL cognizer-THEME-XP-TEMPL)
     (meta-data :origin calo :entry-date 20040915 :change-date nil :comments caloy2)
     )
    )
   )
  ))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Defined by Myrosia for beetle
;;

(define-words :pos W::V 
  :templ agent-theme-xp-templ
  :words (
	  (w::open
	   (senses
	    ((LF-parent ont::open)
	     (example "open the door")
	     )
	    ((lf-parent ont::open)
	     (templ theme-templ)
	     (example "after the piston moves downward the valve opens")
	     (meta-data :origin mobius :entry-date 20080702 :change-date 20091008 :comments nil)
	     )
	    ((LF-parent ont::open)
	     (example "a damaged bulb opens a path")
	     (meta-data :origin beetle2 :entry-date 20070617 :change-date 20091008 :comments pilot2)
	     (templ instrument-theme-xp-templ)
	     )	    
	    ))
	  (w::reopen
	   (senses
	    ((LF-parent ont::open)
	    (EXAMPLE "reopen the document")
	    (meta-data :origin task-learning :entry-date 20050826 :change-date 20091008 :comments nil))
	    ))
	  (w::close
	   (senses
	    ((LF-parent ont::close)
	     (example "close the door")
	     (templ agent-theme-xp-templ)
	     )
	    ((lf-parent ont::close)
	     (templ theme-templ)
	     (example "after the piston moves upward the valve closes")
	     (meta-data :origin mobius :entry-date 20080702 :change-date 20091008 :comments engine-text01)
	     )
	    ((LF-parent ont::close)
	     (example "the switch closes/completes the path")
	     (meta-data :origin beetle2 :entry-date 20070617 :change-date 20091008 :comments pilot2)
	     (templ instrument-theme-xp-templ))
	    ))
	  (w::energize
	   (senses
	    ((LF-parent ont::change-device-state))
	    ((lf-parent ONT::evoke-excitement)
	     (templ cause-experiencer-xp-templ)
	     (syntax (w::resultative +))
	     (example "the film energized him")
	     (meta-data :origin cardiac :entry-date 20080508 :change-date 20090512 :comments LM-vocab)
	     )
	    ))
	  (w::deenergize
	   (senses
	    ((LF-parent ont::change-device-state))
	    ((LF-parent ont::change-device-state) 
	     (templ agent-templ)
	     (Example "Intransitive usage: how do I deenergize "))
	    ))
	  (w::de-energize
	   (senses
	    ((LF-parent ont::change-device-state) (lf-form w::deenergize))
	    ((LF-parent ont::change-device-state) 
	     (templ agent-templ)
	     (Example "Intransitive usage: how do I deenergize "))
	    ))
	  (w::de-energise
	   (senses
	    ((LF-parent ont::change-device-state) (lf-form w::deenergize))
	    ((LF-parent ont::change-device-state) 
	     (templ agent-templ)
	     (Example "Intransitive usage: how do I deenergize "))
	    ))
	  (w::deenergise
	   (senses
	    ((LF-parent ont::change-device-state) (lf-form w::deenergize))
	    ((LF-parent ont::change-device-state) 
	     (templ agent-templ)
	     (Example "Intransitive usage: how do I deenergize "))
	    ))
	  
	  (W::disconnect
	   (SENSES
	    ((LF-PARENT ONT::UNATTACH)
	     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
	     (TEMPL AGENT-THEME-CO-THEME-OPTIONAL-TEMPL (xp (% W::pp (W::ptype W::from))))
	     )
	    ))
	  (w::measure
	   (senses
	    ((lf-parent ont::register)
	     (templ agent-templ)
	     (example "Slightly strange, but in the bee lexicon: You measured yesterday")
	     (preference 0.96)
	     )
	    ((lf-parent ont::register)
	     (templ agent-instrument-XP-templ)
	     (example "You measured with a voltmeter")
	     (preference 0.96)
	     )
	    ((lf-parent ont::register) (templ agent-property-xp-templ))
	    ((lf-parent ont::register) (templ instrument-property-templ))
	    ))
	  (w::observe
	   (senses
	    ((lf-parent ont::active-perception) (templ experiencer-theme-xp-templ))
	    ))
	  (w::mean
	   (senses 
	    ((lf-parent ont::correlation)
	     (templ theme-co-theme-xp-templ)
	     (example "an alarm means trobule")
	     )	    
	    ((lf-parent ont::correlation) 
	     (templ theme-co-theme-xp-templ (xp (% w::cp (w::ctype w::s-that))))
	     (example "the exmpalation means that ...")
	     )	    	    
	    )
	   )
	  (w::signify
	   (wordfeats (W::morph (:forms (-vb) :nom w::significance)))
	   (senses 
	    ((lf-parent ont::correlation) 
	     (templ theme-co-theme-xp-templ)
	     (example "the evidence signifies trobule")
	     (meta-data :origin lam :entry-date 20050422 :change-date 20090604 :comments lam-initial)
	     )	    
	    ((lf-parent ont::correlation)
	     (templ theme-co-theme-xp-templ (xp (% w::cp (w::ctype w::s-that))))
	     (meta-data :origin lam :entry-date 20050422 :change-date 20090604 :comments lam-initial)
	     (example "the exmpalation signifies that ...")
	     )	    	    
	    )
	   )

	  (w::connect
	   (senses
	    ((lf-parent ont::attach)
	     (meta-data :origin bee :entry-date 20040407 :change-date nil :comments test-s40) 
	     (example "Connect the device - the intransitive usage found in bee data"))
	    ))

	  
	  ))


;; defined by Myrosia for the new experiment
(define-words :pos W::V 
  :templ agent-theme-xp-templ
  :words (	  
	  (w::grasp
	   (senses
	    ((LF-parent ont::come-to-understand)
	     (SEM (F::Aspect F::Stage-level))
	     (TEMPL COGNIZER-THEME-XP-TEMPL)
	     (meta-data :origin bee :entry-date 20040607 :change-date nil :comments portability-expt) 
	     )
	    ((LF-parent ont::body-manipulation)
	     (meta-data :origin bee :entry-date 20040607 :change-date nil :comments portability-expt :vn ("hold-15.1-1")) 
	     )
	    ))
	  (w::agree
	   (wordfeats (W::morph (:forms (-vb) :past W::agreed :ing W::agreeing)))
	   (senses
	    ((LF-parent ont::correlation)
	     (SEM (F::Aspect F::indiv-level))
	     (Example "This evidence agrees with our findings")
	     (TEMPL THEME-CO-THEME-XP-TEMPL (xp (% w::PP (w::ptype w::with))))
	     (meta-data :origin bee :entry-date 20040607 :change-date 20090604 :comments portability-expt) 
	     )	    
	    (;(LF-parent ont::accept)
	     (lf-parent ont::accept-agree) ;; 20120523 GUM change new parent
	     (Example "He agreed [with John]")
	     (TEMPL AGENT-ADDRESSEE-OPTIONAL-TEMPL (xp (% w::PP (w::ptype w::with))))
	     (meta-data :origin bee :entry-date 20040607 :change-date 20090508 :comments portability-expt) 
	     )
	    (;(LF-parent ont::accept)
	     (lf-parent ont::accept-agree) ;; 20120523 GUM change new parent
	     (Example "He agreed with the findings")
	     (TEMPL AGENT-THEME-XP-TEMPL)
	     (meta-data :origin bee :entry-date 20040607 :change-date 20090508 :comments portability-expt) 
	     )
	    ((LF-parent ont::consent)
	     (Example "He agreed to the arrangements")
	     (TEMPL AGENT-THEME-XP-TEMPL(xp (% W::PP (W::ptype W::to))))
	     (meta-data :origin calo-ontology :entry-date 20060125 :change-date nil :comments meeting-understanding) 
	     )
	    ))
	  (w::learn
	   (senses
	    ((lf-parent ont::coming-to-believe)
	     (Example "I learned that voltage is a difference in charge")
	     (templ cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-that))))
	     (meta-data :origin bee :entry-date 20040608 :change-date nil :comments portability-experiment)
	     )
	    ((lf-parent ONT::learn)
	     (Example "I learned French [from my Mother]")
	     (templ cognizer-theme-source-optional-templ)
	     ;; Put it down as education-teaching until a better classification is found
	     (meta-data :origin bee :entry-date 20040608 :change-date nil :comments portability-experiment :wn ("learn%2:31:00"))
	     )	    
	    ((lf-parent ONT::learn)
	     (Example "I learned about difference in potentials [from Mary]")
	     (templ cognizer-theme-source-optional-templ (xp1 (% w::pp (w::ptype w::about))))
	     ;; Put it down as education-teaching until a better classification is found
	     (meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-experiment  :wn ("learn%2:31:00"))
	     )	    
	    ((LF-PARENT ONT::learn)
	     (example "I want to learn how to do it")
	     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::NP (W::sort W::wh-desc))))
	     (meta-data :origin calo :entry-date 20040622 :change-date nil :comments y2  :wn ("learn%2:31:00"))
	     )
	    ))
	
	  (w::act
;; 20120426 :origin jr removing nominalization for gloss to improve control over the key word "act"
;;	   (wordfeats (W::morph (:forms (-vb) :nom W::act)))
	   (senses
;	    ((lf-parent ont::acting)
	      ;; the like modification is a function of the adverbial
;	     (templ cause-predicate-xp-templ (xp (% w::pp (w::ptype (? pt w::like w::as)))))
;	     (example "he acts as a judge")
;	     (meta-data :origin bee :entry-date 20040609 :change-date nil :comments portability-experiment)
;	     )
	    (;(lf-parent ont::acting)
	     (lf-parent ont::act-behave) ;; 20120524 GUM change new parent	    
	     (templ cause-templ)
	     (example "he acted in the school play / as a judge")
	     (preference .98) 
	     )
	    ;; this should be a different sense
;	    ((lf-parent ont::acting)
;	     (templ cause-effect-xp-templ)
;	     (example "he acted the part")
;	     )
	    ((LF-PARENT ONT::EXECUTE)
	     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
	     (TEMPL cause-EFFECT-XP-TEMPL (xp (% w::pp (w::ptype w::on))))
	     (example "he acted on the plan")
	     )
	    ))
	  
	  (w::correspond
	   (senses
	    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("battle-36.4-1"))
	     (LF-PARENT ONT::conversation)
	     (TEMPL agent-about-theme-addressee-optional-templ) ; like communicate
	     (PREFERENCE 0.96)
	     )
	    ((lf-parent ont::in-relation)
	     (templ theme-co-theme-xp-templ (xp (% w::pp (w::ptype (? pptp w::with w::to)))))
	     (Example "this corresponds to ...")
	     (meta-data :origin bee :entry-date 20040609 :change-date 20040805 :comments portability-experiment)
	     )
	    ))
	  (w::design
	   (senses
	    ((lf-parent ont::invention)
	     (example "He designed a device")
	     (templ cognizer-result-templ)
	     (meta-data :origin bee :entry-date 20040609 :change-date nil :comments portability-experiment :vn ("create-26.4-1"))
	     )
	    ))
	  (w::draw
	   (wordfeats (W::morph (:forms (-vb) :past W::drew :pastpart W::drawn)))
	   (senses
	    ((lf-parent ont::describe)
	     (example "Draw a line / he drew a picture [for her]")
	     (templ agent-about-theme-addressee-optional-templ (xp1 (% w::NP)) (xp2 (% w::pp (w::ptype w::for))))	     
	     (meta-data :origin bee :entry-date 20040609 :change-date 20090506 :comments portability-experiment)
	     )
	    ((LF-PARENT ONT::PULL)
	     (SEM (F::cause F::agentive) (F::aspect F::unbounded) (F::time-span F::extended))
	     (TEMPL CAUSE-THEME-XP-TEMPL)
	     )
	    
	    ))

	  (w::drain
	   (senses
	    ((lf-parent ont::take-incrementally)
	     (example "Drain the water from the container")
	     (templ agent-theme-source-optional-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date 20090529 :comments portability-experiment :vn ("clear-10.3-1"))
	     )
	    ((lf-parent ont::take-incrementally)
	     (example "the water drained from the container")
	     (templ theme-source-xp-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date 20090529 :comments portability-experiment)
	     )
	    ))
	  (w::exist
	   (senses
	    ((lf-parent ont::exists)
	     (example "A solution exists")
	     (templ theme-templ )
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment)
	     )	    
	    ))
	  (w::flow
	   (wordfeats (W::morph (:forms (-vb) :nom W::flow)))
	   (senses
	    ((lf-parent ont::fluidic-motion)
	     (example "The water flowed [from the source]")
	     (templ theme-source-optional-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment)
	     )	    
	    ))	
	  (w::halve
	   (wordfeats (W::morph (:forms (-vb) :ing w::halving)))
	   (senses
	    ((lf-parent ont::cut)
	     (example "Halve the bread")
	     (templ agent-theme-xp-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment)
	     )	    
	    ))
	  (w::split
	   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("split%2:30:01" "split%2:35:00"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("split%2:30:01" "split%2:35:00"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break,crack,fracture,rip,shatter,chip,splinter,snap
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("split%2:30:01" "split%2:35:00"))
     (LF-PARENT ont::break-object)
     (TEMPL theme-templ) ; like crash,tear,break
     (PREFERENCE 0.96)
     )
	    ((lf-parent ont::cut)
	     (example "split the table cell")
	     (templ agent-theme-xp-templ)
	     (meta-data :origin task-learning :entry-date 20050819 :change-date nil :comments nil)
	     )	    
	    ((meta-data :origin beetle :entry-date 20080716 :change-date nil :comments nil :vn ("separate-23.1-2"))
	     (LF-PARENT ont::cut)
	     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
	     (TEMPL INSTRUMENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
	     (EXAMPLE "a knife splits the wood")
	     )
	    ))
	  (w::hamper
	   (senses
	    ((lf-parent ont::hindering)
	     (example "the conflict hampers resolution")
	     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment)
	     )
	    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
	     (LF-PARENT ONT::hindering)
	     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
	     (example "It hampers him from doing something")
	     )
	    ))	 
	  (w::impact
	   (senses
	    ((lf-parent ont::objective-influence)
	     ;; The classification as interact is temporary, something better should be done after more evidence accumulates
	     (example "the switch imacts the state of the lightbulb")
	     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment)
	     )
	    ))
	  (w::light
	   (wordfeats (W::morph (:forms (-vb) :past w::lit)))
	   (senses
	    ((lf-parent ont::change-device-state)
	     (example "light the lamp")
	     (templ agent-theme-xp-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment)
	     )
	    ((lf-parent ont::change-device-state)
	     (example "In which of the following diagrams will the bulb light")
	     (templ theme-templ)
	     (meta-data :origin bee :entry-date 20070813 :change-date nil :comments beetle-pilot)
	     ;; this is slightly odd, so lower the preference
	     (preference 0.95)
	     )	    
	    ))
	  ((w::light (w::up))
	   (wordfeats (W::morph (:forms (-vb) :past w::lit)))
	   (senses
	    ((lf-parent ont::change-device-state)
	     (example "The lamp lights up")
	     (templ theme-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-followup)
	     )	   
	    ))
	  (w::produce
	   (wordfeats (W::morph (:forms (-vb) :nom W::production)))
	   (senses
	    (;;(lf-parent ont::cause-effect)
	     (lf-parent ont::cause-produce-reproduce) ;;  20120524 GUM change new parent
	     (example "produce the effect")
	     (templ cause-effect-xp-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment)
	     )	   	   
	    ((lf-parent ont::create)
	     (example "produce a circuit")
	     (templ agent-theme-xp-templ)
	     (meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-experiment)
	     )	   	   
	    ))
	  (w::reproduce
	   (wordfeats (W::morph (:forms (-vb) :nom W::reproduction)))
	   (senses
	    (;;(lf-parent ont::cause-effect)
	     (lf-parent ont::cause-produce-reproduce) ;;  20120524 GUM change new parent
	     (example "reproduce the effect")
	     (templ cause-effect-xp-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment)
	     )	   	   
	    ((lf-parent ont::create)
	     (example "reproduce a circuit")
	     (templ agent-theme-xp-templ)
	     (meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-experiment)
	     )	   	   
	    ))
	  (w::swap
	   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("exchange-13.6-1-1"))
     (LF-PARENT ONT::replacement)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::for)))) ; like substitute
     (PREFERENCE 0.96)
     )
	    ((lf-parent ont::replacement)
	     (example "swap the lamps")
	     (templ agent-theme-xp-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment)
	     )	   	   
	    ))
	  (w::represent
	   (senses
	    ((lf-parent ont::categorization)
	     (templ agent-theme-xp-templ)
	     (meta-data :origin bee :entry-date 20040614 :change-date nil :comments portability-experiment :vn ("characterize-29.2-1-1"))
	     )	   	   	    
	    ((lf-parent ont::categorization)
	     (example "this diagram represents circuit 5")
	     (templ theme-templ)
	     (meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-followup)
	     )	   	   	    
	    ))
	  (w::share
	   (senses
	    ((lf-parent ont::share)
	     ;; this is the window on the computer screen
	     (templ theme-part-co-theme-optional-templ)
	     (meta-data :origin bee :entry-date 20040615 :change-date nil :comments portability-experiment)
	     )	   	   	   	   
	    ))
	  (w::do
	     (wordfeats (W::morph (:forms (-vb) :past W::did :pastpart W::done :3s W::does)))
	      (senses
	       ((lf-parent ont::objective-influence)
		(example "It did damage to a battery")
		(TEMPL CAUSE-RESULT-AFFECTED-XP-TEMPL) 
		(meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-followup)
		)
	       ))
	  
	  ((w::move w::on)
	   (senses
	    ((LF-PARENT ONT::ACTIVITY-ONGOING)
	     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
	     (example "move on [with the plan/explanation]")
	     (TEMPL AGENT-ACTION-OPTIONAL-TEMPL (xp (% W::pp (W::ptype W::with))))
	     (meta-data :origin bee :entry-date 20040805 :change-date nil :comments portability-followup)
	     )
	    ))	  
  ))

;; defined by Myrosia for lam -- mathematical term words
(define-words :pos W::V 
  :templ cognizer-theme-xp-templ
  :words (
	  (w::differentiate
	   (senses ((lf-parent ont::function-calculation)
		    (example "differentiate sin(x)")
		    (meta-data :origin lam :entry-date 20050420 :change-date nil :comments lam-initial)
		    )
		   ))
	  (w::factorise
	   (senses ((lf-parent ont::function-calculation)
		    (example "factorise the polynomial")
		    (meta-data :origin lam :entry-date 20050420 :change-date nil :comments lam-initial)
		    )
		   ))
	  (w::cube
	   (senses ((lf-parent ont::function-calculation)
		    (example "3x cubed")
		    (meta-data :origin lam :entry-date 20050425 :change-date nil :comments lam-initial)
		    )
		   ))
	  (w::multiply
	   (senses ((lf-parent ont::calc-multiply)
		    (example "multiply x [by 5]" "multiply x and y")
		    (templ cognizer-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::by))))
		    (meta-data :origin lam :entry-date 20050420 :change-date 20090522 :comments lam-initial)
		    )
		   ((lf-parent ont::calc-multiply)
		    (example "multiply by 5")
		    (templ cognizer-co-theme-xp-templ (xp (% w::pp (w::ptype w::by))))
		    (meta-data :origin lam :entry-date 20050420 :change-date 20090522 :comments lam-initial)
		    )
		   ; james and wdebeaum think this example is bogus
		   ;((lf-parent ont::function-calculation)
		   ; (example "6 multiplies x")
		   ; (templ theme-source-xp-templ (xp (% w::NP)))
		   ; (meta-data :origin lam :entry-date 20050420 :change-date nil :comments lam-initial)
		   ; )
		   ((lf-parent ONT::increase-number)
		    (example "the flies multiplied")
		    (templ theme-templ)
		    (meta-data :origin "wordnet-3.0" :entry-date 20090608 :change-date nil :comments nil)
		    )
		   ))
	  ;; a copy of "realize"
	  (W::realise
	   (SENSES
	    ((LF-PARENT ONT::come-to-understand)
	     (lf-form w::realize)
	     (meta-data :origin lam :entry-date 20050421 :change-date nil :comments lam-initial)
	     (example "I realized that the origional route is no longer available.")
	     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
	     )
	    ((LF-PARENT ONT::come-to-understand) (lf-form w::realize)
	     (meta-data :origin lam :entry-date 20050421 :change-date nil :comments lam-initial)
	     (example "I realize the risks")
	     (TEMPL COGNIZER-THEME-XP-TEMPL)
	     )
	    ))
	  ;; an exceptional form for learned
	  (w::learnt
	   (wordfeats (W::morph (:forms NIL)) (W::vform (? vfrm w::past W::pastpart)))
	   (senses
	    ((lf-parent ont::coming-to-believe)
	     (Example "I learnt that voltage is a difference in charge")
	     (templ cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-that))))
	     (meta-data :origin lam :entry-date 20050421 :change-date nil :comments lam-initial)
	     )
	    ((lf-parent ONT::learn)
	     (Example "I have learnt French [from my Mother]")
	     (templ cognizer-theme-source-optional-templ)
	     ;; Put it down as education-teaching until a better classification is found
	     (meta-data :origin lam :entry-date 20050421 :change-date nil :comments lam-initial  :wn ("learn%2:31:00"))
	     )	    
	    ((lf-parent ONT::learn)
	     (Example "I learnt about difference in potentials [from Mary]")
	     (templ cognizer-theme-source-optional-templ (xp1 (% w::pp (w::ptype w::about))))
	     ;; Put it down as education-teaching until a better classification is found
	     (meta-data :origin lam :entry-date 20050421 :change-date nil :comments lam-initial  :wn ("learn%2:31:00"))
	     )	    
	    ((LF-PARENT ONT::learn)
	     (example "I learnt how to do it")
	     (TEMPL COGNIZER-THEME-XP-TEMPL (xp (% W::NP (W::sort W::wh-desc))))
	     (meta-data :origin lam :entry-date 20050421 :change-date nil :comments lam-initial  :wn ("learn%2:31:00"))
	     )
	    ))
	  (W::remind
	   (SENSES
	    ((LF-PARENT ONT::REPEAT)
	     (example "remind me [ of the rule ]")
	     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL (xp (% w::PP (w::ptype w::of))))
	     (meta-data :origin lam :entry-date 20050425 :change-date nil :comments lam-initial)
	     )
	    ((LF-PARENT ONT::REPEAT)
	     (example "remind him about the date")
	     (TEMPL AGENT-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL (xp (% w::PP (w::ptype w::about))))
	     (meta-data :origin lam :entry-date 20050425 :change-date nil :comments lam-initial)
	     )	    
	    ((EXAMPLE "remind him that the meeting is tomorrow")
	     (LF-PARENT ONT::REPEAT)
	     (meta-data :origin lam :entry-date 20050425 :change-date nil :comments lam-initial)
	     (TEMPL AGENT-ADDRESSEE-THEME-TEMPL (xp (% W::cp (W::ctype W::s-finite))))
	     )
	    (;;(LF-PARENT ONT::COMMAND)
	     (lf-parent ont::remind) ;;  20120524 GUM change new parent
	     (example "remind him to do it")
	     (meta-data :origin lam :entry-date 20050425 :change-date nil :comments lam-initial)
	     (TEMPL AGENT-addressee-theme-OBJCONTROL-REQ-TEMPL)
	     )
	    ))
	  (w::stick
	   (senses
	    ((LF-PARENT ONT::Compliance)
	     (example "Stick with the given notation")
	     (templ agent-theme-xp-templ (xp (% w::PP (w::ptype w::with))))
	     (meta-data :origin lam :entry-date 20050425 :change-date nil :comments lam-initial)
	     )
	    ))
	  (W::apply
	   (SENSES
	    ((LF-PARENT ONT::USE) ;; based on WN sense 7-8
	     (example "apply the rule [to this example]")
	     (SEM (F::ASPECT F::DYNAMIC) (F::cause f::agentive))
	     (meta-data :origin lam :entry-date 20050425 :change-date nil :comments lam-initial)
	     (templ agent-theme-co-theme-optional-templ  (xp (% W::PP (w::ptype w::to))))
	     )
	    ((EXAMPLE "apply for funding")
	     ;(LF-PARENT ONT::REQUEST)
	     (lf-parent ont::appeal-apply-demand) ;; 20120523 GUM change new parent
	     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
	     (templ agent-theme-xp-templ (xp (% W::pp (W::ptype W::for))))
	     )
	    ))
	  (W::reapply
	   (SENSES
	    ((LF-PARENT ONT::USE)
	     (example "reapply the rule [to this example]")
	     (SEM (F::ASPECT F::DYNAMIC) (F::cause f::agentive))
	     (meta-data :origin task-learning :entry-date 20050831 :change-date nil :comments nil)
	     (templ agent-theme-co-theme-optional-templ  (xp (% W::PP (w::ptype w::to))))
	     )
	    ))
	  ))

;; verbs for foodkb
(define-words :pos W::V 
  :templ agent-theme-xp-templ
  :words (
(w::sweeten
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::increase)
   (example "sweeten the cream")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::thin
 (senses
  ((meta-data :origin cardiac :entry-date 20090417 :change-date nil :comments nil)
   (LF-PARENT ONT::adjust)
   (example "thin the sauce")
   (templ cause-theme-xp-templ)
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
    )
  ((meta-data :origin cardiac :entry-date 20090417 :change-date nil :comments nil)
   (LF-PARENT ONT::adjust)
   (example "his hair thinned")
   (templ theme-templ)
   )
  )
 )
(w::thicken
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::increase)
   (example "thicken the sauce")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
    )
  ((meta-data :origin step :entry-date 20080626 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::increase)
   (example "it thickened with flour")
   (templ theme-attribute-xp-optional-templ  (xp (% W::PP (W::ptype (? pt W::with)))))
   )
  )
 )
(w::chill
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::cool)
   (example "chill the juice" "the wind chilled him")
   (syntax (w::resultative +))
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
    )
  )
 )
(w::fry
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "fry an egg")
   (syntax (w::resultative +))
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )
(w::toast
 (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("toast%2:34:00"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     (PREFERENCE 0.96)
     )
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "toast the bread")
   (syntax (w::resultative +))
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )
(w::boil
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
 ;  (LF-PARENT ONT::cooking)
   (lf-parent ont::boil)
   (syntax (w::resultative +))
   (example "boil an egg")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
   ((meta-data :origin make-tea :entry-date 20100930 :change-date nil :comments nil)
 ;  (LF-PARENT ONT::cooking)
    (lf-parent ont::boil)
   (example "the water boiled")
   (templ theme-templ)
   )
  )
 )
(w::ice
 (senses
  ((meta-data :origin foodkb :entry-date 20090129 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (syntax (w::resultative +))
   (example "he iced the cake")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )
(w::frost
 (senses
  ((meta-data :origin foodkb :entry-date 20090129 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (syntax (w::resultative +))
   (example "he frosted the cake")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  )
 )
(w::bake
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "bake the cake")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  ((meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "I like to bake")
   (templ agent-templ)
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded))
   )
  ((meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "the bread baked in the oven")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded))
   (templ theme-templ)
   )
  )
 )
(w::blanch
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "blanch the almonds")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-XP-TEMPL)
   )
  ((meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "the almonds blanched")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded))
   (templ theme-templ)
   )
  )
 )
(w::bread 
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "bread the chicken before you fry it")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::preheat
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "preheat the oven")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::braise
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "braise the chicken")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::glaze
 (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24") :wn ("glaze%2:35:00" "glaze%2:36:00"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like lacquer,paint,varnish,tint,spraypaint,dye,color,stain,shellac,distemper,enamel
     (PREFERENCE 0.96)
     )
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "glaze the chicken")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::simmer
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "simmer the chicken")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
   ((meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "the chicken simmered")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded))
   (templ theme-templ)
   )
  )
 )
(w::stew
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "stew the chicken")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  
  )
 )
(w::cook
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "cook the chicken")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::extended))
   )
  ((meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "I like to cook")
   (templ agent-templ)
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded))
   )
  ((meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "the turkey cooked all afternoon")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded))
   (templ theme-templ)
   )
  )
 )

(w::roast
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "roast the chicken")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
   ((meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "the chicken roasted in the oven")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded))
   (templ theme-templ)
   )
  )
 )
(w::scallop
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "scallop the potatoes")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::steam
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "steam the vegetables")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
   ((meta-data :origin cardiac :entry-date 20081005 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "the vegetables steamed")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded))
   (templ theme-templ)
   )
  )
 )
(w::saute
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "saute the vegetables")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::season
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "season the chicken")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::grate
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cut)
   (example "grate the carrots")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::slice
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cut)
   (example "slice the carrots")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::chop
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cut)
   (example "chop the carrots")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::crop
 (senses
  ((meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
   (LF-PARENT ONT::cut)
   (example "crop the image")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::clip
 (senses
  ((meta-data :origin task-learning :entry-date 20050826 :change-date nil :comments nil)
   (LF-PARENT ONT::cut)
   (example "clip the polygon")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::julienne
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cut)
   (example "julienne the carrots")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::bone
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "bone the chicken")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::crush
 (senses
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("crush%2:37:00"))
     (LF-PARENT ONT::evoke-tiredness)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("crush%2:30:00" "crush%2:30:08" "crush%2:35:00" "crush%2:35:01"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("crush%2:30:00" "crush%2:30:08" "crush%2:35:00" "crush%2:35:01"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break,crack,fracture,rip,shatter,chip,splinter,snap
     (PREFERENCE 0.96)
     )
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil :vn ("carve-21.2-1"))
   (LF-PARENT ONT::crush)
   (example "crush the pineapple")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::smash
 (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("smash%2:30:00" "smash%2:35:08"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("smash%2:30:00" "smash%2:35:08"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break,crack,fracture,rip,shatter,chip,splinter,snap
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("smash%2:30:00" "smash%2:35:08"))
     (LF-PARENT ont::break-object)
     (example "it smashed against the window")
     (TEMPL theme-templ) ; like crash,tear,break
     (PREFERENCE 0.96)
     )
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::crush)
   (example "smash the potatoes")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::mash
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil :vn ("carve-21.2-1"))
   (LF-PARENT ONT::crush)
   (example "mash the potatoes")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::debone
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "debone the chicken")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::seed
 (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     (PREFERENCE 0.96)
     )
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::cooking)
   (example "seed the tomatoes")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::mix
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil :vn ("mix-22.1-1-1"))
   (LF-PARENT ONT::combine-objects)
   (example "mix the ingredients")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
((w::mix (w::in))
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::combine-objects)
   (example "mix in the remaining ingredients")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )

((w::fold (w::in))
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::combine-objects)
   (example "fold in the remaining ingredients")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::bleach
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date nil :comments nil)
   (LF-PARENT ONT::coloring)
   (example "the sun bleached the bones")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::heat
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::heat)
   (example "heat the water")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::cool
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::cool)
   (example "cool the sauce")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::trim
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date 20090601 :comments nil)
   (LF-PARENT ONT::remove-from)
   (example "trim the fat [from the meat]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-THEME-SOURCE-OPTIONAL-TEMPL)
   )
  ((meta-data :origin "wordnet-3.0" :entry-date 20090601 :change-date nil :comments nil)
   (LF-PARENT ONT::remove-from)
   (example "trim the tree [of branches]")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   (TEMPL AGENT-SOURCE-THEME-OPTIONAL-TEMPL)
   )
  )
 )
(w::pasteurize
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::nature-change)
   (example "pasturize the milk")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::pasturize ;; common misspelling
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::nature-change)
   (example "pasturize the milk")
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )
(w::ferment
 (senses
  ((meta-data :origin foodkb :entry-date 20050811 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::life-transformation)
   (example "ferment the cider")
   (templ cause-theme-xp-templ)
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
   (LF-PARENT ONT::life-transformation)
   (example "the cider fermented")
   (templ theme-templ)
   (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
   )
  )
 )

))

(define-words :pos W::V 
  :words (
	  (w::xxx
	   (senses
	    ((meta-data :origin bolt :entry-date 20051221 :change-date 20120406 :comments underspecified-verbs)
	     (LF-PARENT ONT::verb)
	     (example "he xxxed the x")
	     (templ arg0-arg1-xp-templ)
	     )	   
	   ((meta-data :origin bolt :entry-date 20120406 :comments underspecified-verbs)
	     (LF-PARENT ONT::verb)
	     (example "he xxxed")
	     (templ arg0-templ)
	     )
	    )
	   )
	  )
  )

(define-words :pos W::V :templ agent-theme-xp-templ
  :words (
  (W::abash
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("abash%2:37:00"))
     (LF-PARENT ONT::evoke-shame)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::abhor
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("admire-31.2") :wn ("abhor%2:37:00"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090508 :comments nil :vn ("admire-31.2") :wn ("abhor%2:37:00"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::absolve
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090508 :comments nil :vn ("cheat-10.6-1-1"))
     (LF-PARENT ONT::pardon)
     (TEMPL AGENT-AFFECTED-THEME-OPTIONAL-TEMPL (xp (% w::pp (w::ptype w::of)))) ; like pardon but different template
     )
    )
   )
  (W::abut
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("contiguous_location-47.8-1"))
     (LF-PARENT ONT::intersect)
     (TEMPL theme-co-theme-xp-templ (xp (% w::pp (w::ptype w::with)))) ; like intersect
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("contiguous_location-47.8-1"))
     (LF-PARENT ONT::intersect)
     (TEMPL theme-co-theme-xp-templ) ; like cross,hit,meet
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("contiguous_location-47.8-1"))
     (LF-PARENT ONT::intersect)
     (TEMPL theme-plural-templ) ; like hit,meet
     )
    )
   )
  (W::acquit
   (wordfeats (W::morph (:forms (-vb) :past W::acquitted :ing W::acquitting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090508 :comments nil :vn ("cheat-10.6-1-1"))
     (LF-PARENT ONT::pardon)
     (TEMPL AGENT-AFFECTED-THEME-OPTIONAL-TEMPL (xp (% w::pp (w::ptype w::of)))) ; like pardon but different template
     )
    )
   )
  (W::adjoin
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("contiguous_location-47.8-1"))
     (LF-PARENT ONT::intersect)
     (TEMPL theme-co-theme-xp-templ (xp (% w::pp (w::ptype w::with)))) ; like intersect
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("contiguous_location-47.8-1"))
     (LF-PARENT ONT::intersect)
     (TEMPL theme-co-theme-xp-templ) ; like cross,hit,meet
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("contiguous_location-47.8-1"))
     (LF-PARENT ONT::intersect)
     (TEMPL theme-plural-templ) ; like hit,meet
     )
    )
   )
  (W::administer
   (wordfeats (W::morph (:forms (-vb) :past W::administered :ing W::administering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("contribute-13.2-1-1"))
     (LF-PARENT ONT::assign)
     (example "administer the medication to the patient")
     (TEMPL agent-theme-to-recipient-optional-templ) ; like surrender
     )
    )
   )
  (W::admonish
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::inform)
     (example "he admonished him about his bad behavior")
     (TEMPL agent-addressee-theme-optional-templ) ; like warn
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::command)
     (TEMPL agent-addressee-theme-objcontrol-req-templ (xp (% w::cp (w::ctype w::s-to)))) ; like advise,instruct
     )
    )
   )
  (W::affiliate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amalgamate-22.2-2"))
     (LF-PARENT ONT::associate)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::with)))) ; like associate
     )
    )
   )
  (W::afflict
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("afflict%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::affront
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090520 :comments nil :vn ("amuse-31.1") :wn ("affront%2:32:00"))
     (LF-PARENT ONT::evoke-offense)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::aggravate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("aggravate%2:37:00"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::agitate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("agitate%2:37:00"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-pain)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::agonize
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("agonize%2:37:00" "agonize%2:37:01"))
     (LF-PARENT ONT::worrying)
     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype (? p w::over w::about))))) ; like mind,worry
     )
    )
   )
  (W::alarm
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("alarm%2:37:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::alienate
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("alienate%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::amaze
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("amaze%2:31:00" "amaze%2:31:01"))
     (LF-PARENT ONT::evoke-surprise)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (PREFERENCE 0.96) ;conflict with adj amazing
     )
    )
   )
  (W::amble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("amble%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::amuse
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("amuse%2:32:00" "amuse%2:41:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::anger
   (wordfeats (W::morph (:forms (-vb) :past W::angered :ing W::angering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("anger%2:37:00" "anger%2:37:01"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::annihilate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("annihilate%2:30:00"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::anoint
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::ritual-classification)
     (TEMPL cognizer-theme-bare-predicate-optional-templ) ; like name
     )
    )
   )
  (W::antagonize
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("antagonize%2:41:00"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::appall
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("appall%2:37:00" "appall%2:37:10"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::appease
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("appease%2:37:00"))
     (LF-PARENT ONT::subduing)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::arouse
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("arouse%2:29:00" "arouse%2:37:01"))
     (LF-PARENT ont::provoke)
     (TEMPL cause-effect-affected-optional-templ (xp (% w::pp (w::ptype (? pt w::in w::from))))) ; like annoy,bother,concern,hurt
     (example "the proposal aroused anger")
     )
    )
   )
  (W::articulate
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("articulate%2:32:01" "articulate%2:32:02"))
     ;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-to-addressee-optional-templ)  ; like say but needs different template b.c. doesn't participate in alternation
;;     (TEMPL agent-addressee-iobj-theme-templ)
     )
    )
   )
  (W::assuage
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("assuage%2:37:00"))
     (LF-PARENT ONT::subduing)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::astonish
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("astonish%2:31:00"))
     (LF-PARENT ONT::evoke-surprise)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::astound
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("astound%2:31:00"))
     (LF-PARENT ONT::evoke-surprise)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::audit
   (wordfeats (W::morph (:forms (-vb) :past W::audited :ing W::auditing)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assessment-34") :wn ("audit%2:31:01"))
     (LF-PARENT ONT::scrutiny)
     (TEMPL cognizer-theme-xp-templ) ; like analyze,assess
     )
    )
   )
  (W::award
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("future_having-13.3") :wn ("award%2:40:00" "award%2:40:01" "award%2:41:00"))
     (LF-PARENT ONT::giving)
     (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     )
    )
   )
  (W::awe
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("awe%2:37:00"))
     (LF-PARENT ONT::evoke-surprise)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::backpack
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("backpack%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::baffle
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("baffle%2:31:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::baptize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::ritual-classification)
     (TEMPL cognizer-theme-bare-predicate-optional-templ) ; like name
     )
    )
   )
  (W::barbecue
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("barbecue%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::beget
   (wordfeats (W::morph (:forms (-vb) :past W::begot :pastpart W::begotten :ing W::begetting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("engender-27"))
     (LF-PARENT ONT::create)
 ; like create,generate
     )
    )
   )
  (W::beguile
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("beguile%2:37:00" "beguile%2:41:00"))
     (LF-PARENT ONT::evoke-attraction)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::behave
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("masquerade-29.6-1"))
     ;;(LF-PARENT ONT::acting)
     (lf-parent ont::act-behave) ;; 20120524 GUM change new parent
     ;;(TEMPL agent-predicate-xp-templ (xp (% w::pp (w::ptype w::like)))) ; like act
     (templ cause-templ)  ;; the like modification is a function of the adverbial
     )
    )
   )
  (W::bend
   (wordfeats (W::morph (:forms (-vb) :past W::bent :ing W::bending)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("bend%2:38:03"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::sit-lay-stand-bend-flop-lean-perch-plop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like lie
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("bend-45.2") :wn ("?bend%2:38:00" "bend%2:35:00"))
     (LF-PARENT ONT::fold)
 ; like fold
     )
    )
   )
  (W::bequeath
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("future_having-13.3") :wn ("bequeath%2:40:00"))
     (LF-PARENT ONT::future-giving)
     (TEMPL agent-theme-recipient-alternation-templ) ; like owe
     )
    )
   )
  (W::bewilder
   (wordfeats (W::morph (:forms (-vb) :past W::bewildered :ing W::bewildering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("bewilder%2:31:00" "bewilder%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::bewitch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("bewitch%2:32:00" "bewitch%2:37:00"))
     (LF-PARENT ONT::evoke-attraction)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::blab
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("blab%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-to-addressee-optional-templ)  ; like say but needs different template b.c. doesn't participate in alternation
;     (TEMPL agent-addressee-iobj-theme-templ) ; like say
     )
    )
   )
  (W::blend
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("mix-22.1-1-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::with)))) ; like combine
     )
    )
   )
  (W::blister
   (wordfeats (W::morph (:forms (-vb) :past W::blistered :ing W::blistering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("blister%2:30:00"))
     (LF-PARENT ONT::swell)
     (templ cause-theme-xp-templ)
 ; like ferment
     )
   ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
    (LF-PARENT ONT::swell)
    (example "his skin blistered")
    (templ theme-templ)
    (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
    )
    )
   )
  (W::blitz
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("blitz%2:33:00"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::bloom
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("bloom%2:30:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::life-transformation)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::life-transformation)
     (example "the flowers bloomed")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::blossom
   (wordfeats (W::morph (:forms (-vb) :past W::blossomed :ing W::blossoming)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("blossom%2:30:01"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::life-transformation)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::life-transformation)
     (example "the trees blossomed")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::blurt
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("blurt%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-to-addressee-optional-templ)  ; like say but needs different template b.c. doesn't participate in alternation
;     (TEMPL agent-addressee-iobj-theme-templ) ; like say
     )
    )
   )
  (W::boggle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("boggle%2:31:00" "boggle%2:38:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::bolt
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("bolt%2:38:02"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::bond
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::attach)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::to)))) ; like bind
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::attach)
     (TEMPL agent-theme-xp-templ (xp (% w::pp (w::ptype w::to)))) ; like attach
     )
    )
   )
  (W::bore
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("bore%2:37:00"))
     (LF-PARENT ONT::evoke-boredom)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-2"))
     (LF-PARENT ONT::cut)
     (example "the machine bored the metal")
 ; like chop
     )
    )
   )
  (W::bound
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("bound%2:42:00"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("bound%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::bow
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("bow%2:32:00" "bow%2:38:00" "bow%2:38:01"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
  (W::bowl
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("bowl%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::brand
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::naming)
     (TEMPL cognizer-theme-bare-predicate-optional-templ) ; like name
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::naming)
     (TEMPL cognizer-theme-xp-templ) ; like label
     )
    )
   )
  (W::broil
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("broil%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::brown
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("brown%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::bruise
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::dent) ; ; like smash
     )
    )
   )
  (W::bug
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("bug%2:37:00"))
     (LF-PARENT ONT::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::canter
   (wordfeats (W::morph (:forms (-vb) :past W::cantered :ing W::cantering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("canter%2:38:00" "canter%2:38:01" "canter%2:38:03"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::captivate
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("captivate%2:37:00"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::carom
   (wordfeats (W::morph (:forms (-vb) :past W::caromed :ing W::caroming)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("carom%2:35:00" "carom%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::carve
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("build-26.1-1"))
     (LF-PARENT ONT::shape-change) ; like build,make
     (example "he carved the wood into a chair")
     (TEMPL AGENT-THEME-RESULT-TEMPL (xp (% W::PP (W::ptype W::into))))
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-2"))
     (example "he carved the turkey")
     ;;(LF-PARENT ONT::cut) ; like chop
     (lf-parent ont::carve-cut) ;; 20120524 GUM change new parent
     )
    )
   )
  (W::catch
   (wordfeats (W::morph (:forms (-vb) :past W::caught :ing w::catching :nom w::catch)))
   (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date 20090430 :comments nil :vn ("get-13.5.1") :wn ("catch%2:35:00" "catch%2:35:01" "catch%2:35:03"))
     (lf-parent ont::capture)
     (example "he caught the ball")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory -))
     (TEMPL agent-theme-source-optional-templ (xp (% W::PP (W::ptype (? pt W::from)))))
     )
   )
)
  
  (W::catnap
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("snooze-40.4") :wn ("catnap%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like sleep
     )
    )
   )
  (W::caution
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ) ; like warn
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::command)
     (TEMPL agent-addressee-theme-objcontrol-req-templ (xp (% w::cp (w::ctype w::s-to)))) ; like advise,instruct
     )
    )
   )
  (W::cavort
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("cavort%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::cease
   (wordfeats (W::morph (:forms (-vb) :nom W::cessation)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20070323 :comments nil :vn ("begin-55.1-3"))
     (LF-PARENT ONT::stop)
     (example "the party ceased")
     (TEMPL affected-templ) ; like end
     )
    ((meta-data :origin csli-ts :entry-date 20070323 :change-date nil :comments nil)
     (LF-PARENT ONT::stop)
     (example "the managers ceased to work")
     (TEMPL affected-effect-xp-templ (xp (% w::cp (w::ctype w::s-to))))
     )
    ((meta-data :origin csli-ts :entry-date 20070323 :change-date nil :comments nil)
     (LF-PARENT ONT::stop)
     (example "the managers ceased working")
     (TEMPL affected-effect-xp-templ (xp (% w::vp (w::vform w::ing))))
     )
    ((meta-data :origin csli-ts :entry-date 20070323 :change-date nil :comments nil)
     (LF-PARENT ONT::stop)
     (example "cease the process")
     (templ cause-effect-xp-templ)
     )
    )
   )
  (W::cede
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("future_having-13.3") :wn ("cede%2:40:00" "cede%2:40:01"))
     (LF-PARENT ONT::surrender)
     (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     )
    )
   )
  (W::chagrin
   (wordfeats (W::morph (:forms (-vb) :past W::chagrined :ing W::chagrining)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("chagrin%2:37:01"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::charbroil
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  ((W::charcoal w::broil)
      (wordfeats (W::morph (:forms (-vb) :past (W::charcoal w::broiled) :ing( W::charcoal w::broiling) )))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
     (LF-PARENT ONT::cooking) ; like bake,blanch,boil,braise,cook,fry
    )
   )
  )
  (W::charm
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("charm%2:37:00"))
     (LF-PARENT ONT::evoke-attraction)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::charter
   (wordfeats (W::morph (:forms (-vb) :past W::chartered :ing W::chartering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090429 :comments nil :vn ("get-13.5.1") :wn ("charter%2:40:00"))
     (LF-PARENT ONT::lease-hire)
     (TEMPL agent-recipient-theme-templ) ; like reserve
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090429 :comments nil :vn ("get-13.5.1") :wn ("charter%2:40:00"))
     (LF-PARENT ONT::lease-hire)
     (TEMPL agent-theme-for-recipient-optional-templ) ; like reserve,book
     )
    )
   )
  (W::chase
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chase-51.6") :wn ("chase%2:38:00" "chase%2:41:00"))
     (LF-PARENT ONT::follow)
 ; like track
     )
    )
   )
  (W::chatter
   (wordfeats (W::morph (:forms (-vb) :past W::chattered :ing W::chattering :nom w::chatter)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("chatter%2:32:00" "chatter%2:32:01"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-templ) ; like argue,chat
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("chatter%2:32:00" "chatter%2:32:01"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-about-theme-addressee-optional-templ) ; like argue,chat
     )
    )
   )
  (W::cheer
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("cheer%2:32:00" "cheer%2:32:03"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::cherish
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("cherish%2:37:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
    )
   )
  (W::chip
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("chip%2:35:00" "chip%2:35:01" "chip%2:35:03"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("chip%2:35:00" "chip%2:35:01" "chip%2:35:03"))
     (LF-PARENT ont::break-object)
     (TEMPL theme-templ) ; like crash,tear,break
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("break-45.1") :wn ("chip%2:35:00" "chip%2:35:01" "chip%2:35:03"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break
     )
    )
   )
  (W::chitchat
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("chitchat%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-templ) ; like argue,chat
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("chitchat%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-about-theme-addressee-optional-templ) ; like argue,chat
     )
    )
   )
  (W::christen
   (wordfeats (W::morph (:forms (-vb) :past W::christened :ing W::christening)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::ritual-classification)
     (TEMPL cognizer-theme-bare-predicate-optional-templ) ; like name
     )
    )
   )
  (W::cite
    (wordfeats (W::morph (:forms (-vb) :nom w::citation)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("transfer_mesg-37.1"))
     (LF-PARENT ONT::transfer-information)
     (TEMPL agent-addressee-iobj-theme-templ) ; like relay
     )
    )
   )
  (W::quote
    (wordfeats (W::morph (:forms (-vb) :nom w::quote))) ; quotation
   (SENSES
    ((meta-data :origin calo-ontology :entry-date 20060424 :change-date nil :comments nil :vn ("transfer_mesg-37.1"))
     (LF-PARENT ONT::transfer-information)
     (TEMPL agent-addressee-iobj-theme-templ) ; like relay
     )
    )
   )
  (W::claim
    (wordfeats (W::morph (:forms (-vb) :nom w::claim)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("claim%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (example "he claimed his innocence to me")
     (TEMPL agent-theme-to-addressee-templ)
     )
    (;;(LF-parent ont::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (Example "He claimed to know the answer")
     (TEMPL agent-effect-subjcontrol-templ (xp (% W::cp (W::ctype W::s-to))))
     (meta-data :origin "verbnet-1.5-corrected" :entry-date 20060214 :change-date 20090506 :comments nil :vn ("say-37.7") :wn ("claim%2:32:00")    )
     )
    (;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (example "He claims that he knows the answer")
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-to W::s-finite)))))
     (meta-data :origin step :entry-date 20080627 :change-date nil :comments nil :vn ("say-37.7") :wn ("claim%2:32:00"))
     )
    ((LF-PARENT ONT::appropriate)
     (example "He claimed his bags")
     (TEMPL AGENT-THEME-XP-TEMPL)
     (meta-data :origin step :entry-date 20080627 :change-date nil :comments nil :vn ("say-37.7") :wn ("claim%2:32:00"))
     )
    )
   )
  (W::clamber
   (wordfeats (W::morph (:forms (-vb) :past W::clambered :ing W::clambering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("clamber%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::clasp
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("hold-15.1-1"))
     (LF-PARENT ONT::body-manipulation)
 ; like grasp,hold
     )
    )
   )
  (W::clump
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("clump%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::clutch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("hold-15.1-1"))
     (LF-PARENT ONT::body-manipulation)
 ; like grasp,hold
     )
    )
   )
  (W::coast
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("coast%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::coddle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("coddle%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::coin
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("coin%2:36:00" "coin%2:36:01"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::comfort
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("comfort%2:37:01"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::commence
     (SENSES
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
      ;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "he commenced to eat")
     (TEMPL cause-effect-subjcontrol-templ (xp (% w::cp (w::ctype w::s-to))))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
     ;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (example "the managers commenced working")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-subjcontrol-templ (xp (% w::vp (w::vform w::ing))))
     )
    (;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (example "the computers commenced working")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL affected-effect-subjcontrol-templ (xp (% w::vp (w::vform w::ing))))
      )
     ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
     ;;(LF-PARENT ONT::START)
      (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the computers commenced to work")
     (TEMPL affected-effect-subjcontrol-templ (xp (% w::cp (w::ctype w::s-to))))
     )
     (;;(LF-PARENT ONT::START)
      (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "commence the festivities")
     (templ cause-effect-xp-templ)
     )
    (;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL effect-TEMPL)
     (example "the party commenced")
     )
    (;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (meta-data :origin fruit-carts :entry-date 20050331 :change-date nil :comments fruitcarts-11-3)
     (example "commence with the triangle")
     (SEM (F::cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-xp-templ (xp (% W::pp (W::ptype W::with))))
     )
    )
   )
  
  (W::commingle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("mix-22.1-1-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::with)))) ; like combine
     )
    )
   )
  (W::compose
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("compose%2:31:00" "compose%2:36:01" "compose%2:36:03" "compose%2:36:09"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::concatenate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("mix-22.1-2-1"))
     (LF-PARENT ONT::attach)
 ; like connect
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("mix-22.1-2-1"))
     (LF-PARENT ONT::intersect)
     (TEMPL theme-co-theme-xp-templ (xp (% w::pp (w::ptype (? ptype w::to w::with))))) ; like connect
     )
    )
   )
  (W::concede
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("future_having-13.3") :wn ("concede%2:40:00"))
     (LF-PARENT ONT::surrender)
     (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     )
    )
   )
  (W::concoct
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("concoct%2:35:00" "concoct%2:36:00" "concoct%2:36:01"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::confederate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amalgamate-22.2-2"))
     (LF-PARENT ONT::associate)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::with)))) ; like associate
     )
    )
   )
  (W::confer
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("confer%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-templ) ; like argue,chat
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("confer%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-about-theme-addressee-optional-templ) ; like argue,chat
     )
    )
   )
  (W::confess
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("confess-37.10"))
     (LF-PARENT ONT::announce)
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype (? c w::s-that))))) ; like acknowledge
     )
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("confess%2:32:01"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-theme-to-addressee-optional-templ)  ; like say but needs different template b.c. doesn't participate in alternation
;     (TEMPL agent-addressee-iobj-theme-templ) ; like say
     )
    )
   )
  (W::confide
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("confide%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
    ; (TEMPL agent-addressee-iobj-theme-templ) ; like say
     (TEMPL agent-theme-to-addressee-optional-templ)  ; like say but needs different template b.c. doesn't participate in alternation
     )
    )
   )
  (W::confound
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("confound%2:31:02"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::conjecture
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::suppose)
     (TEMPL cognizer-templ) ; like guess
     )
    )
   )
   (W::conjoin
    (SENSES
      ((meta-data :origin "verbnet-1.5-corrected" entry-date 20060214 :change-date nil :comments nil :vn ("amalgamate-22.2-2") )
       (LF-PARENT ONT::combine-objects)
       (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::with)))) ; like associate
       )
     )
    )
  (W::consecrate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::ritual-classification)
     (TEMPL cognizer-theme-xp-templ) ; like label
     )
    )
   )
  (W::console
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("console%2:37:00"))
     (LF-PARENT ONT::affect-experiencer)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::construct
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("construct%2:35:00" "construct%2:36:00"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::content
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("content%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::converse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("converse%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-templ) ; like argue,chat
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("converse%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-about-theme-addressee-optional-templ) ; like argue,chat
     )
    )
   )

  (W::convince
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090602 :change-date nil :comments nil)
     (LF-PARENT ONT::convince)
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL (xp (% W::cp (W::ctype (? ct W::s-finite w::s-to)))))
     (example "convince me that I should stay")
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090602 :change-date nil :comments nil)
     (LF-PARENT ONT::convince)
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL (xp (% W::pp (W::ptype W::of))))
     (example "convince me of its value")
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090602 :change-date nil :comments nil)
     (LF-PARENT ONT::convince)
     (templ agent-addressee-theme-objcontrol-req-templ)
     (example "he convinced me to stay")
     )
    )
   )
  (W::corrode
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("corrode%2:30:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::deteriorate)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::deteriorate)
     (example "the metal corroded")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::counsel
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ) ; like warn
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::command)
     (TEMPL agent-addressee-theme-objcontrol-req-templ (xp (% w::cp (w::ctype w::s-to)))) ; like advise,instruct
     )
    )
   )
  (W::counseled
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past w::pastpart)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ) ; like warn
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::command)
     (TEMPL agent-addressee-theme-objcontrol-req-templ (xp (% w::cp (w::ctype w::s-to)))) ; like advise,instruct
     )
    )
   )

  (W::counseling
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ) ; like warn
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("advise-37.9-1"))
     (LF-PARENT ONT::command)
     (TEMPL agent-addressee-theme-objcontrol-req-templ (xp (% w::cp (w::ctype w::s-to)))) ; like advise,instruct
     )
    )
   )
  (W::covet
   (wordfeats (W::morph (:forms (-vb) :past W::coveted :ing W::coveting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("want-32.1") :wn ("covet%2:37:00"))
     (LF-PARENT ONT::want)
     (TEMPL experiencer-theme-xp-templ) ; like desire
     )

    )
   )
  (W::cow
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("cow%2:37:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::crack
   (wordfeats (W::morph (:forms (-vb) :nom W::crack)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("crack%2:30:00" "crack%2:30:01" "crack%2:30:02" "crack%2:30:05"))
     (LF-PARENT ont::break-object)
 ; like tear
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("crack%2:30:00" "crack%2:30:01" "crack%2:30:02" "crack%2:30:05"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("crack%2:30:00" "crack%2:30:01" "crack%2:30:02" "crack%2:30:05"))
     (LF-PARENT ont::break-object)
     (TEMPL theme-templ) ; like crash,tear,break
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("break-45.1") :wn ("crack%2:30:00" "crack%2:30:01" "crack%2:30:02" "crack%2:30:05"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break
     )
    )
   )
  (W::crave
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("want-32.1") :wn ("crave%2:34:00"))
     (LF-PARENT ONT::want)
     (TEMPL experiencer-theme-xp-templ) ; like desire
     )
    )
   )
  (W::crawl
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("crawl%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::crease
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("bend-45.2") :wn ("crease%2:30:10" "crease%2:35:00" "crease%2:35:01"))
     (LF-PARENT ONT::fold)
 ; like fold
     )
    )
   )
  (W::creep
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("creep%2:38:00" "creep%2:38:04"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::crinkle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("bend-45.2") :wn ("crinkle%2:30:10" "crinkle%2:35:00"))
     (LF-PARENT ONT::fold)
 ; like fold
     )
    )
   )
  (W::crisp
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("crisp%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::crouch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("crouch%2:38:00"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
  (W::crowd
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-theme-to-loc-optional-templ (xp (% w::pp (w::ptype (? t w::into w::in))))) ; like pack
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-goal-theme-templ (xp (% w::pp (w::ptype (? t w::with))))) ; like pack
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-theme-to-loc-templ (xp (% w::pp (w::ptype (? t w::on w::into w::in))))) ; like cram
     )
    )
   )
  (W::crown
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::ritual-classification)
     (TEMPL cognizer-theme-bare-predicate-optional-templ) ; like name
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::ritual-classification)
     (TEMPL cognizer-theme-xp-templ) ; like label
     )
    )
   )
  (W::cruise
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("nonvehicle-51.4.2") :wn ("cruise%2:38:01" "cruise%2:38:03"))
     (LF-PARENT ONT::ride)
 ; like ride
     )
    )
   )
  (W::crumple
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("bend-45.2") :wn ("crumple%2:30:10" "crumple%2:35:00"))
     (LF-PARENT ONT::fold)
 ; like fold
     )
    )
   )
  
    (W::dart
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("dart%2:38:00" "dart%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::dash
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("dash%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::daunt
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("daunt%2:37:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::daze
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("daze%2:39:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::dazzle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("dazzle%2:31:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  
  (W::decay
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("decay%2:30:00" "decay%2:30:02"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::deteriorate)
 ; like ferment
     (syntax (w::resultative +))
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::deteriorate)
     (example "the structure decayed")
     (templ theme-templ)
     (syntax (w::resultative +))
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  
  (W::decimate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("decimate%2:30:00"))
     (LF-PARENT ONT::destroy)
 ; like waste
     (syntax (w::resultative +))
     )
    )
   )
  (W::declare
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("declare%2:32:00" "declare%2:32:01"))
     (LF-PARENT ONT::talk)
      (TEMPL agent-theme-to-addressee-optional-templ)  ; like say but needs different template b.c. doesn't participate in alternation
;     (TEMPL agent-addressee-iobj-theme-templ) ; like say
     )
    )
   )
  (W::deem
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("appoint-29.1-2"))
     (LF-PARENT ONT::cogitation)
     (TEMPL cognizer-theme-xp-templ) ; like consider,rate
     )
    )
   )
  ((W::deep w::fry)
      (wordfeats (W::morph (:forms (-vb) :past (W::deep w::fried) :ing( W::deep w::frying) )))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("deep-fry%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )

; was commented out with this comment: ; this is mostly used as an adjective W::dejected
; reinstated 20100621 because we now derive adjectives from the verb form
  (W::deject
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("deject%2:37:00"))
     (LF-PARENT ONT::evoke-sadness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::delight
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("delight%2:37:00" "delight%2:37:02"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::demolish
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("demolish%2:37:00"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("demolish%2:36:00"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::demonstrate
   (wordfeats (W::morph (:forms (-vb) :nom w::demonstration )))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("indicate-76-1-1"))
     (LF-PARENT ONT::confirm)
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like confirm
     )
    ((EXAMPLE "demonstrate the procedure (to him)")
     (LF-PARENT ONT::transfer-information)
     ;; this verb doesn't participate in the alternation "demonstrate him the procedure"
     (TEMPL agent-theme-to-addressee-optional-templ) 
     (meta-data :origin "verbnet-1.5-corrected" :entry-date 20060214 :change-date 20090506 :comments nil :vn ("transfer_mesg-37.1"))
     )
    )
   )
  (W::demoralize
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("demoralize%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::deplore
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("admire-31.2") :wn ("deplore%2:32:00" "deplore%2:32:01"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090508 :comments nil :vn ("admire-31.2") :wn ("deplore%2:32:00" "deplore%2:32:01"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::depress
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("depress%2:37:00"))
     (LF-PARENT ONT::evoke-sadness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::derive
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("derive%2:31:00"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::descry
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("descry%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::desert
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("leave-51.2-1"))
     (LF-PARENT ONT::leave-behind)
 ; like leave
     )
    )
   )
  (W::detach
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("detach%2:35:01"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::detect
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("see-30.1-1"))
     (LF-PARENT ONT::becoming-aware)
     (example "detect whether there is a problem")
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like see
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("see-30.1-1"))
     (LF-PARENT ONT::becoming-aware)
     (example "detect the problem")
     (TEMPL cognizer-theme-xp-templ) ; like notice
     )
    )
   )
  (W::deteriorate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("deteriorate%2:29:00" "deteriorate%2:30:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::deteriorate)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::deteriorate)
     (example "the structure deteriorated")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::devastate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("devastate%2:30:01"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("devastate%2:30:00"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::dice
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::crush)
 ; like mash,squash,squish,crush,bruise
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )

  (W::disappoint
     (wordfeats (W::morph (:forms (-vb) :nom W::disappointment)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("disappoint%2:37:00"))
     (LF-PARENT ONT::evoke-sadness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::disarm
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090605 :comments nil :vn ("cheat-10.6") :wn ("disarm%2:33:01"))
     (LF-PARENT ONT::remove-from)
     (TEMPL agent-source-theme-optional-templ)
     )
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("disarm%2:37:00"))
     (LF-PARENT ONT::affect-experiencer)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::disassemble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("disassemble%2:36:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::discern
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("see-30.1-1"))
     (LF-PARENT ONT::becoming-aware)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like see
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("see-30.1-1"))
     (LF-PARENT ONT::becoming-aware)
     (TEMPL cognizer-theme-xp-templ) ; like notice
     )
    )
   )
  (W::discombobulate
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("discombobulate%2:31:00" "discombobulate%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::discomfit
   (wordfeats (W::morph (:forms (-vb) :past W::discomfited :ing W::discomfiting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("discomfit%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::discompose
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("discompose%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::disconcert
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("disconcert%2:37:01" "disconcert%2:37:02"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::discourage
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
 ; like block
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It discourages him from doing something")
     )
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("discourage%2:37:00"))
     (LF-PARENT ONT::evoke-sadness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::disdain
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090508 :comments nil :vn ("admire-31.2") :wn ("disdain%2:37:00"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::disgrace
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("disgrace%2:37:00" "disgrace%2:41:00"))
     (LF-PARENT ONT::evoke-shame)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
  (W::disgruntle
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("disgruntle%2:37:00"))
     (LF-PARENT ONT::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
  (W::disgust
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090512 :comments LM-vocab)
     (LF-PARENT ONT::evoke-disgust)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
  (W::stress
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090512 :comments LM-vocab)
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
  ((W::stress (w::out))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090512 :comments LM-vocab)
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
   (W::wipe
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090512 :comments LM-vocab)
     (LF-PARENT ONT::evoke-tiredness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
   ((W::wipe (w::out))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090512 :comments LM-vocab)
     (LF-PARENT ONT::evoke-tiredness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
   (W::zonk
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090512 :comments LM-vocab)
     (LF-PARENT ONT::evoke-tiredness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
   ((W::zonk (w::out))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090512 :comments LM-vocab)
     (LF-PARENT ONT::evoke-tiredness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
   (W::anger
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab)
     (LF-PARENT ONT::affect-experiencer)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     (syntax (w::resultative +))
     )
    )
   )
  (W::dishearten
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("dishearten%2:37:00"))
     (LF-PARENT ONT::evoke-sadness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::disillusion
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("disillusion%2:37:00"))
     (LF-PARENT ONT::evoke-sadness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::dismay
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("dismay%2:37:00" "dismay%2:37:01"))
     (LF-PARENT ONT::evoke-sadness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::dispirit
   (wordfeats (W::morph (:forms (-vb) :past W::dispirited :ing W::dispiriting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("dispirit%2:37:00"))
     (LF-PARENT ONT::evoke-sadness)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::displease
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("displease%2:37:00"))
     (LF-PARENT ONT::evoke-disgust)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::disquiet
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("disquiet%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::dissatisfy
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("dissatisfy%2:37:00"))
     (LF-PARENT ONT::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::distemper
   (wordfeats (W::morph (:forms (-vb) :past W::distempered :ing W::distempering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24") :wn ("distemper%2:36:00"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24") :wn ("distemper%2:36:00"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::distract
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("distract%2:37:02"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::distress
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("distress%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::distrust
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("distrust%2:31:00" "distrust%2:32:00"))
     (LF-PARENT ONT::experiencer-emotion)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::disturb
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("disturb%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::dodder
   (wordfeats (W::morph (:forms (-vb) :past W::doddered :ing W::doddering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("dodder%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::dodge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("avoid-52") :wn ("dodge%2:32:00" "dodge%2:38:00"))
     (LF-PARENT ONT::avoiding)
 ; like circumvent,evade,avoid
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("avoid-52") :wn ("dodge%2:32:00" "dodge%2:38:00"))
     (LF-PARENT ONT::avoid-location)
     (TEMPL theme-via-xp-templ) ; like avoid
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("avoid-52") :wn ("dodge%2:32:00" "dodge%2:38:00"))
     (LF-PARENT ONT::avoiding)
     (TEMPL agent-action-subjcontrol-templ (xp (% w::vp (w::vform w::ing)))) ; like avoid
     )
    )
   )
  (W::doff
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("simple_dressing-41.3.1") :wn ("doff%2:35:00"))
     (LF-PARENT ONT::undress)
 ; like don
     )
    )
   )
  (W::undress
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090506 :change-date nil :comments nil)
     (LF-PARENT ONT::undress)
     (templ agent-source-templ)
     )
    )
   )
  (W::donate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("contribute-13.2-1-1"))
     (LF-PARENT ONT::donate)
     (TEMPL agent-theme-to-recipient-optional-templ) ; like surrender
     )
    )
   )
  (W::doze
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("snooze-40.4") :wn ("doze%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like sleep
     )
    )
   )
  (W::dread
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("dread%2:37:00"))
     (LF-PARENT ONT::fearing)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("dread%2:37:00"))
     (LF-PARENT ONT::fearing)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::dribble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("dribble%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("dribble%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
  (W::drift
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("drift%2:38:02" "drift%2:38:04" "drift%2:38:06"))
     (LF-PARENT ONT::drift)
     (TEMPL theme-templ) ; like move,bounce
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("drift%2:35:03" "drift%2:38:02" "drift%2:38:04" "drift%2:38:05" "drift%2:38:06"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::drill
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-2"))
     (LF-PARENT ONT::cut)
 ; like chop
     )
    )
   )
  (W::drool
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("drool%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("drool%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
  (W::drowse
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("snooze-40.4") :wn ("drowse%2:29:01"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like sleep
     )
    )
   )
  (W::dumbfound
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("dumbfound%2:31:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::dwell
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("exist-47.1-1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like live
     )
    )
   )
  (W::dye
   (wordfeats (W::morph (:forms (-vb) :past W::dyed :ing W::dyeing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24") :wn ("dye%2:30:00"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24") :wn ("dye%2:30:00"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::elate
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("elate%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::electrify
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("electrify%2:37:00"))
     (LF-PARENT ont::provoke)
     (TEMPL cause-affected-xp-templ) ; like annoy,bother,concern,hurt
     (example "the speech electrified the crowd")
     )
    )
   )
  (W::elude
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("avoid-52") :wn ("elude%2:32:00" "elude%2:38:00"))
     (LF-PARENT ONT::avoiding)
 ; like circumvent,evade,avoid
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("avoid-52") :wn ("elude%2:32:00" "elude%2:38:00"))
     (LF-PARENT ONT::avoid-location)
     (TEMPL theme-via-xp-templ) ; like avoid
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("avoid-52") :wn ("elude%2:32:00" "elude%2:38:00"))
     (LF-PARENT ONT::avoiding)
     (TEMPL agent-action-subjcontrol-templ (xp (% w::vp (w::vform w::ing)))) ; like avoid
     )
    )
   )
  (W::embarrass
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("embarrass%2:37:00"))
     (LF-PARENT ONT::evoke-shame)
     (TEMPL cause-experiencer-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::embolden
   (wordfeats (W::morph (:forms (-vb) :past W::emboldened :ing W::emboldening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("embolden%2:37:00"))
     (LF-PARENT ONT::provoke)
     (example "the speech emboldened the masses")
     (TEMPL cause-affected-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::enamel
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24") :wn ("enamel%2:36:00"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24") :wn ("enamel%2:36:00"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::enameled
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past w::pastpart)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::enameling
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::enchant
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("enchant%2:37:01"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::encourage
   (SENSES
    ((EXAMPLE "He encourages good behavior")
     (LF-PARENT ONT::encourage)
     (TEMPL CAUSE-EFFECT-XP-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090513 :comments nil :vn ("advise-37.9") :wn ("encourage%2:37:00"))
     )
    ((EXAMPLE "His financial success encouraged him to look for a wife")
     (LF-PARENT ONT::encourage)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090513 :comments nil :vn ("advise-37.9") :wn ("encourage%2:37:00"))
     )
    )
   )
  (W::endure
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("exist-47.1-1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like live
     )
    )
   )
  (W::engage
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("engage%2:31:00"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::engender
   (wordfeats (W::morph (:forms (-vb) :past W::engendered :ing W::engendering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("engender-27") :wn ("engender%2:36:00"))
     (LF-PARENT ONT::create)
 ; like create,generate
     )
    )
   )
  (W::engross
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("engross%2:31:00" "engross%2:31:02"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::enjoy
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090508 :comments nil :vn ("admire-31.2") :wn ("enjoy%2:34:00" "enjoy%2:37:00" "enjoy%2:37:01"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::enlighten
   (wordfeats (W::morph (:forms (-vb) :past W::enlightened :ing W::enlightening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("enlighten%2:32:01"))
     (LF-PARENT ONT::evoke-clarity)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::enliven
   (wordfeats (W::morph (:forms (-vb) :past W::enlivened :ing W::enlivening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("enliven%2:29:00"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::enrage
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("enrage%2:37:00"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::enrapture
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("enrapture%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::entangle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amalgamate-22.2-2"))
     (LF-PARENT ONT::associate)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::with)))) ; like associate,associate
     )
    )
   )
  (W::entertain
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("entertain%2:41:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::enthrall
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("enthrall%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::enthuse
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("enthuse%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  
  (W::entice
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)
     (example "he enticed him [to release the storm report]")
     )
    )
   )
  (W::entrance
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("entrance%2:37:00"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::envy
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("envy%2:37:00" "envy%2:37:01"))
     (LF-PARENT ONT::envying)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("envy%2:37:00" "envy%2:37:01"))
     (LF-PARENT ONT::envying)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::erode
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("erode%2:30:01"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::deteriorate)
 ; like ferment
     )
   ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
    (LF-PARENT ONT::deteriorate)
    (example "the soil eroded")
    (templ theme-templ)
    (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
    )
    )
   )
  (W::espy
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("espy%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::esteem
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("esteem%2:31:01"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("appoint-29.1-2"))
     (LF-PARENT ONT::cogitation)
     (TEMPL cognizer-theme-xp-templ) ; like consider,rate
     )
    )
   )
  (W::exalt
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("exalt%2:32:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
    )
   )
  (W::exasperate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("exasperate%2:37:00" "exasperate%2:37:01"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::excite
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("excite%2:37:00" "excite%2:37:01" "excite%2:37:02" "excite%2:37:03"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::execrate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("execrate%2:37:00"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::exhaust
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("exhaust%2:29:00"))
     (LF-PARENT ONT::evoke-tiredness)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::exhilarate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("exhilarate%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::exonerate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090508 :comments nil :vn ("cheat-10.6-1-1"))
     (LF-PARENT ONT::pardon)
     (TEMPL agent-affected-xp-templ)
     )
    )
   )
  (W::expire
   (wordfeats (W::morph (:forms (-vb) :nom w::expiration)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disappearance-48.2") :wn ("expire%2:30:00" "expire%2:42:00"))
     (LF-PARENT ONT::die)
     (TEMPL experiencer-templ) ; like die
     )
    ((meta-data :origin calo-ontology :entry-date 20060214 :change-date nil :comments nil)
     (LF-PARENT ONT::stop)
     (example "the permit expired")
     (TEMPL affected-templ) ; like stop
     )
    )
   )
  (W::explicate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("transfer_mesg-37.1"))
     (LF-PARENT ONT::transfer-information)
     (TEMPL agent-addressee-iobj-theme-templ) ; like relay
     )
    )
   )
  (W::exterminate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("exterminate%2:35:01"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::extirpate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("extirpate%2:36:00"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::eye
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("eye%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::eyeing
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  
    (W::fabricate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("fabricate%2:36:01"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::fancy
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("fancy%2:37:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("fancy%2:37:00"))
     (LF-PARENT ONT::experiencer-emotion)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("want-32.1") :wn ("fancy%2:37:00"))
     (LF-PARENT ONT::want)
     (TEMPL experiencer-theme-xp-templ) ; like desire
     )
    )
   )
  (W::fascinate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("fascinate%2:37:01" "fascinate%2:42:00"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::fasten
   (wordfeats (W::morph (:forms (-vb) :past W::fastened :ing W::fastening)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype (? pt w::to))))) ; like bond,splice,weld
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::attach)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::to)))) ; like bind
     )
    )
   )
  (W::favor
   (wordfeats (W::morph (:forms (-vb) :past W::favored :ing W::favoring)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("favor%2:41:00" "favor%2:41:01" "favor%2:41:03"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
;    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("favor%2:41:00" "favor%2:41:01" "favor%2:41:03"))
;     (LF-PARENT ONT::experiencer-emotion)
;     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
;     )
    )
   )
  (W::faze
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("faze%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::fear
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("fear%2:37:00" "fear%2:37:01" "fear%2:37:13"))
     (LF-PARENT ONT::fearing)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
   (W::feast
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on)))) ; like dine
     )
    )
   )
  (W::fillet
   (wordfeats (W::morph (:forms (-vb) :past W::filleted :ing W::filleting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )
  (W::flabbergast
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("flabbergast%2:31:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::flatter
   (wordfeats (W::morph (:forms (-vb) :past W::flattered :ing W::flattering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("flatter%2:32:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::flit
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("flit%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::float
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("float%2:38:00" "float%2:38:02" "float%2:38:04"))
     (LF-PARENT ONT::float)
     (TEMPL theme-templ) ; like move,bounce
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("float%2:38:00" "float%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::floor
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("floor%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::flop
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("flop%2:38:00" "flop%2:38:01"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::sit-lay-stand-bend-flop-lean-perch-plop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
   (W::flutter
      (wordfeats (W::morph (:forms (-vb) :past W::fluttered :ing W::fluttering)))
   (SENSES
    (
     (LF-PARENT ONT::flutter)
     (example "the flag fluttered in the breeze" "his heart fluttered when she walked in")
     (TEMPL theme-templ)
     (meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments LM-vocab)
     )
    )
   )
   (W::wobble
   (SENSES
    (
     (LF-PARENT ONT::unsteady-move)
     (example "the chair wobbled" "his knees wobbled")
     (TEMPL theme-templ)
     (meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments LM-vocab)
     )
    )
   )
  (W::flourish
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("grow-26.2") )
     (LF-PARENT ONT::grow)
     (TEMPL theme-templ) ; like grow
     (example "the garden flourished")
     )
    )
   )
  (W::flower
   (wordfeats (W::morph (:forms (-vb) :past W::flowered :ing W::flowering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("flower%2:30:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::life-transformation)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::life-transformation)
     (example "the plants flowered")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::fluster
   (wordfeats (W::morph (:forms (-vb) :past W::flustered :ing W::flustering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("fluster%2:37:00" "fluster%2:37:01"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::forfeit
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("contribute-13.2-1-1"))
     (LF-PARENT ONT::surrender)
     (TEMPL agent-theme-to-recipient-optional-templ) ; like surrender
     )
    )
   )
  (W::fracture
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("fracture%2:29:00" "fracture%2:29:01" "fracture%2:29:02" "fracture%2:30:10"))
     (LF-PARENT ont::break-object)
 ; like tear
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("fracture%2:29:00" "fracture%2:29:01" "fracture%2:29:02" "fracture%2:30:10"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("fracture%2:29:00" "fracture%2:29:01" "fracture%2:29:02" "fracture%2:30:10"))
     (LF-PARENT ont::break-object)
     (TEMPL theme-templ) ; like crash,tear,break
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("break-45.1") :wn ("fracture%2:29:00" "fracture%2:29:01" "fracture%2:29:02" "fracture%2:30:10"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break
     )
    )
   )
  (W::free
   (wordfeats (W::morph (:forms (-vb) :past W::freed :ing W::freeing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("free-78-1"))
     (LF-PARENT ONT::releasing)
 ; like release
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090508 :comments nil :vn ("cheat-10.6-1-1"))
     (LF-PARENT ONT::pardon)
     (TEMPL agent-affected-xp-templ)
     )
    )
   )
;  ((W::french w::fry)
;      (wordfeats (W::morph (:forms (-vb) :past (W::french w::fried) :pastpart (W::french w::fried) :ing( W::french w::frying) )))
;   (SENSES
;    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
;     (LF-PARENT ONT::cooking) ; like bake,blanch,boil,braise,cook,fry
;     )
;    )
;   )
  (W::fret
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::worrying)
     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype (? p w::about))))) ; like mind,worry
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::worrying)
     (TEMPL experiencer-templ) ; like mind
     )
    )
   )
  (W::frighten
   (wordfeats (W::morph (:forms (-vb) :past W::frightened :ing W::frightening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("frighten%2:37:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::frolic
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("frolic%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::frustrate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("frustrate%2:37:00"))
     (LF-PARENT ONT::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::fuse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("mix-22.1-1-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::with)))) ; like combine
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("mix-22.1-1-1"))
     (LF-PARENT ONT::combine-objects)
 ; like mix
     )
    )
   )
  (W::gab
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("chit_chat-37.6"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-templ) ; like argue,chat
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chit_chat-37.6"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-about-theme-addressee-optional-templ) ; like argue,chat
     )
    )
   )
  (W::gall
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("gall%2:37:00"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::gallop
   (wordfeats (W::morph (:forms (-vb) :past W::galloped :ing W::galloping)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("gallop%2:38:00" "gallop%2:38:01" "gallop%2:38:03"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::galvanize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("galvanize%2:37:00"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)
     (example "the attraction of Napoleon was enough to galvanize him [to become the Emporer's painter]")
     )
    ((lf-parent ont::provoke)
     (example "the news galvanized him into action")
     (TEMPL cause-affected-effect-xp-templ (xp (% w::pp (w::ptype (? pt w::into w::to))))) ; like annoy,bother,concern,hurt
    )
    )
   )
  (W::gambol
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("gambol%2:38:00"))
     (LF-PARENT ONT::move-playfully)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::gamboled
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past w::pastpart)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::move-playfully)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::gamboling
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::move-playfully)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::gash
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )
  (W::germinate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("germinate%2:30:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::life-transformation)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::life-transformation)
     (example "the seeds germinated")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::gladden
   (wordfeats (W::morph (:forms (-vb) :past W::gladdened :ing W::gladdening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("gladden%2:37:00" "gladden%2:37:01"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::glide
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("glide%2:38:00" "glide%2:38:02"))
     (LF-PARENT ONT::move-fluidly)
     (TEMPL theme-templ) ; like move,bounce
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("glide%2:38:00" "glide%2:38:02"))
     (LF-PARENT ONT::move-fluidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::glimpse
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("glimpse%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::glom
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype (? pt w::to))))) ; like bond,splice,weld
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::attach)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::to)))) ; like bind
     )
    )
   )
  (W::goose-step
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("goose_step%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::gossip
   (wordfeats (W::morph (:forms (-vb) :past W::gossiped :ing W::gossiping)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("gossip%2:32:00" "gossip%2:32:01"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-templ) ; like argue,chat
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("gossip%2:32:00" "gossip%2:32:01"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-about-theme-addressee-optional-templ) ; like argue,chat
     )
    )
   )
  (W::gouge
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )
  (W::graft
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype (? pt w::to))))) ; like bond,splice,weld
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::attach)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::to)))) ; like bind
     )
    )
   )
  (W::gratify
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("gratify%2:34:00" "gratify%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
   (W::graze
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on)))) ; like dine
     )
    )
   )
  (W::grieve
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("grieve%2:37:01"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::grill
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("grill%2:30:00"))
     (LF-PARENT ONT::cooking) ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::grind
   (wordfeats (W::morph (:forms (-vb) :past W::ground :ing W::grinding)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::crush)
 ; like mash,squash,squish,crush,bruise
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut) ; like grate
     )
    )
   )
  (W::grip
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("hold-15.1-1"))
     (LF-PARENT ONT::body-manipulation) ; like grasp,hold
     )
    )
   )
  (W::guarantee
   (wordfeats (W::morph (:forms (-vb) :past W::guaranteed :ing W::guaranteeing)))
   (SENSES
;    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("future_having-13.3") :wn ("guarantee%2:32:01"))
;     (LF-PARENT ONT::giving)
;     (TEMPL agent-theme-to-recipient-optional-templ) ; like yield
;     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20060120 :comments nil :vn ("future_having-13.3") :wn ("guarantee%2:32:01"))
     (LF-PARENT ONT::promise)
     (TEMPL agent-addressee-iobj-theme-templ) ; like grant,offer
     )
    ((meta-data :origin step :entry-date 20080705 :change-date 20090501 :comments nil)
     (LF-PARENT ONT::ensure)
     (templ cause-effect-xp-templ (xp (% w::cp (w::ctype w::s-finite))))
     (example "the funding guarantees that the center will stay open")
     )
    )
   )
  (W::insure
   (SENSES
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments nil)
     ;;(LF-PARENT ONT::promise)
     (lf-parent ont::insure) ;; 20120524 GUM change new parent 
     )
    )
   )
   (W::ensure
   (SENSES
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments nil)
     (LF-PARENT ONT::promise)
     )
    ((meta-data :origin step :entry-date 20080705 :change-date 20090501 :comments nil)
     (LF-PARENT ONT::ensure)
     (templ cause-effect-xp-templ (xp (% w::cp (w::ctype w::s-finite))))
     (example "the funding ensures that the center will stay open")
     )
    ((meta-data :origin step :entry-date 20080724 :change-date 20090501 :comments nil)
     (LF-PARENT ONT::ensure)
     (templ cause-effect-xp-templ)
     (example "the funding ensures the operation of the school")
     )
    )
   )
  (W::harass
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090520 :comments nil :vn ("amuse-31.1") :wn ("harass%2:37:00" "harass%2:37:01"))
     (LF-PARENT ont::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::hardboil
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::hasten
   (wordfeats (W::morph (:forms (-vb) :past W::hastened :ing W::hastening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("?hasten%2:30:00" "hasten%2:38:00"))
     (LF-PARENT ONT::move-rapidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    ((lf-parent ont::increase-speed)
     (example "hasten the process")
     (templ cause-theme-xp-templ)
    )
    )
   )
  (W::haunt
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("haunt%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::hearten
   (wordfeats (W::morph (:forms (-vb) :past W::heartened :ing W::heartening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("hearten%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::hike
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("hike%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::hire
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090429 :comments nil :vn ("get-13.5.1") :wn ("hire%2:40:00" "hire%2:41:00" "hire%2:41:01"))
     (LF-PARENT ONT::lease-hire)    
 ; like procure,order,buy
     (example "he hired a car for a week")
     (preference .96) 
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("get-13.5.1") :wn ("hire%2:40:00" "hire%2:41:00" "hire%2:41:01"))
     (LF-PARENT ONT::lease-hire)
     (example "he hired him a car for a week")
     (TEMPL agent-recipient-theme-templ) ; like buy,order
     (preference .98)
     )
     ((LF-PARENT ONT::employ)
     (example "Abrams hired this employee")
     (meta-data :origin csli-ts :entry-date 20070313 :change-date 20090508 :comments nil :wn nil)
     )
    ((LF-PARENT ONT::employ)
     (example "Abrams hired him to do the job")
     (meta-data :origin csli-ts :entry-date 20070313 :change-date 20090508 :comments nil :wn nil)
     (templ agent-effect-objcontrol-templ)
     )
    )
   )
  (W::hobble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("hobble%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::horrify
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("horrify%2:37:00" "horrify%2:37:01"))
     (LF-PARENT ONT::evoke-disgust)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::humble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("humble%2:37:00" "humble%2:37:01"))
     (LF-PARENT ONT::evoke-shame)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::humiliate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("humiliate%2:37:00"))
     (LF-PARENT ONT::evoke-shame)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::hurtle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("hurtle%2:35:00" "hurtle%2:38:00" "hurtle%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::hypnotize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )

  (W::idolize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("idolize%2:37:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
;    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("idolize%2:37:00"))
;     (LF-PARENT ONT::experiencer-emotion)
;     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
;     )
    )
   )
  (W::impress
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090508 :comments nil :vn ("amuse-31.1") :wn ("impress%2:31:00" "impress%2:37:00" "impress%2:37:01"))
     (LF-PARENT ont::impress)
     (TEMPL cause-affected-xp-templ)
     )
    )
   )
  (W::incense
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("incense%2:37:01"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::inch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("inch%2:38:00"))
     (LF-PARENT ONT::move-slowly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::infuriate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("infuriate%2:37:00"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::inspire
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("inspire%2:32:00"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like annoy,bother,concern,hurt
     (example "Napoleon inspired him [to become the Emporer's painter]")
     )
    ((LF-PARENT ont::provoke)
     (TEMPL cause-effect-affected-optional-templ (xp (% w::pp (w::ptype (? pt w::in w::among))))) ; like annoy,bother,concern,hurt
     (example "he inspired confidence [in them]")
     )
    )
   )
  
  (W::insult
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("insult%2:32:00"))
     (LF-PARENT ont::insult)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090520 :comments nil :vn ("amuse-31.1") :wn ("insult%2:32:00"))
     (LF-PARENT ont::evoke-offense)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::intimidate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("intimidate%2:37:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::intoxicate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("intoxicate%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::intrigue
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("intrigue%2:42:00"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::invent
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("invent%2:36:00"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::invigorate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("invigorate%2:29:00" "invigorate%2:30:01"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-affected-xp-TEMPL)  ; like annoy,bother,concern,hurt
     (example "The water invigorated him")
     )
    )
   )
  (W::irk
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("irk%2:37:00"))
     (LF-PARENT ONT::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::irritate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("irritate%2:37:00"))
     (LF-PARENT ONT::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-discomfort)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::itch
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (example "my leg itches")
     (LF-PARENT ONT::experiencer-obj)
     (TEMPL theme-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (example "this sweater itches [me]")
     (LF-PARENT ONT::evoke-discomfort)
     (TEMPL cause-experiencer-xp-optional-templ)
     )
    )
   )
  (W::chafe
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (example "this sweater chafes [me]")
     (LF-PARENT ONT::evoke-discomfort)
     (TEMPL cause-experiencer-xp-optional-templ)
     )
    )
   )
  (W::issue
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("future_having-13.3") :wn ("issue%2:41:00"))
     (LF-PARENT ONT::supply)
     (example "issue him a visa")
     (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     )
    )
   )
  (W::jam
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-theme-to-loc-optional-templ (xp (% w::pp (w::ptype (? t w::into w::in))))) ; like pack
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-goal-theme-templ (xp (% w::pp (w::ptype (? t w::with))))) ; like pack
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-theme-to-loc-templ (xp (% w::pp (w::ptype (? t w::on w::into w::in))))) ; like cram
     )
    )
   )

   (W::jar
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("jar%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::jerk
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("push-12-1"))
     (LF-PARENT ONT::pull)
     (TEMPL cause-theme-xp-templ) ; like pull
     )
    )
   )
  (W::jog
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("jog%2:38:01"))
     (LF-PARENT ONT::move-rapidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::jollify
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::jolt
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("jolt%2:37:00"))
     (LF-PARENT ont::provoke)
     (example "the news jolted him [into action]")
     (TEMPL cause-affected-effect-optional-templ (xp (% w::pp (w::ptype (? pt w::into w::to))))) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::journey
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("journey%2:38:00" "journey%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::kneel
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("kneel%2:35:00"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like lie
     )
    )
   )
  (W::knelt
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past w::pastpart)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like lie
     )
    )
   )
  (W::lacquer
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24") :wn ("lacquer%2:35:00" "lacquer%2:36:00"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24") :wn ("lacquer%2:35:00" "lacquer%2:36:00"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::lament
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("lament%2:32:00"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
 (W::languish
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("exist-47.1-1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like live
     )
    )
   )
  (W::lapse
   (SENSES
  ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20060214 :change-date nil :comments nil :vn ("disappearance-48.2") :wn ("lapse%2:30:01" "lapse%2:38:00") )
     (LF-PARENT ONT::stop)
     (example "the option lapsed")
     (TEMPL affected-templ) ; like stop
     )
    )
   )
  (W::lean
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put_spatial-9.2-1"))
     (LF-PARENT ONT::lean)
     (TEMPL theme-templ) ; like hang,stand,sit
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("lean%2:38:00"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::sit-lay-stand-bend-flop-lean-perch-plop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
  (W::leap
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("leap%2:38:00" "leap%2:38:10"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::lept
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::lease
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090429 :change-date nil :comments nil :vn ("get-13.5.1"))
     (LF-PARENT ONT::lease-hire)
     (example "he leased a car for a week")
     (TEMPL agent-theme-recipient-alternation-templ)
     )
    )
   )
  (W::limp
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("limp%2:38:00" "limp%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::linger
   (wordfeats (W::morph (:forms (-vb) :past W::lingered :ing W::lingering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("linger%2:38:00" "linger%2:38:01" "linger%2:42:00"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("exist-47.1-1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like live
     )
    )
   )
  (W::lollop
   (wordfeats (W::morph (:forms (-vb) :past W::lolloped :ing W::lolloping)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("lollop%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::lope
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("lope%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::lull
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("lull%2:37:01"))
     (LF-PARENT ont::provoke)
     (TEMPL cause-affected-effect-optional-templ (xp (% w::pp (w::ptype (? pt w::into w::to))))) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::lumber
   (wordfeats (W::morph (:forms (-vb) :past W::lumbered :ing W::lumbering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("lumber%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::lurch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("lurch%2:38:00" "lurch%2:38:01" "lurch%2:38:03"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::madden
   (wordfeats (W::morph (:forms (-vb) :past W::maddened :ing W::maddening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("madden%2:37:00" "madden%2:37:01"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::mangle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::crush)
 ; like mash,squash,squish,crush,bruise
     )
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20060214 :change-date 20090504 :comments nil :vn ("destroy-44"))
     (LF-PARENT ONT::destroy) ; like destroy
     )
    )
   )
  (W::manufacture
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("manufacture%2:36:00"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::march
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("march%2:38:00" "march%2:38:01" "march%2:38:04" "march%2:38:10"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::meander
   (wordfeats (W::morph (:forms (-vb) :past W::meandered :ing W::meandering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("meander%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::mesmerize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("mesmerize%2:32:00"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::microwave
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("microwave%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::miff
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("miff%2:37:00"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::mince
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::crush)
 ; like mash,squash,squish,crush,bruise
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("mince%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::mingle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("mix-22.1-1-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::with)))) ; like combine
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("mix-22.1-1-1"))
     (LF-PARENT ONT::combine-objects) ; like mix
     )
    )
   )
  (W::model
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("model%2:36:00" "model%2:36:02"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::modeled
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::modeling
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::molder
   (wordfeats (W::morph (:forms (-vb) :past W::moldered :ing W::moldering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("molder%2:30:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::deteriorate)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::deteriorate)
     (example "the leaves moldered")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::mollify
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("mollify%2:37:00"))
     (LF-PARENT ONT::subduing)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::molt
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("molt%2:29:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::life-transformation)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::life-transformation)
     (example "the snake molted")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::moult
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("molt%2:29:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::life-transformation)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::life-transformation)
     (example "the snake moulted")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::moon
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype (? p w::about))))) ; like mind,worry
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-templ) ; like mind
     )
    )
   )
  (W::moor
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype (? pt w::to))))) ; like bond,splice,weld
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::attach)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::to)))) ; like bind
     )
    )
   )
  (W::mortify
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("mortify%2:37:02"))
     (LF-PARENT ONT::evoke-disgust)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::mosey
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("mosey%2:38:00"))
     (LF-PARENT ONT::move-slowly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::mourn
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("mourn%2:37:00"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("mourn%2:37:00"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::mow
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-2"))
     (LF-PARENT ONT::cut)
 ; like chop
     )
    )
   )
  (W::muddle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("muddle%2:31:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amalgamate-22.2-2"))
     (LF-PARENT ONT::associate)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::with)))) ; like associate,associate
     )
    )
   )
  (W::mystify
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("mystify%2:31:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
  )
   (W::nap
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("snooze-40.4") :wn ("nap%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like sleep
     )
    )
   )
  (W::narrate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("transfer_mesg-37.1"))
     (LF-PARENT ONT::transfer-information)
     (TEMPL agent-addressee-iobj-theme-templ) ; like relay
     )
    )
   )
  (W::nauseate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("nauseate%2:37:00"))
     (LF-PARENT ONT::evoke-disgust)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-ill-being)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::nettle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("nettle%2:32:00" "nettle%2:37:00"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::nick
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )
  (W::nickname
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::naming)
     (TEMPL cognizer-theme-bare-predicate-optional-templ) ; like name
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::naming)
     (TEMPL cognizer-theme-xp-templ) ; like label
     )
    )
   )
  (W::nip
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
   (W::nosh
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on)))) ; like dine
     )
    )
   )

  (W::notch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )

  (W::numb
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("numb%2:39:00"))
     (LF-PARENT ONT::subduing)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-comfort)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::oar
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("nonvehicle-51.4.2"))
     (LF-PARENT ONT::ride)
 ; like ride
     )
    )
   )
  (W::obliterate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("obliterate%2:30:03"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::obsess
    (wordfeats (W::morph (:forms (-vb) :nom W::obsession)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("obsess%2:37:00"))
     (LF-PARENT ONT::care)
     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype (? p w::over w::about))))) ; like mind,worry
     )
    )
   )
  (W::offend
   (wordfeats (W::morph (:forms (-vb) :nom W::offense)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090520 :comments nil :vn ("amuse-31.1") :wn ("offend%2:37:00" "offend%2:37:01" "offend%2:37:02"))
     (LF-PARENT ONT::evoke-offense)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::outrage
   (wordfeats (W::morph (:forms (-vb) :nom W::outrage)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("outrage%2:37:00" "outrage%2:37:01"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::overawe
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("overawe%2:37:00"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::overcook
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("overcook%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::overhear
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("overhear%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    ((meta-data :origin trips :entry-date 20090331 :change-date nil :comments missing-sense)
     (LF-PARENT ONT::active-perception)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "he overheard him speak about it")
     (TEMPL experiencer-action-objcontrol-templ (xp (% W::VP (W::vform W::base))))
     )
    )
   )
  (W::overwhelm
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("overwhelm%2:37:00"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::owe
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("future_having-13.3") :wn ("owe%2:40:00" "owe%2:40:01"))
     (LF-PARENT ONT::owe)
     (TEMPL agent-theme-recipient-alternation-templ) ; like grant,offer
     )
    )
   )
  (W::pacify
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("pacify%2:37:00"))
     (LF-PARENT ONT::subduing)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::package
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::attach)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::to)))) ; like bind,glom,graft,bond,fasten,moor,bundle
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype (? pt w::to))))) ; like bond,splice,weld
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::combine-objects)
     (example "package the computer with the printer")
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype (? pt w::with))))) ; like append
     )
    ((LF-PARENT ont::combine-objects)
     (example "package the items together")
     (meta-data :origin calo-ontology :entry-date 20060214 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
 
  (W::pad
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("pad%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::paddle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("nonvehicle-51.4.2") :wn ("paddle%2:38:00"))
     (LF-PARENT ONT::ride)
 ; like ride
     )
    )
   )
  (W::pain
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("pain%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::pair
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amalgamate-22.2-2"))
     (LF-PARENT ONT::associate)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::with)))) ; like associate,associate
     )
    )
   )
;  ((W::pan w::broil)
;    (wordfeats (W::morph (:forms (-vb) :past (W::pan w::broiled) :pastpart (W::pan w::broiled) :ing( W::pan w::broiling) )))
;   (SENSES
;    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
;     (LF-PARENT ONT::cooking) ; like bake,blanch,boil,braise,cook,fry
;     )
;    )
;   )
;  ((W::pan w::fry)
;    (wordfeats (W::morph (:forms (-vb) :past (W::pan w::fried) :pastpart (W::pan w::fried) :ing( W::pan w::frying) )))
;   (SENSES
;    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
;     (LF-PARENT ONT::cooking) ; like bake,blanch,boil,braise,cook,fry
;     )
;    )
;   )
  (W::parade
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("parade%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::parboil
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("parboil%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::parch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::partition
   (SENSES
  ((meta-data :origin calo-ontology :entry-date 20060214 :change-date nil :comments nil)
     (LF-PARENT ONT::separation) ;; like divide
     (example "he partitioned the data")
     (templ agent-theme-xp-templ)
     )
  ((meta-data :origin beetle :entry-date 20080716 :change-date nil :comments nil :vn ("separate-23.1-2"))
   (LF-PARENT ont::separation)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL INSTRUMENT-THEME-SOURCE-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? t W::from)))))
     (EXAMPLE "a divider partitions the room")
     )
    )
   )
  (W::pedal
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("nonvehicle-51.4.2") :wn ("pedal%2:38:00"))
     (LF-PARENT ONT::ride)
 ; like ride
     )
    )
   )
  (W::pedaled
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("nonvehicle-51.4.2"))
     (LF-PARENT ONT::ride)
 ; like ride
     )
    )
   )
  (W::pedaling
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("nonvehicle-51.4.2"))
     (LF-PARENT ONT::ride)
 ; like ride
     )
    )
   )
  (W::peeve
    (wordfeats (W::morph (:forms (-vb) :nom W::peeve)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("peeve%2:37:00"))
     (LF-PARENT ONT::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::perambulate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("perambulate%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )

  (W::perch
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put_spatial-9.2-1"))
     (LF-PARENT ONT::be-at-loc)
     (TEMPL theme-templ) ; like hang,stand,sit
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("perch%2:35:00"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::sit-lay-stand-bend-flop-lean-perch-plop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
  (W::percolate
    (wordfeats (W::morph (:forms (-vb) :nom W::percolation)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("percolate%2:35:03"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::perforate
    (wordfeats (W::morph (:forms (-vb) :nom W::perforation)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )
  (W::perish
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disappearance-48.2") :wn ("perish%2:30:00"))
     (LF-PARENT ONT::die)
     (TEMPL experiencer-templ) ; like die
     )
    )
   )
  (W::perk
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::perplex
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("perplex%2:31:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::persist
    (wordfeats (W::morph (:forms (-vb) :nom W::persistance)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("exist-47.1-1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like live
     )
    )
   )
  (W::perturb
    (wordfeats (W::morph (:forms (-vb) :nom W::perturbance)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("perturb%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::phone
   (SENSES
    ((EXAMPLE "phone the doctor")
     (LF-PARENT ONT::establish-communication)
     (TEMPL AGENT-ADDRESSEE-TEMPL)
     (meta-data :origin calo-ontology :entry-date 20060214 :change-date 20090508 :comments nil)
     (preference .97) ;; prefer noun sense
     )
    )
   )
  (W::pile
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-theme-to-loc-optional-templ (xp (% w::pp (w::ptype (? t w::into w::in))))) ; like pack
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-goal-theme-templ (xp (% w::pp (w::ptype (? t w::with))))) ; like pack
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("spray-9.7-1-1"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-theme-to-loc-templ (xp (% w::pp (w::ptype (? t w::on w::into w::in))))) ; like cram
     )
    )
   )
  (W::pique
    (wordfeats (W::morph (:forms (-vb) :nom W::pique)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("pique%2:37:00"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::pity
    (wordfeats (W::morph (:forms (-vb) :nom W::pity)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("pity%2:37:00"))
     (LF-PARENT ONT::experiencer-emotion)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("pity%2:37:00"))
     (LF-PARENT ONT::experiencer-emotion)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::placate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("placate%2:37:00"))
     (LF-PARENT ONT::subduing)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::plague
    (wordfeats (W::morph (:forms (-vb) :nom W::plague)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("plague%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::plank
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("plank%2:34:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::please
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("please%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::honor
   (wordfeats (W::morph (:forms (-vb) :past W::honored :ing W::honoring :nom w::honor)))
   (SENSES
    ((meta-data :origin step :entry-date 20080630 :change-date 20090511 :comments nil)
     (LF-PARENT ONT::evoke-joy)
     (example "they honor him")
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::plod
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("plod%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::plop
    (wordfeats (W::morph (:forms (-vb) :nom W::plop)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("plop%2:35:00"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::sit-lay-stand-bend-flop-lean-perch-plop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
  (W::poach
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("poach%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::prance
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("prance%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::preach
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("transfer_mesg-37.1"))
     (LF-PARENT ONT::transfer-information)
     (TEMPL agent-addressee-iobj-theme-templ) ; like relay
     )
    )
   )
  (W::preoccupy
    (wordfeats (W::morph (:forms (-vb) :nom W::preoccupation)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("preoccupy%2:37:00"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::press
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL)  ; like dare
     (example "Napoleon pressed him to become the Emporer's painter")
     (preference .98) ;; prefer physical sense
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("push-12-1-1"))
     (LF-PARENT ONT::press)
     (example "he pressed the door closed")
     (TEMPL cause-theme-xp-templ) ; like push
     )
    ((meta-data :origin plot :entry-date 20080812 :change-date nil :comments nil)
     (LF-PARENT ONT::type)
     (example "press \"enter\"")
     (TEMPL agent-THEME-XP-TEMPL)
     )
    )
   )
  ((W::press w::on)
   (SENSES
    ((meta-data :origin plow :entry-date 20060620 :change-date nil :comments nil)
     (LF-PARENT ONT::press)
     (example "press on the button")
     (TEMPL cause-theme-xp-templ) ; like push
     )
    )
   )
  (W::proclaim
    (wordfeats (W::morph (:forms (-vb) :nom W::proclamation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("say-37.7-1"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-effect-subjcontrol-templ (xp (% w::cp (w::ctype w::s-to)))) ; like claim
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("confess-37.10"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype (? c w::s-that))))) ; like acknowledge
     )
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("proclaim%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
      (TEMPL agent-theme-to-addressee-optional-templ)  ; like say but needs different template b.c. doesn't participate in alternation
     )
    )
   )
  (W::procure
    (wordfeats (W::morph (:forms (-vb) :nom W::procurement)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("get-13.5.1") :wn ("procure%2:34:00" "procure%2:40:00"))
     (LF-PARENT ONT::acquire)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype (? pt w::from))))) ; like catch
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("get-13.5.1") :wn ("procure%2:34:00" "procure%2:40:00"))
     (LF-PARENT ONT::purchase)  ;; like buy, order
     (TEMPL AGENT-RECIPIENT-THEME-TEMPL) 
     )
    ((meta-data :origin calo-ontology :entry-date 20060126 :change-date nil :comments caloy3 :vn ("get-13.5.1") :wn ("procure%2:34:00" "procure%2:40:00"))
     (LF-PARENT ONT::purchase)  ;; like buy, order
     (TEMPL AGENT-THEME-XP-TEMPL) 
     )
    )
   )
  (W::promenade
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("promenade%2:38:00" "promenade%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::promise
    (wordfeats (W::morph (:forms (-vb) :nom W::promise)))
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date 20060120 :comments nil :vn ("future_having-13.3") :wn ("promise%2:32:01"))
     ;;(LF-PARENT ONT::promise)
     (lf-parent ont::gum-promise) ;;  ;; 20120524 GUM change new type
     (TEMPL agent-addressee-iobj-theme-templ) ; like grant,offer
     )
    )
   )
  (W::provoke
    (wordfeats (W::morph (:forms (-vb) :nom W::provocation)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("provoke%2:37:00" "provoke%2:37:01"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He provoked him [to run for office]")     
     )
    ((LF-PARENT ont::provoke)
     (TEMPL cause-effect-affected-optional-templ (xp (% w::pp (w::ptype (? pt w::in w::from))))) ; like annoy,bother,concern,hurt
     (example "he provoked a response [in the audience]")
     )
    ; he provoked him into running for office
    )
   )
  (W::prowl
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("prowl%2:38:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("prowl%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::prune
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-2"))
     (LF-PARENT ONT::cut)
 ; like chop
     )
    )
   )
  (W::puke
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("puke%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("puke%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
  (W::pulverize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::crush)
     )
    )
   )

  (W::pursue
    (wordfeats (W::morph (:forms (-vb) :nom W::pursuit)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chase-51.6") :wn ("pursue%2:38:00"))
     (LF-PARENT ONT::follow)
 ; like track
     )
    )
   )
  (W::puzzle
    (wordfeats (W::morph (:forms (-vb) :nom W::puzzle)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("puzzle%2:31:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
   (W::race
     (wordfeats (W::morph (:forms (-vb) :nom W::race)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("race%2:38:00" "race%2:38:10"))
     (LF-PARENT ONT::move-rapidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
 
  (W::ramble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("ramble%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::rankle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090520 :comments nil :vn ("amuse-31.1") :wn ("rankle%2:37:00"))
     (LF-PARENT ont::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090520 :change-date nil :comments nil)
     (LF-PARENT ont::experiencer-emotion)
     (TEMPL experiencer-templ)
     )
    )
   )
  (W::rap
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("rap%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-templ) ; like argue,chat
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("rap%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-about-theme-addressee-optional-templ) ; like argue,chat
     )
    )
   )
  (W::ravage
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("ravage%2:30:01"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::raze
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("raze%2:36:00"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::reassure
       (wordfeats (W::morph (:forms (-vb) :nom W::reassurance)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("reassure%2:32:00" "reassure%2:37:00"))
     (LF-PARENT ont::experiencer-obj)
     (TEMPL cause-theme-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::recite
   (wordfeats (W::morph (:forms (-vb) :nom W::recitation)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("transfer_mesg-37.1"))
     (LF-PARENT ONT::transfer-information)
     (TEMPL agent-addressee-iobj-theme-templ) ; like relay
     )
    )
   )
  (W::reckon
   (wordfeats (W::morph (:forms (-vb) :past W::reckoned :ing W::reckoning)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("rely-70"))
     (LF-PARENT ont::rely)
     (TEMPL theme-co-theme-xp-templ (xp (% w::pp (w::ptype w::on)))) ; like rely,depend,count
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("appoint-29.1-2"))
     (LF-PARENT ONT::cogitation)
     (TEMPL cognizer-theme-xp-templ) ; like consider,rate
     )
    )
   )
  (W::recount
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("recount%2:32:00"))
     ;;(LF-PARENT ONT::talk)
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (TEMPL agent-addressee-iobj-theme-templ) ; like say
     )
    )
   )
  (W::recreate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
  (W::refresh
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("refresh%2:30:00"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::regard
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("regard%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::regret
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("regret%2:32:01" "regret%2:37:00" "regret%2:37:01"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::reiterate
   (wordfeats (W::morph (:forms (-vb) :nom W::reiteration)))
   (SENSES
     ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("say-37.7") :wn ("reiterate%2:32:00"))
     ;;(LF-PARENT ONT::talk)
      (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-to-addressee-optional-templ)  ; like say but needs different template b.c. doesn't participate in alternation
     )
    )
   )
  (W::rejoice
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype (? p w::in w::about)))))
     (example "Rejoice in the Lord")
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::experiencer-emotion)
     (TEMPL experiencer-templ) ; like mind
     (example "Australians, rejoice!")
     )
    )
   )
  (W::relieve
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("relieve%2:32:00" "relieve%2:37:00" "relieve%2:40:00" "relieve%2:40:01" "relieve%2:41:01"))
     (LF-PARENT ONT::remove-from)
     (TEMPL agent-source-theme-optional-templ)
     (example "relieve the mule of its burden")
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090528 :change-date nil :comments nil)
     (example "relieve the soldier from duty")
     (LF-PARENT ONT::socially-remove)
     (templ agent-theme-source-optional-templ)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("relieve%2:37:00" "relieve%2:40:01"))
     (LF-PARENT ONT::subduing)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-comfort)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::alleviate
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090512 :change-date nil :comments nil)
     (LF-PARENT ONT::subduing)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-comfort)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::ease
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090512 :change-date nil :comments nil)
     (LF-PARENT ONT::subduing)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-comfort)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::relish
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("relish%2:37:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
    )
   )
  (W::rent
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090429 :change-date nil :comments nil :vn ("get-13.5.1"))
     (LF-PARENT ONT::lease-hire)
     (TEMPL agent-theme-recipient-alternation-templ)
     (example "he rented a car for a week")
     )
    )
   )
  (W::repel
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("repel%2:37:00" "repel%2:39:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )

  ;Fifty people were reported to be killed
  ;Fifty people were reported killed
  ;They reported fifty people to be killed.
  (W::report
   (wordfeats (W::morph (:forms (-vb) :nom W::report)))
   (SENSES
    (;;(LF-parent ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (Example "He reported that they solved the problem")
     (TEMPL agent-theme-xp-templ (xp (% W::cp (W::ctype W::s-that))))
     (meta-data :origin "verbnet-1.5-corrected" :entry-date 20060214 :change-date 20090506 :comments nil :vn ("say-37.7")) 
     )
    (;;(LF-parent ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (Example "He reported the results [to him]")
     (TEMPL agent-theme-to-addressee-optional-templ)
     (meta-data :origin "verbnet-1.5-corrected" :entry-date 20060214 :change-date 20090506 :comments nil :vn ("say-37.7")) 
     )
     (;;(LF-parent ONT::announce)
      (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (Example "He reported them ready")
     (TEMPL agent-effect-complex-templ)
     (meta-data :origin trips :entry-date 20090406 :change-date 20090506 :comments nil :vn ("say-37.7")) 
     )
     ;; he reported them killed
    (;;(LF-parent ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (Example "He reported them to be ready")
     (TEMPL agent-theme-objcontrol-templ (xp (% W::cp (W::ctype W::s-to))))
     (meta-data :origin trips :entry-date 20090406 :change-date 20090506 :comments nil :vn ("say-37.7")) 
     )	   
    )
   )
  (W::repulse
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("repulse%2:37:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::repute
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::suppose)
     (TEMPL cognizer-templ) ; like guess
     )
    )
   )
  (W::resent
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("resent%2:37:01"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("resent%2:37:01"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::reside
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("exist-47.1-1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like live
     )
    )
   )
  (W::respect
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("respect%2:31:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
;    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("respect%2:31:00"))
;     (LF-PARENT ONT::experiencer-emotion)
;     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
;     )
    )
   )
  (W::revere
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("revere%2:37:00" "revere%2:37:01"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
    )
   )
  (W::revitalize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("revitalize%2:29:00"))
     (LF-PARENT ont::experiencer-obj)
     (TEMPL cause-theme-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::revolt
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("revolt%2:37:00" "revolt%2:39:00"))
     (LF-PARENT ONT::evoke-disgust)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::rile
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("rile%2:37:00"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::rip
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("rip%2:35:00"))
     (LF-PARENT ont::break-object)
 ; like tear
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("rip%2:35:00"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("rip%2:35:00"))
     (LF-PARENT ont::break-object)
     (TEMPL theme-templ) ; like crash,tear,break
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("break-45.1") :wn ("rip%2:35:00"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break
     )
    )
   )
  (W::rise
   (wordfeats (W::morph (:forms (-vb) :past W::rose :pastpart W::risen :ing W::rising w::rise)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("escape-51.1-2"))
     (LF-PARENT ONT::move-upward)
     (TEMPL theme-templ) ; like go,fall
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("rise%2:29:08" "rise%2:38:00" "rise%2:38:01" "rise%2:38:04" "rise%2:38:05"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
  (W::rissole
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
     (LF-PARENT ONT::cooking) ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (w::roam
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("roam%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::roil
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::romp
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("romp%2:38:00" "romp%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  
  (W::rot
   (wordfeats (W::morph (:forms (-vb) :past W::rotten :pastpart w::rotted :ing W::rotting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("rot%2:30:00"))
      (templ cause-theme-xp-templ)
     (LF-PARENT ONT::deteriorate)
 ; like ferment
     (syntax (w::resultative +))
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::deteriorate)
     (example "the bridge rotted")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::rove
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("rove%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::row
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("nonvehicle-51.4.2") :wn ("row%2:38:00"))
     (LF-PARENT ONT::ride)
 ; like ride
     )
    )
   )
  (W::rue
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("rue%2:37:00"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("rue%2:37:00"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::ruffle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("ruffle%2:37:00" "ruffle%2:37:01"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::ruin
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("ruin%2:35:00"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::rumple
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("bend-45.2") :wn ("rumple%2:30:10" "rumple%2:35:01"))
     (LF-PARENT ONT::fold)
 ; like fold
     )
    )
   )
  (W::rush
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("rush%2:38:00" "rush%2:38:10"))
     (LF-PARENT ONT::move-rapidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    ((lf-parent ont::increase-speed)
     (example "rush the process")
     (templ cause-theme-xp-templ)
    )
    )
   )
  (W::rust
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("rust%2:30:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::deteriorate)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::deteriorate)
     (example "the bridge rusted")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
    (W::sacrifice
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("contribute-13.2-1-1"))
     (LF-PARENT ONT::surrender)
     (TEMPL agent-theme-to-recipient-optional-templ) ; like surrender
     )
    )
   )
  (W::sadden
   (wordfeats (W::morph (:forms (-vb) :past W::saddened :ing W::saddening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("sadden%2:37:01"))
     (LF-PARENT ONT::evoke-sadness)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::disgust
   (wordfeats (W::morph (:forms (-vb) :past W::disgusted :ing W::disgusting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("sadden%2:37:01"))
     (LF-PARENT ont::experiencer-obj)
     (TEMPL cause-theme-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::sail
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("nonvehicle-51.4.2") :wn ("sail%2:38:00" "sail%2:38:02" "sail%2:38:03"))
     (LF-PARENT ONT::ride)
 ; like ride
     )
    )
   )
  (W::sashay
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("sashay%2:38:00" "sashay%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::saunter
   (wordfeats (W::morph (:forms (-vb) :past W::sauntered :ing W::sauntering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("saunter%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::savor
   (wordfeats (W::morph (:forms (-vb) :past W::savored :ing W::savoring)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2") :wn ("savor%2:37:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("savor%2:37:00" "savor%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
;    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("savor%2:37:00"))
;     (LF-PARENT ONT::experiencer-emotion)
;     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
;     )
    )
   )
  (W::scald
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("scald%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::scamper
   (wordfeats (W::morph (:forms (-vb) :past W::scampered :ing W::scampering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("scamper%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::scandalize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("scandalize%2:37:00"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::scare
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("scare%2:37:00" "scare%2:37:04"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::scent
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("scent%2:39:01"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::schmooze
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("schmooze%2:32:00"))
     ;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; GUM change new parent
     (TEMPL agent-templ) ; like argue,chat
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chit_chat-37.6") :wn ("schmooze%2:32:00"))
     ;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; GUM change new parent
     (TEMPL agent-about-theme-addressee-optional-templ) ; like argue,chat
     )
    )
   )
  (W::scoot
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("scoot%2:38:00"))
     (LF-PARENT ONT::move-rapidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::scram
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("scoot%2:38:00"))
     (LF-PARENT ONT::depart)
     (TEMPL agent-templ)
     )
    )
   )
  (W::scramble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("scramble%2:38:00" "scramble%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::scrutinize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("scrutinize%2:31:00" "scrutinize%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assessment-34") :wn ("scrutinize%2:31:00" "scrutinize%2:39:00"))
     (LF-PARENT ONT::scrutiny)
     (TEMPL cognizer-theme-xp-templ) ; like analyze,assess
     )
    )
   )
  (W::scud
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("scud%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::scurry
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("scurry%2:38:00"))
     (LF-PARENT ONT::move-rapidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::scutter
   (wordfeats (W::morph (:forms (-vb) :past W::scuttered :ing W::scuttering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::scuttle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("scuttle%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::secure
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("get-13.5.1") :wn ("secure%2:40:00"))
     (LF-PARENT ONT::purchase)
     (TEMPL agent-recipient-theme-templ) ; like buy,order
     )
    )
   )
  (W::sense
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("see-30.1-1"))
     (LF-PARENT ONT::becoming-aware)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like see
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("see-30.1") :wn ("sense%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like smell,taste
     )
    )
   )
  (W::shadow
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chase-51.6") :wn ("shadow%2:38:00"))
     (LF-PARENT ONT::follow)
 ; like track
     )
    )
   )
  (W::shake
   (wordfeats (W::morph (:forms (-vb) :past W::shook :pastpart W::shaken :ing W::shaking)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("funnel-9.3-2-1"))
     (LF-PARENT ONT::unload)
     (example "shake it off")
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype (? t w::off w::from))))) ; like dump
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("shake%2:37:00"))
     (LF-PARENT ONT::evoke-excitement)
     (example "the problem shook him")
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin cardiac :entry-date 20080222 :change-date nil :comments nil)
     (LF-PARENT ONT::uncontrolled-body-motion)
     (example "his leg twitched")
     (TEMPL theme-unaccusative-templ)
     )
    )
   )
  (W::twitch
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080222 :change-date nil :comments nil)
     (LF-PARENT ONT::uncontrolled-body-motion)
     (example "his leg twitched")
     (TEMPL theme-unaccusative-templ)
     )
    )
   )
   (W::tingle
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080222 :change-date nil :comments nil)
     (LF-PARENT ONT::uncontrolled-body-motion)
     (example "his leg twitched")
     (TEMPL theme-unaccusative-templ)
     )
    )
   )
   (W::palpitate
   (SENSES
    ((meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments LM-vocab)
     (LF-PARENT ONT::uncontrolled-body-motion)
     (example "his heart palpitated")
     (TEMPL theme-unaccusative-templ)
     )
    )
   )
   (W::quiver
   (SENSES
    ((meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments LM-vocab)
     (LF-PARENT ONT::uncontrolled-body-motion)
     (example "his heart quivered")
     (TEMPL theme-unaccusative-templ)
     )
    )
   )
  (W::tremble
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080222 :change-date nil :comments nil)
     (LF-PARENT ONT::uncontrolled-body-motion)
     (example "his leg trembled")
     (TEMPL theme-unaccusative-templ)
     )
    )
   )
  (W::jerk
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080222 :change-date nil :comments nil)
     (LF-PARENT ONT::uncontrolled-body-motion)
     (example "his leg jerked")
     (TEMPL theme-unaccusative-templ)
     )
    )
   )

  (W::shamble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("shamble%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::shame
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("shame%2:37:00" "shame%2:41:00"))
     (LF-PARENT ONT::evoke-shame)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::shatter
   (wordfeats (W::morph (:forms (-vb) :past W::shattered :ing W::shattering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("shatter%2:30:00" "shatter%2:30:01"))
     (LF-PARENT ont::break-object)
 ; like tear
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("shatter%2:30:00" "shatter%2:30:01"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("shatter%2:30:00" "shatter%2:30:01"))
     (LF-PARENT ont::break-object)
     (TEMPL theme-templ) ; like crash,tear,break
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("break-45.1") :wn ("shatter%2:30:00" "shatter%2:30:01"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("shatter%2:30:00" "shatter%2:30:01"))
     (LF-PARENT ONT::destroy)
 ; like waste
     )
    )
   )
  (W::shellac
   (wordfeats (W::morph (:forms (-vb) :past W::shellacked :ing W::shellacking)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24") :wn ("shellac%2:35:00"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24") :wn ("shellac%2:35:00"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::shirr
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3") :wn ("shirr%2:30:00"))
     (LF-PARENT ONT::cooking)
 ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::shock
   (wordfeats (W::morph (:forms (-vb) :nom w::shock)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("shock%2:37:00" "shock%2:37:01" "shock%2:37:02"))
     (LF-PARENT ont::provoke)
     (example "it shocked him into silence")
     (TEMPL cause-affected-effect-optional-templ (xp (% w::pp (w::ptype (? pt w::into w::to))))) ; like annoy,bother,concern,hurt
       )
    ; it shocked him into running for office
    )
   )
  (W::shove
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("push-12-1-1"))
     (LF-PARENT ONT::push)
     (TEMPL cause-theme-xp-templ) ; like push
     )
    )
   )
  (W::shred
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )
  (W::shuffle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("shuffle%2:38:00"))
     (LF-PARENT ONT::move-slowly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::shun
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("avoid-52") :wn ("shun%2:32:00"))
     (LF-PARENT ONT::avoiding)
 ; like circumvent,evade,avoid
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("avoid-52") :wn ("shun%2:32:00"))
     (LF-PARENT ONT::avoiding)
     (TEMPL agent-action-subjcontrol-templ (xp (% w::vp (w::vform w::ing)))) ; like avoid
     (example "he shuns running")
     )
    )
   )
  (W::sicken
   (wordfeats (W::morph (:forms (-vb) :past W::sickened :ing W::sickening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("sicken%2:37:00"))
     (LF-PARENT ONT::evoke-disgust)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-ill-being)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::sidestep
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("avoid-52") :wn ("sidestep%2:32:00"))
     (LF-PARENT ONT::avoiding)
 ; like circumvent,evade,avoid
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("avoid-52") :wn ("sidestep%2:32:00"))
     (LF-PARENT ONT::avoid-location)
     (TEMPL theme-via-xp-templ) ; like avoid
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("avoid-52") :wn ("sidestep%2:32:00"))
     (LF-PARENT ONT::avoiding)
     (TEMPL agent-action-subjcontrol-templ (xp (% w::vp (w::vform w::ing)))) ; like avoid
     )
    )
   )
  (W::sidle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("sidle%2:38:00" "sidle%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::sight
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("sight%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::skitter
   (wordfeats (W::morph (:forms (-vb) :past W::skittered :ing W::skittering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("skitter%2:35:01" "skitter%2:38:00" "skitter%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::skulk
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("skulk%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::slaughter
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::destroy)
     )
    )
   )
  (W::sleepwalk
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("sleepwalk%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::slide
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("slide%2:38:00" "slide%2:38:01" "slide%2:38:02"))
     (LF-PARENT ONT::move-fluidly)
     (TEMPL theme-templ) ; like move,bounce
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("slide%2:38:00" "slide%2:38:01" "slide%2:38:02"))
     (LF-PARENT ONT::move-fluidly)
 ; like rotate,turn,spin
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("slide%2:38:00" "slide%2:38:01" "slide%2:38:02"))
     (LF-PARENT ONT::move-fluidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::slink
   (wordfeats (W::morph (:forms (-vb) :past W::slank :pastpart W::slunk)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("slink%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  ;; alternate past form
  (W::slunk
   (wordfeats (W::morph (:forms NIL)) (W::vform W::past))
   (SENSES
    ((LF-PARENT ONT::self-locomote)
     (TEMPL agent-TEMPL)
     )
    )
   )
  (W::slit
   (wordfeats (W::morph (:forms (-vb) :past W::slit :ing W::slitting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )
  (W::slither
   (wordfeats (W::morph (:forms (-vb) :past W::slithered :ing W::slithering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("slither%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::slog
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("slog%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::slouch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("slouch%2:38:01"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("slouch%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::slumber
   (wordfeats (W::morph (:forms (-vb) :past W::slumbered :ing W::slumbering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("snooze-40.4") :wn ("slumber%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like sleep
     )
    )
   )
  (W::slump
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("slump%2:38:00" "slump%2:38:01"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
  (W::snap
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("snap%2:30:00" "snap%2:35:01"))
     (LF-PARENT ont::break-object)
 ; like tear
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("snap%2:30:00" "snap%2:35:01"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("snap%2:30:00" "snap%2:35:01"))
     (LF-PARENT ont::break-object)
     (TEMPL theme-templ) ; like crash,tear,break
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("break-45.1") :wn ("snap%2:30:00" "snap%2:35:01"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break
     )
    )
   )
  (W::sneak
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("sneak%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::snuck
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::sniff
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("sniff%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("sniff%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::snooze
   (wordfeats (W::morph (:forms (-vb) :nom w::snooze)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("snooze-40.4") :wn ("snooze%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like sleep
     )
    )
   )
  (W::sober
   (wordfeats (W::morph (:forms (-vb) :past W::sobered :ing W::sobering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("sober%2:30:02"))
     (LF-PARENT ONT::evoke-clarity)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::softboil
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
     (LF-PARENT ONT::cooking) ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::solace
    (wordfeats (W::morph (:forms (-vb) :nom w::solace)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("solace%2:37:00"))
     (LF-PARENT ont::experiencer-obj)
     (TEMPL cause-theme-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::somersault
    (wordfeats (W::morph (:forms (-vb) :nom w::somersault)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("somersault%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::spawn
    (wordfeats (W::morph (:forms (-vb) :nom w::spawn)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("engender-27") :wn ("spawn%2:36:00"))
     (LF-PARENT ONT::create)
 ; like create,generate
     )
    )
   )
  (W::spear
    (wordfeats (W::morph (:forms (-vb) :nom w::spear)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("carve-21.2-2"))
     (LF-PARENT ONT::cut) ; like chop
     )
    )
   )
  ((W::speed (w::up))
   (wordfeats (W::morph (:forms (-vb) :past W::sped :nom (w::speed w::up))))
   (SENSES
    ((meta-data :origin coordops :entry-date 20070514 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::increase)
     (TEMPL agent-templ)
     (example "speed up")
     )
    ((meta-data :origin calo :entry-date 20070514 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::increase-speed)
     (TEMPL cause-theme-xp-templ)
     (example "speed up the process")
     )
    )
   )
   ((W::slow (w::down))
     (wordfeats (W::morph (:forms (-vb) :nom (w::slow w::down))))
   (SENSES
    ((meta-data :origin coordops :entry-date 20070514 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::decrease)
     (TEMPL agent-templ)
     (example "slow down")
     )
    ((meta-data :origin calo :entry-date 20070514 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::decrease-speed)
     (TEMPL  cause-theme-xp-templ)
     (example "slow down the process")
     )
    )
   )
   (w::delay
     (wordfeats (W::morph (:forms (-vb) :nom w::delay)))
   (SENSES
    ((meta-data :origin calo :entry-date 20070514 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::decrease)
     (TEMPL agent-theme-xp-templ)
     (example "delay the process")
     )
    )
   )
  (W::speed
   (wordfeats (W::morph (:forms (-vb) :past W::sped :nom w::speed)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("speed%2:30:00" "speed%2:30:02" "speed%2:38:00" "speed%2:38:03"))
     (LF-PARENT ONT::move-rapidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::sped
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::move-rapidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::spellbind
   (wordfeats (W::morph (:forms (-vb) :past W::spellbound :ing W::spellbinding)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("spellbind%2:32:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::spit
   (wordfeats (W::morph (:forms (-vb) :past W::spat :ing W::spitting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("spit%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("spit%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
  (W::splice
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::attach)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::to)))) ; like bind,glom,graft,bond,fasten,moor,bundle
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype (? pt w::to))))) ; like append
     )
    )
   )
  (W::splinter
   (wordfeats (W::morph (:forms (-vb) :past W::splintered :ing W::splintering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("splinter%2:30:00" "splinter%2:41:01"))
     (LF-PARENT ont::break-object)
 ; like tear
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("splinter%2:30:00" "splinter%2:41:01"))
     (LF-PARENT ont::break-object)
     (TEMPL cause-theme-xp-templ) ; like break
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("break-45.1") :wn ("splinter%2:30:00" "splinter%2:41:01"))
     (LF-PARENT ont::break-object)
     (TEMPL theme-templ) ; like crash,tear,break
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("break-45.1") :wn ("splinter%2:30:00" "splinter%2:41:01"))
     (LF-PARENT ont::break-object)
     (TEMPL instrument-theme-templ) ; like break
     )
    )
   )
  (W::spook
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("spook%2:37:00"))
     (LF-PARENT ont::evoke-fear)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::spot
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("spot%2:30:00" "spot%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::sprawl
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("?sprawl%2:38:00" "sprawl%2:35:00"))
     ;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
  (W::spraypaint
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::sprout
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("sprout%2:30:00"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::life-transformation) ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::life-transformation)
     (example "the seeds sprouted")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::spy
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("spy%2:32:01" "spy%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
     )
    )
   )
  (W::squash
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20060214 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::crush) ;; like smash
     )
    )
   )
  (W::squat
   (wordfeats (W::morph (:forms (-vb) :past W::squatted :ing W::squatting)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like lie
     )
    )
   )
  (W::squish
   (SENSES
     ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20060214 :change-date nil :comments nil :vn ("carve-21.2-1") )
     (LF-PARENT ONT::crush) ;; like smash
     )
    )
   )
  (W::stagger
   (wordfeats (W::morph (:forms (-vb) :past W::staggered :ing W::staggering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("stagger%2:37:00"))
     (LF-PARENT ont::experiencer-obj)
     (TEMPL cause-theme-xp-templ) ; like annoy,bother,concern,hurt
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("stagger%2:38:00" "stagger%2:38:01" "stagger%2:38:02"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::stagnate
   (SENSES
; BAD AUTOMATICALLY ADDED SENSE more like lack of transformation
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::deteriorate)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::deteriorate)
     (example "the economy stagnated")
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::stain
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24") :wn ("stain%2:30:00" "stain%2:30:01" "stain%2:30:04"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24") :wn ("stain%2:30:00" "stain%2:30:01" "stain%2:30:04"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::startle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("startle%2:37:00"))
     (LF-PARENT ont::provoke)
     (example "the thunder startled him [into action]")
     (TEMPL cause-affected-effect-optional-templ (xp (% w::pp (w::ptype (? pt w::into))))) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::stash
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("put-9.1-1"))
     (LF-PARENT ONT::put-away) ; like stow
     )
    )
   )
  (W::steam-bake
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
     (LF-PARENT ONT::cooking) ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::stimulate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("stimulate%2:29:00" "stimulate%2:37:00" "stimulate%2:39:00"))
     (LF-PARENT ont::provoke)
     (example "the speech stimulated the crowd (in)to action")
     (TEMPL cause-affected-effect-optional-templ (xp (% w::pp (w::ptype (? pt w::into))))) ; like annoy,bother,concern,hurt
      )
    ((LF-PARENT ont::provoke)
     (TEMPL cause-effect-affected-optional-templ (xp (% w::pp (w::ptype (? pt w::in w::among))))) ; like annoy,bother,concern,hurt
     (example "the lecture stimulated conversation [among the crowd]")
     )
    )
   )
  (W::sting
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("sting%2:37:00"))
     (LF-PARENT ONT::evoke-injury)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::stir
   (wordfeats (W::morph (:forms (-vb) :nom W::stir)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("stir%2:36:00" "stir%2:37:01"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin caet :entry-date 20120128 :comments g3)
     (LF-PARENT ONT::stir)
     (example "the wind stirred the leaves" "the cook stirred the broth")
     (TEMPL cause-theme-xp-templ)
     )
    )
   )
  ((W::stir w::fry)
   (wordfeats (W::morph (:forms (-vb) :past (W::stir w::fried) :ing( W::stir w::frying) )))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("cooking-45.3"))
     (LF-PARENT ONT::cooking) ; like bake,blanch,boil,braise,cook,fry
     )
    )
   )
  (W::stomp
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("stomp%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::stoop
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("stoop%2:38:00" "stoop%2:38:04"))
     ;(LF-PARENT ONT::body-movement)
     (lf-parent ont::getup-liedown-bow-crouch-kneel-rise-slouch-slump-sprawl-squat-stoop) ;; 20120523 GUM change new parent
     (TEMPL agent-templ) ; like (lie
     )
    )
   )
  (W::straddle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("assuming_position-50") :wn ("stoop%2:38:00" "stoop%2:38:04"))
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::straddle) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("straddle%2:42:01" "straddle%2:42:02"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  

    (W::stray
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("?stray%2:38:02" "stray%2:38:00" "stray%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::streak
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("streak%2:38:00" "streak%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::stride
   (wordfeats (W::morph (:forms (-vb) :past W::strode :pastpart W::stridden :ing W::striding)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("stride%2:38:00" "stride%2:38:03"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::strut
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("strut%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::stumble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("stumble%2:38:00" "stumble%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::stump
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("stump%2:31:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("stump%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::stun
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("stun%2:37:00" "stun%2:39:00"))
     (LF-PARENT ONT::evoke-surprise)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::stupefy
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("stupefy%2:31:00" "stupefy%2:39:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::style
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::categorization)
     (TEMPL cognizer-theme-xp-templ) ; like label
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4") :wn ("style%2:36:01"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
;  (W::submit
;   (SENSES
;    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("contribute-13.2-1-1"))
;     (LF-PARENT ONT::submit)
;     (TEMPL agent-theme-recipient-alternation-templ) ; like surrender
;     )
;    )
;   )
  (W::suffer
   (wordfeats (W::morph (:forms (-vb) :past W::suffered :ing w::suffering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("suffer%2:29:00" "suffer%2:29:03" "suffer%2:37:00"))
     (LF-PARENT ONT::enduring)
     (TEMPL experiencer-action-objcontrol-templ) ; like hate,like,love
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("suffer%2:29:00" "suffer%2:29:03" "suffer%2:37:00"))
     (LF-PARENT ONT::enduring)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::sunder
   (wordfeats (W::morph (:forms (-vb) :past W::sundered :ing W::sundering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("sunder%2:30:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::support
   (wordfeats (W::morph (:forms (-vb) :nom W::support)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("support%2:31:04" "support%2:41:00" "support%2:41:01"))
     (LF-PARENT ONT::experiencer-emotion)
     (TEMPL experiencer-action-objcontrol-templ) ; like hate,like,love
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("support%2:31:04" "support%2:41:00" "support%2:41:01"))
     (LF-PARENT ONT::experiencer-emotion)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    ;; the foundation supports the building
    )
   )
  (W::surprise
   (wordfeats (W::morph (:forms (-vb) :nom w::surprise)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("surprise%2:31:00"))
     (LF-PARENT ONT::evoke-surprise)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )

  (W::suspect
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::expectation)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like realize
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::suppose)
     (TEMPL cognizer-templ) ; like guess
     )
    )
   )
  (W::swagger
   (wordfeats (W::morph (:forms (-vb) :past W::swaggered :ing W::swaggering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("swagger%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::sweat
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("sweat%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (example "he sweated blood")
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("sweat%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
  (W::sweep
   (wordfeats (W::morph (:forms (-vb) :past W::swept :ing W::sweeping)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("funnel-9.3-2-1"))
     (LF-PARENT ONT::unload)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype (? t w::off w::from))))) ; like dump
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("sweep%2:35:03" "sweep%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  ((W::bloat (w::up))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (examples "his stomach bloated up")
     (templ theme-unaccusative-templ)
     )
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (examples "fluid bloats his stomach up")
     (preference .92) ;; ?? prefer intransitive
     (templ cause-theme-xp-templ)
     )
    )
   )
   
  (W::bloat
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (examples "his stomach bloated")
     (templ theme-unaccusative-templ)
     )
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (examples "fluid bloats his stomach" "rain bloats the river")
     (preference .95) ;; prefer intransitive     (preference .95) ;; prefer intransitive
     (templ cause-theme-xp-templ)
     )
    )
   )

  (W::constipate
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090129 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::clog)
     (SYNTAX (w::resultative +))
     (examples "this food constipates him")
     (templ cause-theme-xp-templ)
     )
    )
   )

  (W::clog
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090129 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::clog)
     (SYNTAX (w::resultative +))
     (examples "his arteries clogged")
     (templ theme-unaccusative-templ)
     )
    ((meta-data :origin cardiac :entry-date 20090129 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::clog)
     (SYNTAX (w::resultative +))
     (preference .95) ;; prefer intransitive
     (examples "rich food clogs his arteries")
     (templ cause-theme-xp-templ)
     )
    )
   )

  ((W::clog (w::up))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090129 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::clog)
     (SYNTAX (w::resultative +))
     (examples "his arteries clogged up")
     (templ theme-unaccusative-templ)
     )
    ((meta-data :origin cardiac :entry-date 20090129 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::clog)
     (SYNTAX (w::resultative +))
     (preference .95) ;; prefer intransitive
     (examples "rich food clogs up his arteries")
     (templ cause-theme-xp-templ)
     )
    )
   )

  
  ((W::puff (w::up))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (examples "his ankles puffed up")
     (templ theme-unaccusative-templ)
     )
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (preference .92) ;; prefer intransitive
     (examples "fluid puffs his stomach up")
     (templ cause-theme-xp-templ)
     )
    )
   )
   
  (W::puff
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (examples "the rice puffed")
     (templ theme-unaccusative-templ)
     )
    )
   )
  (W::swell
   (wordfeats (W::morph (:forms (-vb) :past W::swelled :pastpart W::swollen :ing W::swelling)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("swell%2:30:00" "swell%2:30:02"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (templ theme-unaccusative-templ)
 ; like ferment
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (preference .92) ;; this is a rare usage; prefer intransitive
     (example "the medication swelled his ankles")
     (templ cause-theme-xp-templ)
 ; like ferment
     )
    )
   )
  ((W::swell w::up)
   (wordfeats (W::morph (:forms (-vb) :past W::swelled :pastpart W::swollen :ing W::swelling)))
   (SENSES
    ((meta-data :origin chf :entry-date 20070810 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("swell%2:30:00" "swell%2:30:02"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (templ theme-unaccusative-templ)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (preference .92) ;; prefer intransitive
     (example "the medication swelled up his ankles")
     (templ cause-theme-xp-templ)
 ; like ferment
     )
;    ((meta-data :origin cardiac :entry-date 20080228 :change-date nil :comments nil)
;     (LF-PARENT ONT::bodily-process)
;     (SYNTAX (w::resultative +))
;     (TEMPL theme-unaccusative-templ) ; like bleed
;     )
    )
   )
   ((W::swelled w::up)
    (wordfeats (W::morph (:forms NIL)) (W::vform W::pastpart))
   (SENSES
    ((meta-data :origin chf :entry-date 20070810 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("swell%2:30:00" "swell%2:30:02"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (templ theme-unaccusative-templ)
     )
;    ((meta-data :origin cardiac :entry-date 20080228 :change-date nil :comments nil)
;     (LF-PARENT ONT::bodily-process)
;     (TEMPL theme-unaccusative-templ) ; like bleed
;     )
    )
   )
  (W::swelled
   ;; alternate pastpart
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pastpart))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::swell)
     (SYNTAX (w::resultative +))
     (preference .92)
     (templ theme-unaccusative-templ)
 ; like ferment
     )
    )
   )
  (w::subside
   (senses
   ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090504 :comments LM-vocab :vn ("entity_specific_cos-45.5"))
    (LF-PARENT ONT::shrink)
    (SYNTAX (w::resultative +))
    (templ theme-unaccusative-templ)
    (example "the swelling subsided")
    )
   )
 )
  (W::swim
   (wordfeats (W::morph (:forms (-vb) :past W::swam :pastpart W::swum :ing W::swimming)))
   (SENSES
    ((meta-data :origin calo-ontology :entry-date 20060117 :change-date nil :comments calo-y3 :vn ("run-51.3.2") :wn ("swim%2:38:00"))
     (LF-PARENT ONT::swim)
     (example "does the hotel have a swimming pool")
     (TEMPL agent-templ)
     )
    )
   )
  (W::synthesize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("create-26.4"))
     (LF-PARENT ONT::create)
 ; like produce
     )
    )
   )
    (W::tack
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("nonvehicle-51.4.2") :wn ("tack%2:38:00"))
     (LF-PARENT ONT::ride) ;; theme should be restricted to boats
 ; like ride
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("tack%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::tail
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chase-51.6") :wn ("tail%2:38:00"))
     (LF-PARENT ONT::follow)
 ; like track
     )
    )
   )
  (W::tantalize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("tantalize%2:32:00"))
     (LF-PARENT ont::provoke)
     (TEMPL cause-affected-effect-optional-templ (xp (% w::pp (w::ptype (? pt w::into))))) ; like annoy,bother,concern,hurt    
     )
    )
   )
  (W::tarnish
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5"))
     (templ cause-theme-xp-templ)
     (LF-PARENT ONT::deteriorate)
 ; like ferment
     )
    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
     (LF-PARENT ONT::deteriorate)
     (example "the silver tarnished") ;?
     (templ theme-templ)
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::team
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amalgamate-22.2-2"))
     (LF-PARENT ONT::associate)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::with)))) ; like associate
     )
    )
   )
  (W::tease
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("tease%2:32:00" "tease%2:37:00"))
     (LF-PARENT ont::provoke)
     (TEMPL cause-affected-effect-optional-templ (xp (% w::pp (w::ptype (? pt w::into))))) ; like annoy,bother,concern,hurt   
      )
    )
   )
  (W::tempt
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He tempted him [to run for office]")     
     )
    ((LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-xp-TEMPL)  ; like annoy,bother,concern,hurt
     (example "he tempted fate")
     )
    ;; he tempted him into running for office
    )
   )
  (W::terrify
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("terrify%2:37:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::terrorize
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("terrorize%2:37:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::threaten
   (wordfeats (W::morph (:forms (-vb) :past W::threatened :ing W::threatening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("threaten%2:42:00"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::thrill
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("thrill%2:37:01" "thrill%2:37:02" "thrill%2:39:00"))
     (LF-PARENT ont::experiencer-obj)
     (TEMPL cause-theme-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::thrive
   (SENSES
    ((meta-data :origin "verbnet-1.5-corrected" :entry-date 20051219 :change-date nil :comments nil :vn ("grow-26.2"))
     (LF-PARENT ONT::grow)
     (TEMPL theme-templ) ; like grow
     (example "the garden thrived")
     )
    )
   )
  (W::tickle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("tickle%2:37:01"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-discomfort)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::tint
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24") :wn ("tint%2:30:00"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24") :wn ("tint%2:30:00"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::tiptoe
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("tiptoe%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::tire
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("amuse-31.1") :wn ("tire%2:37:01"))
     (LF-PARENT ont::experiencer-obj)
     (TEMPL cause-theme-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  ((W::tire (w::out))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090511 :comments LM-vocab)
     (LF-PARENT ONT::cause-body-effect)
     (syntax (w::resultative +)) 
     (TEMPL cause-theme-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  ((W::wear (w::out))
   (wordfeats (W::morph (:forms (-vb) :past W::wore :pastpart W::worn :ing W::wearing)))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20080508 :change-date 20090511 :comments LM-vocab)
     (LF-PARENT ONT::cause-body-effect)
     (syntax (w::resultative +)) 
     (TEMPL cause-theme-xp-templ) ; like annoy,bother,concern,hurt
     )
    )
   )
  (W::titillate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("titillate%2:37:00"))
     (LF-PARENT ONT::evoke-attraction)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::toddle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("toddle%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::tolerate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("admire-31.2") :wn ("tolerate%2:31:00"))
     (LF-PARENT ONT::enduring)
     (example "he doesn't tolerate whiners")
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::torment
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("torment%2:37:00" "torment%2:37:01"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::total
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("register-54.1") :wn ("total%2:42:00"))
     (LF-PARENT ONT::weigh)
 ; like weigh
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("register-54.1") :wn ("total%2:42:00"))
     (LF-PARENT ONT::weigh)
     (TEMPL theme-value-templ) ; like weigh
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090910 :comments nil :vn ("register-54.1") :wn ("total%2:42:00"))
     (LF-PARENT ONT::register)
     (TEMPL instrument-property-templ) ; like measure
     )
    )
   )
  (W::totaled
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("register-54.1"))
     (LF-PARENT ONT::weigh)
 ; like weigh
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("register-54.1"))
     (LF-PARENT ONT::weigh)
     (TEMPL theme-value-templ) ; like weigh
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090910 :comments nil :vn ("register-54.1"))
     (LF-PARENT ONT::register)
     (TEMPL instrument-property-templ) ; like measure
     )
    )
   )
  (W::totaling
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("register-54.1"))
     (LF-PARENT ONT::weigh)
 ; like weigh
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("register-54.1"))
     (LF-PARENT ONT::weigh)
     (TEMPL theme-value-templ) ; like weigh
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090910 :comments nil :vn ("register-54.1"))
     (LF-PARENT ONT::register)
     (TEMPL instrument-property-templ) ; like measure
     )
    )
   )
  (W::totter
   (wordfeats (W::morph (:forms (-vb) :past W::tottered :ing W::tottering)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("totter%2:38:00" "totter%2:38:01" "totter%2:38:02"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::touch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("touch%2:37:00"))
     (LF-PARENT ONT::evoke-attraction)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("contiguous_location-47.8-1"))
     (LF-PARENT ONT::intersect)
     (TEMPL theme-co-theme-xp-templ) ; like cross,hit,meet
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("contiguous_location-47.8-1"))
     (LF-PARENT ONT::intersect)
     (TEMPL theme-plural-templ)
     )
    )
   )
  (W::trade
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("exchange-13.6-1"))
     (LF-PARENT ONT::replacement)
 ; like exchange
     )
    )
   )
  (W::trail
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chase-51.6") :wn ("trail%2:38:00"))
     (LF-PARENT ONT::follow)
 ; like track
     )
    )
   )
  (W::traipse
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("traipse%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::tramp
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("tramp%2:38:00" "tramp%2:38:01" "tramp%2:38:02" "tramp%2:38:03"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
; duplicate
;  (W::treasure
;   (SENSES
;    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("treasure%2:37:00" "treasure%2:40:00"))
;     (LF-PARENT ONT::experiencer-emotion)
;     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
;     )
;    )
;   )
  (W::trek
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("trek%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::troop
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("troop%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::trot
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("trot%2:38:00" "trot%2:38:01" "trot%2:38:02"))
     (LF-PARENT ONT::move-rapidly)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::trouble
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("trouble%2:37:00" "trouble%2:37:01"))
     (LF-PARENT ONT::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::trudge
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("trudge%2:38:00" "trudge%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::trundle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("trundle%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::tug
   (SENSES
;    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carry-11.4") :wn ("tug%2:35:00" "tug%2:35:01" "tug%2:35:02" "tug%2:35:03" "tug%2:35:04"))
;     (LF-PARENT ONT::move)
; ; like drag
;     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("push-12-1"))
     (LF-PARENT ONT::pull)
     (TEMPL cause-theme-xp-templ) ; like pull
     )
    )
   )
  (W::unbolt
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unbolt%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unbuckle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unbuckle%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
   (W::button
    (wordfeats (W::morph (:forms (-vb) :past W::buttoned :ing W::buttoning)))
   (SENSES
    ((meta-data :origin trips :entry-date 20090401 :change-date nil :comments nil)
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
  (W::unbutton
    (wordfeats (W::morph (:forms (-vb) :past W::unbuttoned :ing W::unbuttoning)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unbutton%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unchain
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unchain%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unclamp
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unclasp
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unclip
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unclip%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unfasten
   (wordfeats (W::morph (:forms (-vb) :past W::unfastened :ing W::unfastening)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unfasten%2:35:00" "unfasten%2:35:01"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unglue
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unhinge
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unhinge%2:30:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unlace
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
     )
    )
  (W::unlatch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unleash
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unleash%2:35:01"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unlock
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unlock%2:30:00" "unlock%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unnerve
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("unnerve%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::unpeg
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unpin
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unpin%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unscrew
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unscrew%2:35:00" "unscrew%2:35:01"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unsettle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("unsettle%2:37:00"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::unshackle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unstaple
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unstaple%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unstitch
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::untie
   (wordfeats (W::morph (:forms (-vb) :past W::untied :ing W::untying)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("untie%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::unzip
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("unzip%2:35:00"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like disconnect
     )
    )
   )
  (W::uplift
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("uplift%2:37:00"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::value
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090522 :comments nil :vn ("price-54.4") :wn ("value%2:31:00" "value%2:31:02" "value%2:31:03"))
     (LF-PARENT ONT::scrutiny)
     (templ cognizer-theme-xp-templ)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("value%2:31:01" "value%2:40:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )

    (W::varnish
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24") :wn ("varnish%2:35:00"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("coloring-24") :wn ("varnish%2:35:00"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like color,paint
     )
    )
   )
  (W::vault
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("vault%2:38:00" "vault%2:38:01"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  (W::venerate
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("venerate%2:37:00"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
     )
    )
   )
  (W::vex
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090511 :comments nil :vn ("amuse-31.1") :wn ("vex%2:37:00"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::vote
   (SENSES
    ((LF-PARENT ONT::SELECT)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "who voted for/against Bush" "vote on the proposition")
      (TEMPL agent-theme-xp-templ (xp (% w::pp (w::ptype (? pt w::for w::on w::against))))) 
     )
     ((LF-PARENT ONT::SELECT)
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (example "the committee voted this morning")
     (TEMPL agent-templ) 
     )
    )
   )
  	  
	  (W::waddle
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("waddle%2:38:00"))
	     (LF-PARENT ONT::self-locomote)
	     (TEMPL agent-templ) ; like stroll,walk
	     )
	    )
	   )
	  (W::wade
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("wade%2:38:00"))
	     (LF-PARENT ONT::self-locomote)
	     (TEMPL agent-templ) ; like stroll,walk
	     )
	    )
	   )
	  (W::wander
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("wander%2:38:00" "wander%2:38:02"))
	     (LF-PARENT ONT::self-locomote)
	     (TEMPL agent-templ) ; like stroll,walk
	     )
	    )
	   )
	  (W::warrant
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("declare-29.4-2"))
	     (LF-PARENT ONT::believe)
	     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like think
	     )
	    )
	   )
	  (W::weary
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("weary%2:29:00"))
	     (LF-PARENT ONT::evoke-tiredness)
	     (TEMPL cause-experiencer-xp-templ)
	     )
	    )
	   )
	  (W::weep
           (wordfeats (W::morph (:forms (-vb) :past W::wept :ing W::weeping)))
	   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("weep%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("weep%2:29:00"))
	     (LF-PARENT ONT::bodily-process)
	     (TEMPL theme-co-theme-xp-templ) ; like vomit
	     )
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("weep%2:29:00"))
	     (LF-PARENT ONT::bodily-process)
	     (TEMPL theme-templ) ; like bleed
	     )
	    )
	   )
	  (W::weld
	   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
     (LF-PARENT ONT::attach)
     (TEMPL agent-theme-co-theme-templ (xp (% w::pp (w::ptype w::to)))) ; like bind,glom,graft,bond,fasten,moor,bundle
     )
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("shake-22.3-2-1"))
	     (LF-PARENT ONT::combine-objects)
	     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype (? pt w::to))))) ; like append
	     )
	    )
	   )
	  ;; need a new name for this -- ont::wheel is taken
	  (W::wheel
	   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5") :wn ("wheel%2:38:04"))
     (LF-PARENT ONT::wheel-drive)
 ; like drive
     )
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("drive-11.5") :wn ("wheel%2:38:04"))
	     (LF-PARENT ONT::wheel-drive)
	     (TEMPL instrument-theme-templ) ; like drive
	     )
	    )
	   )
	  (W::whiz
           (wordfeats (W::morph (:forms (-vb) :past W::whizzed :ing W::whizzing)))
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2"))
	     (LF-PARENT ONT::move-rapidly)
	     (TEMPL agent-templ) ; like stroll,walk
	     )
	    )
	   )
	  (W::wield
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("hold-15.1-1"))
	     (LF-PARENT ONT::body-manipulation)
					; like grasp,hold
	     )
	    )
	   )
	 (W::will
	  (SENSES
	   ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("future_having-13.3") :wn ("will%2:40:00"))
	    (LF-PARENT ONT::future-giving)
	    (TEMPL agent-theme-recipient-alternation-templ) ; like owe
	    ;; MD 2009/03/18 -- this preference has to be kept quite low or otherwise constructions like
	    ;; "I think they will light" parse with "will" as future-giving
	    ;; It should not matter in general because common forms like "willed" and "willing" could not be confused with an auxilliary
	    (preference 0.94)
	    )
	   )
	  )
	  (W::wilt
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("wilt%2:30:00"))
	     (templ cause-theme-xp-templ)
	     (LF-PARENT ONT::deteriorate)
					; like ferment
	     )
	    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
	     (LF-PARENT ONT::deteriorate)
	     (example "the flowers wilted")
	     (w::resultative +)
	     (templ theme-templ)
	     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
	     )
	    )
	   )

	  (W::wither
	    (wordfeats (W::morph (:forms (-vb) :past W::withered :ing W::withering)))
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("entity_specific_cos-45.5") :wn ("wither%2:30:00"))
	     (templ cause-theme-xp-templ)
	     (LF-PARENT ONT::shrink)
					; like ferment
	     )
	    ((meta-data :origin step :entry-date 20080623 :change-date 20090504 :comments nil)
	     (LF-PARENT ONT::shrink)
	     (example "the plants withered")
	     (templ theme-templ)
	     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
	     )
	    )
	   )
	  (W::witness
	   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("sight-30.2") :wn ("witness%2:39:00" "witness%2:39:01"))
     (LF-PARENT ONT::scrutiny)
     (TEMPL cognizer-theme-xp-templ) ; like regard
     )
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("sight-30.2") :wn ("witness%2:39:00" "witness%2:39:01"))
	     (LF-PARENT ONT::active-perception)
	     (TEMPL experiencer-theme-xp-templ) ; like observe,view,watch
	     )
	    )
	   )
	  (W::worship
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("admire-31.2") :wn ("worship%2:37:00" "worship%2:37:01"))
	     (LF-PARENT ONT::appreciate)
	     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss
	     )
	    )
	   )
	  (W::wow
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090512 :comments nil :vn ("amuse-31.1") :wn ("wow%2:37:00"))
	     (LF-PARENT ONT::evoke-excitement)
	     (TEMPL cause-experiencer-xp-templ)
	     )
	    )
	   )
	  (W::wreck
	   (SENSES
	    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090504 :comments nil :vn ("destroy-44") :wn ("wreck%2:35:00"))
	     (LF-PARENT ONT::destroy)
					; like waste
	     )
	    )
	   )
  (W::wrinkle
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("bend-45.2") :wn ("?wrinkle%2:35:00" "wrinkle%2:30:10" "wrinkle%2:35:01" "wrinkle%2:35:02"))
     (LF-PARENT ONT::fold)
					; like fold
     )
    )
   )
  (W::yak
   (wordfeats (W::morph (:forms (-vb) :past W::yakked :ing W::yakking)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("chit_chat-37.6"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-templ) ; like argue,chat
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("chit_chat-37.6"))
     ;;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL agent-about-theme-addressee-optional-templ) ; like argue,chat
     )
    )
   )
  (W::yank
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("push-12-1"))
     (LF-PARENT ONT::pull)
     (TEMPL cause-theme-xp-templ) ; like pull
     )
    )
   )
  (W::yield
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("future_having-13.3") :wn ("yield%2:40:01"))
     (LF-PARENT ONT::surrender)
     (TEMPL agent-theme-to-recipient-optional-templ) ; like grant,offer
     )
    )
   )
  (W::zigzag
   (wordfeats (W::morph (:forms (-vb) :past W::zigzagged :ing W::zigzagging)))
   (SENSES
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("zigzag%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like stroll,walk
     )
    )
   )
  )
  )

(define-words :pos W::v :templ agent-theme-xp-templ
 :words (
  (W::FedEx
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::send)
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     )
    )
   )
  (W::UPS
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::send)
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     )
    )
   )
  (W::abet
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("help-70-1"))
     (LF-PARENT ONT::help)
     (TEMPL cause-affected-xp-templ) ; like help
     )
    )
   )
  (W::abolish
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1"))
     (LF-PARENT ONT::prohibit)
     (TEMPL cause-effect-xp-templ)
     (example "abolish slavery")
     )
    )
   )
  (W::abuse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("abuse%2:30:00" "abuse%2:32:00" "abuse%2:41:00"))
     (LF-PARENT ont::abuse)
     (TEMPL agent-affected-xp-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::abuse)
     (example "he abused his influence")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::acclaim
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("acclaim%2:32:00"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he acclaimed the proposal")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::accrue
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090429 :comments nil :vn ("obtain-13.5.2"))
     (LF-PARENT ONT::amass)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::accumulate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090429 :comments nil :vn ("obtain-13.5.2") :wn ("?accumulate%2:40:00" "accumulate%2:35:00"))
     (LF-PARENT ONT::amass)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::stockpile
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090429 :change-date nil :comments nil :vn ("obtain-13.5.2"))
     (LF-PARENT ONT::amass)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::accurse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "the accursed pill")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::admit
   (wordfeats (W::morph (:forms (-vb) :nom W::admission)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("confess-37.10"))
     ;;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype (? c w::s-that))))) ; like acknowledge
     )
     (;;(LF-PARENT ONT::enroll)
     (lf-parent ont::admit) ; 20120524 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "he was admitted to the building")
     (meta-data :origin cardiac :entry-date 20090422 :change-date nil :comments nil)
     (templ agent-goal-xp-templ (xp (% W::PP (W::ptype (? t w::into W::to W::at)))))
     )
     (;;(LF-PARENT ONT::enroll)
     (lf-parent ont::admit) ; 20120524 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "he was admitted yesterday")
     (meta-data :origin cardiac :entry-date 20090422 :change-date nil :comments nil)
     (templ agent-templ)
     (preference .98)
     )
    )
   )
  (W::aggrieve
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     )
    )
   )
  (W::aid
   (wordfeats (W::morph (:forms (-vb) :nom W::aid)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("help-70-1"))
     (LF-PARENT ONT::help)
     (TEMPL cause-effect-xp-templ) ; like help
     )
    )
   )
  (W::airmail
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::send)
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     )
    )
   )
  (W::alert
   (wordfeats (W::morph (:forms (-vb) :nom W::alert)))
   (SENSES
    ((EXAMPLE "alert the people")
     (LF-PARENT ONT::inform)
     (TEMPL AGENT-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL (xp (% w::PP (w::ptype (? ptp w::about w::to)))))
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9") :wn ("alert%2:32:00"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ) ; like inform
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("advise-37.9") :wn ("alert%2:32:00"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-associated-information-templ) ; like notify
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("advise-37.9") :wn ("alert%2:32:00"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like notify
     )
    )
   )
  (W::amass
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("herd-47.5.2") :wn ("amass%2:30:00" "amass%2:40:00"))
     (LF-PARENT ONT::meet)
     (TEMPL theme-plural-templ) ; like congregate,assemble,gather
     )
    )
   )
  (W::applaud
     (wordfeats (W::morph (:forms (-vb) :nom W::applause)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("applaud%2:32:00"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he applauded the proposal")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::applique
   (wordfeats (W::morph (:forms (-vb) :past W::appliqued :ing W::appliqueing :nom applique)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("applique%2:36:00"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::apportion
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("future_having-13.3"))
     (LF-PARENT ONT::assign)
     (TEMPL agent-theme-to-recipient-optional-templ) ; like yield
     )
    )
   )
  (W::appraise
     (wordfeats (W::morph (:forms (-vb) :nom W::appriasal)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090522 :comments nil :vn ("price-54.4") :wn ("appraise%2:31:01"))
     (LF-PARENT ONT::scrutiny)
     (templ cognizer-theme-xp-templ)
     )
    )
   )
  (W::appropriate
     (wordfeats (W::morph (:forms (-vb) :nom W::appropriation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090430 :comments nil :vn ("obtain-13.5.2") :wn ("appropriate%2:31:00" "appropriate%2:40:00"))
     (LF-PARENT ONT::appropriate)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::approximate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090522 :comments nil :vn ("price-54.4"))
     (LF-PARENT ONT::becoming-aware-of-value)
     (templ cognizer-theme-xp-templ)
     )
    )
   )
  (W::ascertain
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090513 :comments nil :vn ("discover-84"))
     (LF-PARENT ONT::coming-to-believe)
 ; like discover
     (templ cognizer-theme-xp-templ)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("discover-84"))
     (LF-PARENT ONT::coming-to-believe)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like discover
     )
    )
   )
  (W::assail
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::objective-influence)
     (example "the smell assailed his senses")
     (TEMPL cause-affected-xp-templ) 
     )
    )
   )
  (W::assault
     (wordfeats (W::morph (:forms (-vb) :nom W::assault)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::objective-influence)
     (example "the smell assualted his senses")
     (TEMPL cause-affected-xp-templ) 
     )
    )
   )
  (W::assist
     (wordfeats (W::morph (:forms (-vb) :nom W::assist)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("help-70-1"))
     (LF-PARENT ONT::help)
     (TEMPL cause-effect-xp-templ) ; like help
     )
    )
   )
  (W::assure
     (wordfeats (W::morph (:forms (-vb) :nom W::assurance)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ) ; like inform
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("advise-37.9"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-associated-information-templ) ; like notify
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("advise-37.9"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like notify
     )
    )
   )
  (W::attack
   (wordfeats (W::morph (:forms (-vb) :nom W::attack)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "the army attacked the city")
     (TEMPL agent-theme-xp-templ) 
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::objective-influence)
     (example "the virus attacked his immune system")
     (TEMPL cause-affected-xp-templ) 
     )
    )
   )
  (W::attain
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090513 :comments nil :vn ("get-13.5.1"))
     (LF-PARENT ONT::complete)
     )
    ((meta-data :origin "step" :entry-date 20080625 :change-date nil :comments nil)
     (LF-PARENT ONT::reach)
     (example "the piston attains an extreme position during a stroke")
     (TEMPL theme-goal-xp-templ)
     )
    )
   )
  (W::backbite
   (wordfeats (W::morph (:forms (-vb) :past W::backbit :pastpart W::backbitten :ing W::backbiting)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("backbite%2:32:00"))
     (LF-PARENT ont::complain)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::balk
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6"))
     (LF-PARENT ONT::refuse)
     (example "he balked at the obstacle")
     (TEMPL cause-ioeffect-xp-templ (xp (% w::pp (w::ptype w::at))))
     )
    )
   )
  (W::bamboozle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL cause-affected-xp-templ) ; like dare
     )
    ; he bamboozled him into believing him
    )
   )
  (W::ban
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::prohibit)
     (TEMPL CAUSE-EFFECT-XP-TEMPL)
     (example "The hospital banned smoking")
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::prohibit)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It bans him from doing something")
     )
    )
   )
  (W::banish
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("banish-10.2") :wn ("banish%2:38:00" "banish%2:41:00" "banish%2:41:01" "banish%2:41:02"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::bank
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("rely-70"))
     (LF-PARENT ont::rely)
     (TEMPL theme-co-theme-xp-templ (xp (% w::pp (w::ptype w::on)))) ; like rely,depend,count
     )
    )
   )
  (W::bar
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
 ; like block
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It bars him from doing something")
     )
    )
   )
  (W::bargain
   (wordfeats (W::morph (:forms (-vb) :nom W::bargain)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("rely-70"))
     (LF-PARENT ont::rely)
     (TEMPL theme-co-theme-xp-templ (xp (% w::pp (w::ptype w::on)))) ; like rely,depend,count
     )
    )
   )
  (w::beat
   (wordfeats (W::morph (:forms (-vb) :past W::beat :pastpart W::beaten :ing W::beating :nom w::beat)))
   (SENSES
    ((meta-data :origin chf :entry-date 20070809 :change-date nil :comments nil)
     (LF-PARENT ont::rhythmic-motion)
     (TEMPL theme-templ)
     (example "his heart was beating fast")
     )
    ((meta-data :origin ptb :entry-date 20100526 :change-date nil :comments nil)
     (LF-PARENT ont::crush)
     (TEMPL cause-affected-xp-templ)
     (example "")
     )
    )
   )
  (W::beam
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("beam%2:29:00" "beam%2:32:01"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::befall
   (wordfeats (W::morph (:forms (-vb) :past W::befell :pastpart W::befallen :ing W::befalling)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("occurrence-48.3"))
     (LF-PARENT ONT::happen)
     (TEMPL theme-templ) ; like occur,happen
     )
    )
   )
  (W::befuddle
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-confusion)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     )
    )
   )
  (W::belittle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he belittled it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::bereave
   (wordfeats (W::morph (:forms (-vb) :past W::bereft)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6") :wn ("bereave%2:40:00"))
     (LF-PARENT ONT::deprive)
     (TEMPL cause-affected-effect-optional-templ (xp (% W::PP (W::ptype W::of))))
     )
    )
   )
  (W::berth
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("pocket-9.10-1"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-templ) ; like land
     )
    )
   )
  (W::bewail
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("admire-31.2"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    )
   )
  (W::bilk
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090605 :comments nil :vn ("cheat-10.6") :wn ("bilk%2:41:00"))
     (LF-PARENT ONT::take-by-deception)
     (TEMPL AGENT-source-theme-optional-TEMPL)
     )
    )
   )
  (W::blame
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::accuse)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::accuse)
     (example "he blamed it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::blanket
   (wordfeats (W::morph (:forms (-vb) :past W::blanketed :ing W::blanketing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090911 :comments nil :vn ("contiguous_location-47.8") :wn ("blanket%2:35:00" "blanket%2:42:00"))
     (LF-PARENT ONT::cover)
     (TEMPL co-theme-theme-xp-templ)
     (example "snow blankets the ground")
     )
    ((LF-PARENT ONT::cover)
     (TEMPL AGENT-THEME-CO-THEME-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? pt W::with W::in)))))
;     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "blanket the ground with snow")
     (meta-data :origin trips :entry-date 20090911 :change-date nil :comments nil)
     )
    )
   )
  (W::blaspheme
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::insult)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::insult)
     (example "he blasphemed it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  
  (W::bless
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("bless%2:32:00" "bless%2:40:00"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he blessed it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::blow
   (wordfeats (W::morph (:forms (-vb) :past W::blew :pastpart W::blown :ing W::blowing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("blow%2:43:00"))
     (LF-PARENT ONT::atmospheric-event)
     (example "it blew")
     (TEMPL expletive-templ) ; like rain
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("blow%2:43:00"))
     (LF-PARENT ONT::atmospheric-event)
     (example "the wind blew")
     (TEMPL theme-templ) 
     )
    )
   )
  (W::borrow
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("obtain-13.5.2") :wn ("borrow%2:40:00"))
     (LF-PARENT ONT::borrow)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::boycott
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("avoid-52"))
     (LF-PARENT ONT::avoiding)
 ; like circumvent,evade,avoid
     )
    )
   )
  (W::bracket
   (wordfeats (W::morph (:forms (-vb) :past W::bracketed :ing W::bracketing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::breakfast
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ONT::consume)
     (preference .95)
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on)))) ; like dine
     )
    )
   )
  (W::brew
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("preparing-26.3-1"))
     (LF-PARENT ONT::cooking)
 ; like prepare
     )
    )
   )
  (W::bridge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("bridge%2:42:00"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::brief
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("advise-37.9"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ) ; like inform
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("advise-37.9"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-associated-information-templ) ; like notify
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("advise-37.9"))
     (LF-PARENT ONT::inform)
     (TEMPL agent-addressee-theme-optional-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like notify
     )
    )
   )
  (W::brush
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::bus
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
 ; like shuttle
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
     (TEMPL instrument-theme-templ) ; like shuttle
     )
    )
   )
  (W::bussed
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
 ; like shuttle
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
     (TEMPL instrument-theme-templ) ; like shuttle
     )
    )
   )
  (W::bussing
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
 ; like shuttle
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
     (TEMPL instrument-theme-templ) ; like shuttle
     )
    )
   )
  (W::cackle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("cackle%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::cadge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("obtain-13.5.2") :wn ("cadge%2:40:00" "cadge%2:40:01"))
     (LF-PARENT ONT::acquire)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::calumniate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("calumniate%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::canvass
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("investigate-35.4") :wn ("canvass%2:41:00" "canvass%2:41:01"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like explore,investigate,examine,test,survey,inspect
     )
    )
   )
; duplicate
;  (W::care
;   (SENSES
;    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("marvel-31.3-2"))
;     (LF-PARENT ONT::experiencer-emotion)
;     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype (? p w::about))))) ; like mind,worry
;     )
;    )
;   )
  (W::cash
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("get-13.5.1-1"))
     (LF-PARENT ONT::commerce-sell)
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
  (W::cast
   (wordfeats (W::morph (:forms (-vb) :past W::cast :ing W::casting)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("characterize-29.2") :wn ("cast%2:32:00" "cast%2:36:01"))
     (LF-PARENT ONT::classify)
     (TEMPL cognizer-theme-as-predicate-optional-templ) ; like interpret,classify
     )
    )
   )
  (W::castigate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("castigate%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he castigated it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::celebrate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("celebrate%2:41:02"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he celebrated it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::censure
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("censure%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he censured it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::certify
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("characterize-29.2") :wn ("certify%2:32:01" "certify%2:41:00" "certify%2:41:02"))
     (LF-PARENT ONT::categorization)
     (TEMPL cognizer-theme-as-predicate-optional-templ) ; like interpret,classify
     )
    )
   )
  (W::chance
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("occurrence-48.3"))
     (LF-PARENT ONT::happen)
     (example "he chanced to see it")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-AFFECTED-XP-TEMPL  (xp (% W::cp (W::ctype W::s-to))))
     )
    )
   )
  ((W::change (w::over)) ; not sure this works with morphology -- wdebeaum
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("convert-26.6.2-1"))
     (LF-PARENT ONT::replacement)
 ; like switch
     )
    )
   )
  (W::chasten
   (wordfeats (W::morph (:forms (-vb) :past W::chastened :ing W::chastening)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("chasten%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::chastise
   (SENSES
     ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("chastise%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he chastized it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::chastize
   (SENSES
     ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("chastise%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he chastized it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::cheat
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090605 :comments nil :vn ("cheat-10.6") :wn ("cheat%2:41:00"))
     (LF-PARENT ONT::take-by-deception)
     (TEMPL AGENT-source-theme-optional-TEMPL)
     )
    )
   )
  (W::chide
   (SENSES
     ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("chide%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
      ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he chided it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::chortle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("chortle%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::chronicle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("transcribe-25.4"))
     (LF-PARENT ONT::record)
 ; like tape,record
     )
    )
   )
  (W::chuckle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("chuckle%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::circle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::cleanse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("cleanse%2:30:05"))
     (LF-PARENT ONT::remove-parts)
     (TEMPL agent-source-theme-optional-templ) 
     )
    )
   )
  (W::cluster
   (wordfeats (W::morph (:forms (-vb) :past W::clustered :ing W::clustering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2"))
     (LF-PARENT ONT::joining)
 ; like gather,collect
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("herd-47.5.2") :wn ("cluster%2:35:00" "cluster%2:38:00"))
     (LF-PARENT ONT::meet)
     (TEMPL theme-plural-templ) ; like congregate,assemble,gather
     )
    )
   )
  (W::coax
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He coaxed him [to run for office]")   
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date 20090501 :comments nil :vn ("amuse-31.1") :wn ("tease%2:32:00" "tease%2:37:00"))
     (LF-PARENT ont::provoke)
     (example "he coaxed a promise [from them]")
     (TEMPL cause-effect-affected-optional-templ (xp (% w::pp (w::ptype (? pt w::from))))) ; like annoy,bother,concern,hurt   
      )
    )
   )
  (W::coerce
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He coerce him [to run for office]")  
     )
    ((LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-optional-TEMPL (xp (% w::pp (w::ptype (? pt w::from w::by)))))
     (example "he coerced a reaction [from the crowd]")
     )
    )
   )
  (W::coil
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("coil%2:38:00"))
     (LF-PARENT ONT::circular-move)
     (TEMPL theme-templ) ; like move,bounce
     )
    )
   )
  (W::collate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2"))
     (LF-PARENT ONT::collate)
 ; like gather,collect
     )
    )
   )
  (W::comb
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("comb%2:35:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::commend
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("commend%2:32:00" "commend%2:32:02"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he commended the proposal")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::commission
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He commissioned him [to run for office]")  
     )
    ((LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-optional-TEMPL (xp (% w::pp (w::ptype (? pt w::from w::by)))))
     (example "He commissioned a portrait [from the artist]")  
     )
    )
   )
  (W::compel
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He compelled him [to run for office]")  
     )
    ((LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-optional-TEMPL (xp (% w::pp (w::ptype (? pt w::from w::in)))))
     (example "His manner compelled respect [from the audience]")  
     )
    )
   )
  (W::compensate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("compensate%2:40:00"))
     (LF-PARENT ont::reward)
     (TEMPL agent-affected-xp-templ)
     )
    )
   )
  (W::compliment
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("compliment%2:32:00" "compliment%2:32:01"))
     (LF-PARENT ONT::congratulate)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::congratulate)
     (example "he complimented it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::condemn
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("condemn%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he condemned it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::condone
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he condoned it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::congratulate
   (SENSES
     ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("congratulate%2:32:00" "congratulate%2:32:01" "congratulate%2:32:11" "congratulate%2:37:00"))
     (LF-PARENT ONT::congratulate)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::conjure
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("create-26.4-1"))
     (LF-PARENT ONT::invention)
     (TEMPL cognizer-result-templ) ; like design
     )
    )
   )
  (W::consecrate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::categorization)
     (TEMPL cognizer-theme-bare-predicate-optional-templ) ; like name
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("dub-29.3-1"))
     (LF-PARENT ONT::categorization)
     (TEMPL cognizer-theme-xp-templ) ; like label,brand,nickname,name,baptize,crown,christen,style,anoint
     )
    )
   )
  (W::conserve
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("get-13.5.1"))
     (LF-PARENT ONT::reserve)
     (TEMPL agent-recipient-theme-templ) ; like reserve
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("get-13.5.1"))
     (LF-PARENT ONT::reserve)
     (TEMPL agent-theme-for-recipient-optional-templ) ; like reserve,book
     )
    )
   )
  (W::convene
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("herd-47.5.2") :wn ("convene%2:32:00" "convene%2:38:00"))
     (LF-PARENT ONT::meet)
     (TEMPL theme-plural-templ) ; like congregate,assemble,gather
     )
    )
   )
  (W::converge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("focus-87"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ (xp (% w::pp (w::ptype w::on)))) ; like concentrate,focus
     )
    )
   )
  ((W::cook w::up)
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("preparing-26.3-1"))
     (LF-PARENT ONT::cooking)
     )
    )
   )
  (W::cough
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("cough%2:29:00"))
     (LF-PARENT ont::bodily-process)
     (TEMPL theme-templ) ; like laugh
     )
    )
   )
  ((W::cough (w::up))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20090403 :change-date nil :comments nil)
     (LF-PARENT ont::bodily-process)
     (TEMPL theme-templ)
     )
    )
   )
   (W::wheeze
   (SENSES
    ((meta-data :origin cardic :entry-date 20090403 :change-date nil :comments nil :wn ("cough%2:29:00"))
     (LF-PARENT ont::bodily-process)
     (TEMPL theme-templ) 
     )
    )
   )
  (W::pant
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("cough%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) 
     )
    )
   )
  (W::choke
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     (LF-PARENT ont::bodily-process)
     (TEMPL theme-templ) ; like vomit
     )
    )
   )
    
  ((W::choke (w::up))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     (LF-PARENT ont::bodily-process)
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    )
   )
   ((W::cough (w::up))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     (LF-PARENT ont::bodily-process)
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    )
   )
  (W::credit
   (wordfeats (W::morph (:forms (-vb) :past W::credited :ing W::crediting)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090513 :comments nil :vn ("fulfilling-13.4.1-1"))
     (LF-PARENT ONT::giving)
     (TEMPL agent-recipient-theme-optional-templ)
     (example "We credit your account with $100")
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090513 :change-date nil :comments nil)
     (LF-PARENT ONT::judgement)
     (TEMPL agent-affected-theme-optional-templ  (xp (% W::PP (W::ptype (? pt w::with W::for)))))
     (example "We credited her for saving our jobs")
     )
    )
   )
  (W::criticize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("criticize%2:32:00" "criticize%2:33:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he criticized it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::cry
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("cry%2:29:00" "cry%2:29:02" "cry%2:32:01"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
   (W::bark
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("cry%2:29:00" "cry%2:29:02" "cry%2:32:01"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::cull
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6"))
     (LF-PARENT ONT::discard)
     (TEMPL agent-iotheme-xp-templ (xp (% w::pp (w::ptype w::of)))) ; like rid
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("remove-10.1") :wn ("cull%2:35:00" "cull%2:40:00"))
     (LF-PARENT ONT::discard)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like eliminate
     )
    )
   )
  (W::cultivate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("preparing-26.3-1"))
     (LF-PARENT ONT::cause-make)
 ; like prepare
     )
    )
   )
  (W::curse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he cursed him")
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he cursed it" "that cursed pill")
     (TEMPL agent-theme-xp-templ) 
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::insult)
     (example "he cursed")
     (preference .98)
     (TEMPL agent-templ) 
     )
    )
   )
  (W::dally
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("dally%2:38:00"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("dally%2:38:00"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::damn
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he damned it" "that damned pill")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::dangle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put_spatial-9.2-1"))
     (LF-PARENT ONT::be-at-loc)
     (TEMPL theme-templ) ; like hang,stand,sit
     )
    )
   )
  (W::dawdle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("dawdle%2:38:00" "dawdle%2:38:04"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("dawdle%2:38:00" "dawdle%2:38:04"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::decry
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("decry%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he decried it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::defame
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("defame%2:32:00"))
     (LF-PARENT ONT::defame)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::defame)
     (example "he defamed it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::defend
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("defend-85"))
     (LF-PARENT ONT::protecting)
 ; like protect
     )
    )
   )
  (W::deform
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("turn-26.6.1"))
     (LF-PARENT ONT::shape-change)
     (TEMPL agent-theme-xp-templ) ; like translate, but no result
     )
    )
   )
  (W::defraud
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090605 :comments nil :vn ("cheat-10.6") :wn ("defraud%2:41:00"))
     (LF-PARENT ONT::take-by-deception)
     (TEMPL AGENT-source-theme-optional-TEMPL)
     )
    )
   )
  (W::deify
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("admire-31.2"))
     (LF-PARENT ONT::appreciate)
     (TEMPL experiencer-theme-xp-templ) ; like worship,treasure,venerate,appreciate,prize,value
     )
    )
   )
  (W::denigrate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("denigrate%2:32:00" "denigrate%2:32:01"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he denigrated it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::denounce
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090506 :comments nil :vn ("judgement-33") :wn ("denounce%2:32:00" "denounce%2:41:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090506 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he denounced it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::dent
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::dent)
 ; like mash,squash,squish,crush,bruise
     )
    )
   )
  (W::denude
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6") :wn ("denude%2:30:00"))
     (LF-PARENT ONT::destroy-part-of-whole)
     (TEMPL AGENT-theme-co-theme-optional-TEMPL (xp (% W::PP (W::ptype W::of)))) ; like rid
     )
    )
   )
  (W::depict
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("characterize-29.2"))
     (LF-PARENT ONT::classify)
     (TEMPL cognizer-theme-as-predicate-optional-templ) ; like interpret,classify
     )
    )
   )
  (W::deplete
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("deplete%2:34:00"))
     (LF-PARENT ONT::empty)
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )
  (W::depopulate
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6") :wn ("depopulate%2:30:00"))
     (LF-PARENT ONT::destroy-part-of-whole)
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
  (W::deport
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("banish-10.2") :wn ("deport%2:41:00" "deport%2:41:01"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::depose
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::deprecate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("deprecate%2:32:00" "deprecate%2:32:01"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he deprecated it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::deprive
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6") :wn ("deprive%2:30:00" "deprive%2:40:00" "deprive%2:40:01"))
     (LF-PARENT ONT::deprive)
     (TEMPL cause-affected-effect-optional-templ (xp (% W::PP (W::ptype W::of))))
     )
    )
   )
  (W::deride
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("deride%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he derided it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::desecrate
   (wordfeats (W::morph (:forms (-vb) :nom w::desecration)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("destroy-44"))
     (LF-PARENT ONT::destroy)
 ; like extirpate,ravage,blitz,waste,annihilate,exterminate,shatter,ruin,wreck,destroy,decimate,obliterate,demolish,devastate,raze
     )
    )
   )
  (W::despoil
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("despoil%2:35:00" "despoil%2:40:00"))
     (LF-PARENT ONT::remove-from)
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )
  (W::deter
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
 ; like block
     )
      ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
       (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It deters him from doing something")
     )
    )
   )
  (W::diagnose
     (wordfeats (W::morph (:forms (-vb) :nom w::diagnosis)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("characterize-29.2") :wn ("diagnose%2:31:01"))
     (LF-PARENT ONT::classify)
     (TEMPL cognizer-theme-as-predicate-optional-templ) ; like interpret,classify
     )
    )
   )
  (W::disabuse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090602 :comments nil :vn ("cheat-10.6") :wn ("disabuse%2:32:00"))
     (LF-PARENT ONT::convince)
     (TEMPL AGENT-addressee-theme-optional-TEMPL (xp (% W::PP (W::ptype W::of)))) ; like rid
     )
    )
   )
  (W::disassemble
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("disassemble%2:36:00"))
     (LF-PARENT ONT::separation)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype (? t w::from))))) ; like detach
     )
    )
   )
  (W::disencumber
   (wordfeats (W::morph (:forms (-vb) :past W::disencumbered :ing W::disencumbering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("disencumber%2:35:00"))
     (LF-PARENT ONT::remove-from)
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )
  (W::disengage
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("remove-10.1") :wn ("disengage%2:35:00"))
     (LF-PARENT ONT::separation)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like eliminate
     )
    )
   )
  (W::disentangle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("separate-23.1-1"))
     (LF-PARENT ONT::separation)
 ; like divide
     )
    )
   )
  (W::disfigure
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("destroy-44"))
     (LF-PARENT ONT::destroy)
 ; like extirpate,ravage,blitz,waste,annihilate,exterminate,shatter,ruin,wreck,destroy,decimate,obliterate,demolish,devastate,raze
     )
    )
   )
  (W::disgorge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("disgorge%2:35:00"))
     (LF-PARENT ONT::push-out-of)
     (TEMPL agent-theme-source-optional-templ)
     (example "the whale disgorged Jonah [from its stomach]")
     )
    )
   )
  (W::dislodge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("remove-10.1") :wn ("dislodge%2:35:00" "dislodge%2:35:01"))
     (LF-PARENT ONT::separation)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like eliminate
     )
    )
   )
  (W::dismantle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from))))
 ; like unclip,unleash,unbolt,unhitch,unpin,unlatch,unglue,unstaple,unscrew,unlace,unbutton,unhook,unclamp,unclasp,sunder,unhinge,unshackle,detach,unlock,unpeg,unfasten,untie,unchain,unstitch,unbuckle,unzip     
     )
    )
   )
  (W::dismiss
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("dismiss%2:41:00"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::dismount
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from))))
 ; like unclip,unleash,unbolt,unhitch,unpin,unlatch,unglue,unstaple,unscrew,unlace,unbutton,unhook,unclamp,unclasp,sunder,unhinge,unshackle,detach,unlock,unpeg,unfasten,untie,unchain,unstitch,unbuckle,unzip
     )
    )
   )
  (W::disparage
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("disparage%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he disparaged it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::dispossess
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6") :wn ("dispossess%2:40:00"))
     (LF-PARENT ONT::deprive)
     (TEMPL cause-affected-effect-optional-templ (xp (% W::PP (W::ptype W::of))))
     )
    )
   )
  (W::dissociate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("separate-23.1-2"))
     (LF-PARENT ONT::separation)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype (? t w::from))))) ; like separate
     )
    )
   )
  (W::dissuade
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
 ; like block
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It dissuades him from doing something")
     )
    )
   )
  (W::distinguish
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("separate-23.1-1"))
     (LF-PARENT ONT::separation)
 ; like divide
     )
    )
   )
  (W::dither
   (wordfeats (W::morph (:forms (-vb) :past W::dithered :ing W::dithering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("dither%2:37:01"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("dither%2:37:01"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::divest
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("divest%2:40:00" "divest%2:40:01" "divest%2:41:00"))
     (LF-PARENT ONT::remove-from)
     (TEMPL agent-source-theme-optional-templ)
     (example "divest the company of stocks")
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20090605 :change-date 20090605 :comments nil)
     (LF-PARENT ONT::remove-from)
     (TEMPL agent-theme-source-optional-templ)
     (example "divest stocks from the portfolio")
     )
    )
   )
  (W::divorce
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("separate-23.1-1"))
     (LF-PARENT ONT::separation)
 ; like divide
     )
    )
   )
  (W::dock
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("pocket-9.10-1"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-templ) ; like land
     )
    )
   )
  (W::doubt
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090501 :comments nil :vn ("judgement-33") :wn ("doubt%2:31:00"))
     (LF-PARENT ont::doubt)
     (example "he doubted it")
     (TEMPL cognizer-theme-xp-templ) 
     )
    )
   )
  (W::dream
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("wish-62"))
     (LF-PARENT ONT::want)
     (TEMPL experiencer-effect-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like wish
     )
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("wish-62"))
     (LF-PARENT ONT::want)
     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype w::of)))) ; like wish but w::of instead of w::for
     )
    )
   )
  (W::dreamt
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("wish-62"))
     (LF-PARENT ONT::want)
     (TEMPL experiencer-effect-xp-templ (xp (% w::cp (w::ctype w::s-that)))) ; like wish
     )
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("wish-62"))
     (LF-PARENT ONT::want)
     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype w::of)))) ; like wish but w::of instead of w::for
     )
    )
   )

  (W::dredge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("dredge%2:35:01"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::drizzle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("drizzle%2:43:00"))
     (LF-PARENT ont::precipitating)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::drydock
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("pocket-9.10-1"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-templ) ; like land
     )
    )
   )
  (W::earn
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("get-13.5.1-1"))
     (LF-PARENT ONT::acquire)
     (templ agent-theme-for-recipient-optional-templ) ; like get but no to-recipient
     (preference .98) ;; try specific sense first
     )
    ;; this sense requires a theme that is ont::object-function ont::currency
    ((meta-data :origin step :entry-date 20081022 :change-date nil :comments nil)
     (LF-PARENT ONT::earning)
     (example "he earned money")
     )
    )
   )
  (W::net
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090430 :change-date nil :comments nil)
     (LF-PARENT ONT::earning)
     (EXAMPLE "I netted $1 million on the sale")
     )
    )
   )
  (W::efface
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("destroy-44"))
     (LF-PARENT ONT::destroy)
 ; like extirpate,ravage,blitz,waste,annihilate,exterminate,shatter,ruin,wreck,destroy,decimate,obliterate,demolish,devastate,raze
     )
    )
   )
  (W::eject
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("eject%2:29:00" "eject%2:35:00" "eject%2:35:01"))
     (LF-PARENT ONT::push-out-of)
     (example "eject him from the premises")
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::elevate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put_direction-9.4"))
     (LF-PARENT ONT::move-upward)
 ; like raise,lower
     )
    )
   )
  (W::emancipate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("free-78-1"))
     (LF-PARENT ONT::releasing)
 ; like release
     )
    )
   )
  (W::emboss
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("emboss%2:35:00"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::embroider
   (wordfeats (W::morph (:forms (-vb) :past W::embroidered :ing W::embroidering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("embroider%2:36:00"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::emerge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090603 :comments nil :vn ("appear-48.1.1") :wn ("emerge%2:30:00" "emerge%2:30:01" "emerge%2:30:02" "emerge%2:38:00"))
     (LF-PARENT ONT::come-out-of)
     (TEMPL theme-source-optional-templ)
     )
    )
   )
  (W::encircle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("encircle%2:35:12"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::enclose
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("enclose%2:35:00"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ)
     (example "the fence encloses the porch")
     )
    ((meta-data :origin trips :entry-date 20090911 :change-date nil :comments nil :wn ("enclose%2:30:00" "enclose%2:35:01"))
     (LF-PARENT ONT::cover)
 ;    (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::in))))
     (example "enclose the check [in the envelope]")
     )
    )
   )
  (W::encompass
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::enervate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-tiredness)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::engrave
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("engrave%2:35:00" "engrave%2:36:00"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::engulf
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::ensue
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("occurrence-48.3") :wn ("ensue%2:42:00"))
     (LF-PARENT ONT::happen)
     (TEMPL theme-templ) ; like occur,happen
     )
    )
   )
  (W::entrust
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("fulfilling-13.4.1-1"))
     (LF-PARENT ONT::giving)
     (TEMPL agent-theme-to-recipient-optional-templ) ; like supply, but doesn't have ditransitive variant
     )
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("fulfilling-13.4.1-1"))
     (LF-PARENT ONT::giving)
     (example "entrust him with the problem")
     (TEMPL agent-recipient-theme-templ (xp (% w::pp (w::ptype w::with))))
     )
    )
   )
  (W::envisage
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("characterize-29.2-1-1"))
     (LF-PARENT ONT::classify)
 ; like represent
     )
    )
   )
  (W::equivocate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::eradicate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("remove-10.1") :wn ("eradicate%2:30:00" "eradicate%2:36:00"))
     (LF-PARENT ONT::destroy)
     )
    )
   )
  (W::erupt
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("appear-48.1.1") :wn ("erupt%2:30:01" "erupt%2:30:02"))
     (LF-PARENT ONT::explode) ;; like ignite
     (example "the fuel ignites")
     (templ theme-templ)
     (meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)	
     )
    )
   )
  (W::fire
   (SENSES
    ((LF-PARENT ONT::explode) ;; like ignite
     (example "the spark plug fires")
     (templ theme-templ)
     (meta-data :origin step :entry-date 20080922 :change-date 20090504 :comments nil)	
     )
    ((LF-PARENT ONT::explode) ;; like ignite
     (example "the spark plug fires the engine")
     (templ cause-theme-xp-templ)
     (meta-data :origin step :entry-date 20080922 :change-date 20090504 :comments nil)	
     )
    ((LF-PARENT ONT::terminate)
     (example "Alice fired Bob")
     (meta-data :origin "wordnet-3.0" :entry-date 20090508 :change-date nil :comments nil)
     )
    )
   )
  (W::eschew
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("avoid-52"))
     (LF-PARENT ONT::avoiding)
 ; like circumvent,evade,avoid
     )
    )
   )
  (W::etch
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("etch%2:36:00"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::eulogize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("eulogize%2:32:00"))
     (LF-PARENT ont::reward)
     (TEMPL agent-affected-xp-templ)
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::reward)
     (example "he eulogized it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::eventuate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("occurrence-48.3") :wn ("eventuate%2:42:00"))
     (LF-PARENT ONT::happen)
     (TEMPL theme-templ) ; like occur,happen
     )
    )
   )
  (W::evict
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("evict%2:35:00"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::evolve
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("grow-26.2") :wn ("evolve%2:30:00" "evolve%2:30:03"))
     (LF-PARENT ONT::grow)
     (TEMPL theme-templ) ; like grow
     )
    )
   )
  (W::exact
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090430 :comments nil :vn ("obtain-13.5.2") :wn ("exact%2:32:00"))
     (LF-PARENT ONT::appropriate)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::excavate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("excavate%2:39:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::excise
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("remove-10.1") :wn ("excise%2:30:02" "excise%2:35:00"))
     (LF-PARENT ONT::separation)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like eliminate
     )
    )
   )
  (W::excommunicate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("excommunicate%2:32:00"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::excoriate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::defame)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::defame)
     (example "he excoriated it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::expel
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("expel%2:29:00"))
     (LF-PARENT ONT::push-out-of)
     (TEMPL agent-theme-source-optional-templ)
     (example "expel the gas from the cylinder")
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("banish-10.2") :wn ("expel%2:33:00" "expel%2:41:00" "expel%2:41:01"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     (example "expel the student from school")
     )
    )
   )
  (W::extol
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("extol%2:32:00"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he extolled it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::extradite
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("banish-10.2") :wn ("extradite%2:41:00"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::fatigue
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-tiredness)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     )
    )
   )
  (W::fault
   (wordfeats (W::morph (:forms (-vb) :nom w::fault)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("fault%2:32:00"))
     (LF-PARENT ONT::defame)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::defame)
     (example "he faulted it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::felicitate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("felicitate%2:32:00"))
     (LF-PARENT ONT::congratulate)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::fence
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("?fence%2:35:00"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::ferry
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
 ; like shuttle
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
     (TEMPL instrument-theme-templ) ; like shuttle
     )
    )
   )
  (W::harvest
   (SENSES
    ((meta-data :origin calo-ontology :entry-date 20060426 :change-date nil :comments nil)
     (LF-PARENT ONT::acquire)
     (templ agent-theme-for-recipient-optional-templ)
     )
    )
   )
  (W::fetch
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("get-13.5.1-1"))
     (LF-PARENT ONT::acquire)
     (templ agent-theme-for-recipient-optional-templ) ; like get but no to-recipient
     )
    )
   )
  (W::film
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("transcribe-25.4") :wn ("film%2:32:00" "film%2:36:00"))
     (LF-PARENT ONT::record)
 ; like tape,record
     )
    )
   )
  (W::fine
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("fine%2:40:00" "fine%2:41:00"))
     (LF-PARENT ont::punish)
     (TEMPL agent-affected-xp-templ)
     )
    )
   )
  (W::flank
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("flank%2:42:00"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::fleece
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090605 :comments nil :vn ("cheat-10.6") :wn ("fleece%2:40:00"))
     (LF-PARENT ONT::take-by-deception)
     (TEMPL AGENT-source-theme-optional-TEMPL)
     )
    )
   )
  (W::flock
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("herd-47.5.2") :wn ("flock%2:38:00" "flock%2:38:01"))
     (LF-PARENT ONT::meet)
     (TEMPL theme-plural-templ) ; like congregate,assemble,gather
     )
    )
   )
  (W::forbid
   (wordfeats (W::morph (:forms (-vb) :past W::forbade :pastpart W::forbidden :ing W::forbidding)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::prohibit)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL)
     (example "I forbid you to see him")
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090603 :change-date nil :comments nil)
     (LF-PARENT ONT::prohibit)
     (TEMPL CAUSE-AFFECTED-EFFECT-TEMPL  (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "I forbid you from seeing him")
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090528 :change-date nil :comments nil)
     (LF-PARENT ONT::prohibit)
     (templ cause-effect-xp-templ)
     (example "The hospital forbids smoking in the hallways")
     )
    )
   )
  (W::outlaw
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090528 :change-date nil :comments nil)
     (LF-PARENT ONT::prohibit)
     (templ cause-effect-xp-templ)
     (example "The treaty outlawed torture")
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::prohibit)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It restricts him from doing something")
     )
    )
   )
  (W::force
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He forced him [to run for office]")  
     )
    ((meta-data :origin mobius :entry-date 20080826 :change-date nil :comments nil)
     (LF-PARENT ont::push)
     (example "the fuel was forced into the cylinder")
     (TEMPL cause-theme-xp-templ)
     )
    )
   )
  (W::foreknow
   (wordfeats (W::morph (:forms (-vb) :past W::foreknew :pastpart W::foreknown :ing W::foreknowing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::expectation)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like realize
     )
    )
   )
  (W::foresee
   (wordfeats (W::morph (:forms (-vb) :past W::foresaw :pastpart W::foreseen :ing W::foreseeing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::expectation)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like realize
     )
    )
   )
  (W::foretell
   (wordfeats (W::morph (:forms (-vb) :past W::foretold :ing W::foretelling)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::predict)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like realize
     )
    )
   )
  (W::forgive
   (wordfeats (W::morph (:forms (-vb) :past W::forgave :pastpart W::forgiven :ing W::forgiving)))
   (SENSES
     ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("forgive%2:32:00"))
     (LF-PARENT ONT::forgive)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::freeze
   (wordfeats (W::morph (:forms (-vb) :past W::froze :pastpart W::frozen :ing W::freezing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("freeze%2:43:10"))
     (LF-PARENT ont::atmospheric-event)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::frisk
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("investigate-35.4") :wn ("frisk%2:35:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like explore,investigate,examine,test,survey,inspect
     )
    )
   )
  (W::frown
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("frown%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::furrow
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("bend-45.2"))
     (LF-PARENT ONT::fold)
 ; like crease,crumple,crinkle,bend,fold,rumple,wrinkle
     )
    )
   )
  (W::gain
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("get-13.5.1-1"))
     (LF-PARENT ONT::acquire)
     (templ agent-theme-for-recipient-optional-templ) ; like get but no to-recipient
     )
;    ((EXAMPLE "He gained weight")
;     (LF-PARENT ONT::experience-change)
;     (syntax (w::resultative +))
;     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
;     (meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
;     )
    )
   )
   (W::regain
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090504 :change-date nil :comments nil)
     (LF-PARENT ONT::acquire)
     (templ agent-theme-for-recipient-optional-templ) ; like get but no to-recipient
     )
;     ((EXAMPLE "He gained weight")
;     (LF-PARENT ONT::experience-change)
;     (syntax (w::resultative +))
;     (TEMPL EXPERIENCER-THEME-XP-TEMPL)
;     (meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
;     )
    )
   )
  (W::gamble
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("rely-70"))
     (LF-PARENT ont::rely)
     (TEMPL theme-co-theme-xp-templ (xp (% w::pp (w::ptype w::on)))) ; like rely,depend,count
     )
    )
   )
  (W::gape
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("gape%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("gape%2:39:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::gasp
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("gasp%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
;     ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
;      (example "he gasped for breath")
;      (LF-PARENT ONT::bodily-process)
;     (TEMPL theme-templ) ; like bleed
;     )
    )
   )
  (W::gauge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090522 :comments nil :vn ("price-54.4"))
     (LF-PARENT ONT::becoming-aware-of-value)
     (templ cognizer-theme-xp-templ)
     )
    )
   )
  (W::gawk
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("gawk%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("gawk%2:39:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::gaze
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("gaze%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    )
   )
  (W::gibe
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he gibed")
     (preference .95)
     (TEMPL agent-templ) ; like thank
     )
    )
   )
  (W::giggle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("giggle%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::glance
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("glance%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    )
   )
  (W::glare
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("glare%2:29:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("glare%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::glorify
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he glorified it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::glower
   (wordfeats (W::morph (:forms (-vb) :past W::glowered :ing W::glowering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("glower%2:29:00" "glower%2:29:01"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::goggle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("goggle%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("goggle%2:39:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::grimace
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("grimace%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::grin
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("grin%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::groan
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("groan%2:32:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::growl
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("growl%2:32:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::grudge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("admire-31.2"))
     (LF-PARENT ONT::regretting)
     (TEMPL experiencer-action-objcontrol-templ) ; like suffer
     )
    )
   )
  (W::guffaw
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("guffaw%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::gull
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090605 :comments nil :vn ("cheat-10.6"))
     (LF-PARENT ONT::take-by-deception)
     (TEMPL AGENT-source-theme-optional-TEMPL)
     )
    )
   )
  (W::gulp
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("gobble-39.3-2"))
     (LF-PARENT ONT::consume)
     (TEMPL agent-templ) ; like swallow
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("gobble-39.3-2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-xp-templ)
 ; like swallow
     )
    )
   )
  (W::gust
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57"))
     (LF-PARENT ONT::atmospheric-event)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::guzzle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("gobble-39.3-2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-xp-templ)
 ; like swallow
     )
    )
   )
  
  (W::hand
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::giving) ;; was ont::send
     (example "hand him the package")
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     )
    )
   )
  (W::harm
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-injury)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::hatch
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("grow-26.2") :wn ("hatch%2:29:00" "hatch%2:29:01"))
     (LF-PARENT ONT::life-transformation)
     (TEMPL theme-templ) ; like grow
     )
    )
   )
  (W::haul
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carry-11.4") :wn ("haul%2:35:00" "haul%2:35:01" "haul%2:35:02"))
     (LF-PARENT ONT::haul)
 ; like drag
     )
    )
   )
  (W::heap
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-2"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-goal-theme-optional-templ (xp (% w::pp (w::ptype (? t w::with))))) ; like load
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-2"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-theme-to-loc-optional-templ (xp (% w::pp (w::ptype (? t w::into w::in))))) ; like load
     )
    )
   )
  (W::heft
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carry-11.4") :wn ("heft%2:35:00"))
     (LF-PARENT ONT::lift)
 ; like drag
     )
    )
   )
  (W::herald
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("herald%2:32:01"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he heralded it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::herd
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2"))
     (LF-PARENT ONT::herd)
 ; like gather,collect
     )
    )
   )
  (W::hesitate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("hesitate%2:42:00" "hesitate%2:42:01"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("hesitate%2:42:00" "hesitate%2:42:01"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::hinder
   (wordfeats (W::morph (:forms (-vb) :past W::hindered :ing W::hindering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
 ; like block
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It hinders him from doing something")
     )
    )
   )
  (W::hoard
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("keep-15.2") :wn ("hoard%2:40:01"))
     (LF-PARENT ONT::retain)
 ; like keep
     )
    )
   )
  (W::hock
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("give-13.1-1"))
     (LF-PARENT ONT::lend)
 ; like sell
     )
    )
   )
  (W::hoist
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carry-11.4" "put_direction-9.4") :wn ("hoist%2:35:00" "hoist%2:35:01" "hoist%2:35:10"))
     (LF-PARENT ONT::lift)
 ; like drag,raise,lower
     )
    )
   )
  (W::howl
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("howl%2:29:00" "howl%2:32:02"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::huddle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("herd-47.5.2") :wn ("huddle%2:38:01"))
     (LF-PARENT ONT::meet)
     (TEMPL theme-plural-templ) ; like congregate,assemble,gather
     )
    )
   )
  (W::immerse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put-9.1") :wn ("immerse%2:35:00"))
     (LF-PARENT ONT::immerse)
 ; like insert,position
     )
    )
   )

  (W::dunk
   (SENSES
    ((meta-data :origin caet :entry-date 20120111 :change-date nil :comments g1)
     (LF-PARENT ONT::dunk)
     )
    )
   )

  (W::steep
   (SENSES
    ((meta-data :origin caet :entry-date 20110114 :change-date nil :comments nil)
     ;(LF-PARENT ONT::cooking)
     (lf-parent ont::steep)
     (templ agent-theme-xp-templ)
     (example "he steeped the tea")
     )
    ((meta-data :origin caet :entry-date 20110114 :change-date nil :comments nil)
     ;(LF-PARENT ONT::cooking)
     (lf-parent ont::steep)
     (templ theme-templ)
     (example "the tea steeped")
     )
    )
   )
  (W::impeach
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("impeach%2:32:03"))
     (LF-PARENT ONT::indict)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::impede
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
 ; like block
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It impedes him from doing something")
     )
    )
   )
  (W::impel
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He impelled him [to run for office]")  
     )
    )
   )
  (W::imprecate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::indict)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::imprint
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("imprint%2:35:00"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::incise
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("incise%2:35:00"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::incite
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He incited him [to run for office]")  
     )
    ((LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-optional-TEMPL (xp (% w::pp (w::ptype (? pt w::from w::in w::among)))))
     (example "His manner incited anger [in them]")  
     )
    )
   )
  (W::incriminate
   (wordfeats (W::morph (:forms (-vb) :nom w::incrimination)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::indict)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::indict
     (wordfeats (W::morph (:forms (-vb) :nom w::indictment)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::indict)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::induce
   (wordfeats (W::morph (:forms (-vb) :nom w::inducement)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He induced him [to run for office]")  
     )
    ((LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-optional-TEMPL (xp (% w::pp (w::ptype (? pt w::from w::in w::among)))))
     (example "His manner induced anger [in them]")  
     )
    )
   )
  
  (W::inflame
     (wordfeats (W::morph (:forms (-vb) :nom w::inflammation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-anger)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-pain)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::inherit
   (wordfeats (W::morph (:forms (-vb) :past W::inherited :ing W::inheriting :nom w::inheritance)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("obtain-13.5.2") :wn ("inherit%2:40:00"))
     ;;(LF-PARENT ONT::acquire)
     (lf-parent ont::incur-inherit-receive) ;; 20120524 GUM change new parent
     (syntax (w::resultative +))
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::inscribe
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("inscribe%2:32:03" "inscribe%2:35:00"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::insure
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("defend-85"))
     (LF-PARENT ont::protecting)
 ; like protect
     )
    ((meta-data :origin cmap-testing :entry-date 20090929 :change-date nil :comments nil :wn-sense (1) :vn ("defend-85"))
     (LF-PARENT ONT::protecting)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "his armor insured his safety")
     (templ cause-theme-xp-templ)
     (preference .98) ;; prefer agentive
     )
    )
   )
  (W::inveigle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He inveigled him [to run for office]")  
     )
    ((LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-optional-TEMPL)
     (example "He inveigled more money [from them]")  
     )
    )
   )
  (W::jade
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-tiredness)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     )
    )
   )
  (W::jeer
   (wordfeats (W::morph (:forms (-vb) :nom w::jeer)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("jeer%2:32:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::jumble
   (wordfeats (W::morph (:forms (-vb) :nom w::jumble)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("shake-22.3-2"))
     (LF-PARENT ONT::combine-objects)
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::with)))) ; like combine
     )
    )
   )
  (W::labour ; would conflict with noun labor, except for UK spelling -- wdebeaum
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("cooperate-71-3"))
     (LF-PARENT ONT::working)
     (TEMPL agent-templ) ; like work
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("cooperate-71-3"))
     (LF-PARENT ONT::working)
     (TEMPL agent-theme-xp-templ (xp (% w::pp (w::ptype (? p w::on))))) ; like work
     )
    )
   )
   (W::labor
    ;; if we don't specify as irregular we get doubled final consonant
    (wordfeats (W::morph (:forms (-vb) :past W::labored :ing W::laboring)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("cooperate-71-3"))
     (LF-PARENT ONT::working)
     (TEMPL agent-templ) ; like work
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("cooperate-71-3"))
     (LF-PARENT ONT::working)
     (resultative +)
     (example "he labored over his speech")
     (TEMPL agent-theme-xp-templ (xp (% w::pp (w::ptype (? p w::on w::over))))) ; like work
     )
    )
   )
  (W::lambaste
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("lambaste%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he lambasted it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::lampoon
     (wordfeats (W::morph (:forms (-vb) :nom w::lampoon)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("lampoon%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he lampooned it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )

  (W::laud
   (SENSES
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he lauded it" "it was lauded by him")
     (TEMPL agent-theme-xp-templ) 
     )
     ((meta-data :origin ptb :entry-date 2010617 :change-date nil :comments nil)
      (LF-PARENT ONT::praise)
      (example "the company lauded the innovation as a new way of making money")
      (TEMPL agent-theme-as-predicate-required-templ)
      )
    )
   )
  
  (w::direct
   (wordfeats (W::morph (:forms (-vb) :nom w::direction)))
   (senses
    ((meta-data :origin coordops :entry-date 20070511 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::guiding)
     (example "team alpha will direct the activity")
     (TEMPL agent-theme-xp-templ)
     )
    ((meta-data :origin coordops :entry-date 20070511 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::guiding)
     (example "team alpha will direct")
     (TEMPL agent-templ)
     )
    )
   )
  (w::guide
   (senses
    ((meta-data :origin coordops :entry-date 20070511 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::guiding)
     (example "team alpha will guide the activity")
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
  (W::lead
   (wordfeats (W::morph (:forms (-vb) :past W::led :ing W::leading :nom w::lead)))
   (SENSES
    ((meta-data :origin step :entry-date 20080724 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::allow)
     (example "it has led him to find a solution")
     (templ cause-effect-affected-objcontrol-templ)
     )
    ((meta-data :origin coordops :entry-date 20070511 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::guiding)
     (example "team alpha will lead the activity")
     (TEMPL agent-theme-xp-templ)
     )
    ((meta-data :origin coordops :entry-date 20070511 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::guiding)
     (example "team alpha will lead")
     (TEMPL agent-templ)
     )
    )
   )
  (W::leer
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("leer%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    )
   )
  (W::liberate
   (wordfeats (W::morph (:forms (-vb) :nom w::liberation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("free-80"))
     (LF-PARENT ONT::unload)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like discharge
     )
    )
   )
  (W::lift
   (wordfeats (W::morph (:forms (-vb) :nom w::lift)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put_direction-9.4") :wn ("lift%2:35:00" "lift%2:35:01" "lift%2:38:00"))
     (LF-PARENT ONT::lift)
 ; like raise,lower
     )
    ((example "wait until the fog lifts")
    (lf-parent ont::disperse)
    )
  )
 )
  (W::lightning
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57"))
     (LF-PARENT ont::atmospheric-event)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::loaf
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::lodge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("pocket-9.10-1"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-templ) ; like land
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put-9.1") :wn ("lodge%2:35:00"))
     (LF-PARENT ONT::put)
 ; like insert,position
     )
    )
   )
  (W::loiter
   (wordfeats (W::morph (:forms (-vb) :past W::loitered :ing W::loitering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("loiter%2:42:00"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("loiter%2:42:00"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::lug
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carry-11.4") :wn ("lug%2:35:00"))
     (LF-PARENT ONT::haul)
 ; like drag
     )
    )
   )
   (W::lunch
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on)))) ; like dine
     )
    )
   )

  (W::maim
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("destroy-44"))
     (LF-PARENT ONT::destroy)
 ; like extirpate,ravage,blitz,waste,annihilate,exterminate,shatter,ruin,wreck,destroy,decimate,obliterate,demolish,devastate,raze
     )
    )
   )
  (W::malign
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("malign%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he maligned the proposal")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::mass
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("herd-47.5.2") :wn ("mass%2:38:00"))
     (LF-PARENT ONT::meet)
     (TEMPL theme-plural-templ) ; like congregate,assemble,gather
     )
    )
   )
  (W::materialize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("appear-48.1.1") :wn ("materialize%2:30:00"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-to-loc-xp-templ (xp (% w::pp (w::ptype w::at)))) ; like show-up
     )
    )
   )
  (W::mature
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("grow-26.2") :wn ("mature%2:30:00" "mature%2:30:01"))
     (LF-PARENT ONT::grow)
     (TEMPL theme-templ) ; like grow
     )
    )
   )
  (W::menace
   (wordfeats (W::morph (:forms (-vb) :nom w::menace)))
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-fear)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     )
    )
   )
  (W::metamorphose
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("turn-26.6.1") :wn ("metamorphose%2:30:00"))
     (LF-PARENT ONT::life-transformation)
     (TEMPL agent-theme-result-optional-templ (xp (% w::pp (w::ptype w::into)))) ; like translate but pp is into, not to
     )
    )
   )
  (W::microfilm
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("transcribe-25.4") :wn ("microfilm%2:36:00"))
     (LF-PARENT ONT::record)
 ; like tape,record
     )
    )
   )
  (W::mint
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("create-26.4-1"))
     (LF-PARENT ONT::invention)
     (TEMPL cognizer-result-templ) ; like design
     )
    )
   )
  (W::mislead
   (wordfeats (W::morph (:forms (-vb) :past W::misled :ing W::misleading)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL cause-affected-xp-templ) ; like dare
     )
    )
   )
  (W::mist
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("mist%2:30:00"))
     (LF-PARENT ont::precipitating)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::mizzle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("mizzle%2:43:00"))
     (LF-PARENT ont::precipitating)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::moan
   (wordfeats (W::morph (:forms (-vb) :nom w::moan)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("moan%2:32:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::mock
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("mock%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he mocked the proposal")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::molest
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090520 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::monitor
    (wordfeats (W::morph (:forms (-vb) :past W::monitored :ing W::monitoring)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("investigate-35.4"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like explore,investigate,examine,test,survey,inspect
     )
    ((meta-data :origin coordops :entry-date 20070706 :change-date nil :comments nil :vn ("investigate-35.4"))
     (LF-PARENT ONT::physical-scrutiny)
     (example "green start monitoring")
     (TEMPL agent-templ) 
     )
    )
   )
  (W::motivate
   (wordfeats (W::morph (:forms (-vb) :nom w::motivation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He motivated him [to run for office]")  
     )
    )
   )
  (W::mound
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-2"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-goal-theme-optional-templ (xp (% w::pp (w::ptype (? t w::with))))) ; like load
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-2"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-theme-to-loc-optional-templ (xp (% w::pp (w::ptype (? t w::into w::in))))) ; like load
     )
    )
   )
  (W::mount
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put-9.1") :wn ("mount%2:30:01" "mount%2:35:00"))
     (LF-PARENT ONT::put)
     (example "he mounted a picture on the wall")
 ; like insert,position
     )
      ((meta-data :origin text-processing :entry-date 20091204 :change-date nil :comments TimeBank)
     (LF-PARENT ONT::increase)
     (example "the death toll mounted")
     )
    )
   )
  (W::mutate
   (wordfeats (W::morph (:forms (-vb) :nom w::mutation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("turn-26.6.1"))
     (LF-PARENT ONT::life-transformation)
     (TEMPL agent-theme-result-optional-templ (xp (% w::pp (w::ptype w::into))))  ;;like translate but pp is into, not to
     )
    )
   )
  (W::mutilate
   (wordfeats (W::morph (:forms (-vb) :nom w::mutilation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("destroy-44"))
     (LF-PARENT ONT::destroy)
 ; like extirpate,ravage,blitz,waste,annihilate,exterminate,shatter,ruin,wreck,destroy,decimate,obliterate,demolish,devastate,raze
     )
    )
   )
  (W::obligate
   (wordfeats (W::morph (:forms (-vb) :nom w::obligation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He obligated him [to run for office]")  
     )
    )
   )
  (W::oblige
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He obliged him [to run for office]")  
     )
    )
   )
  (W::occupy
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((LF-PARENT ONT::control-manage)
     (example "occupy the country")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-THEME-XP-TEMPL)
    )
   ))
  (W::ogle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("ogle%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    )
   )
  (W::omit
   (wordfeats (W::morph (:forms (-vb) :nom w::omission)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("remove-10.1") :wn ("omit%2:31:01"))
     (LF-PARENT ONT::omit)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like eliminate
     )
    )
   )
  (W::ostracize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("ostracize%2:41:01"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::oust
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("oust%2:41:00"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::part
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("separate-23.1-2"))
     (LF-PARENT ONT::separation)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype (? t w::from))))) ; like separate
     )
    )
   )
  (W::patrol
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("patrol%2:41:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::pawn
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("give-13.1-1"))
     (LF-PARENT ONT::lend)
 ; like sell
     )
    )
   )
  (W::peep
   (wordfeats (W::morph (:forms (-vb) :nom w::peep)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("peep%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    )
   )
  (W::peer
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("peer%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    )
   )
  (W::peg
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090522 :comments nil :vn ("price-54.4"))
     (LF-PARENT ONT::becoming-aware-of-value)
     (templ cognizer-theme-xp-templ)
     )
    )
   )
  (W::pelt
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("pelt%2:43:00"))
     (LF-PARENT ont::precipitating)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::penalize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("penalize%2:41:00"))
     (LF-PARENT ont::punish)
     (TEMPL agent-affected-xp-templ)
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::punish)
     (example "he penalized it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::persecute
     (wordfeats (W::morph (:forms (-vb) :nom w::persecution)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("persecute%2:41:00"))
     (LF-PARENT ONT::accuse)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::peruse
   (wordfeats (W::morph (:forms (-vb) :nom w::perusal)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("sight-30.2"))
     (LF-PARENT ONT::scrutiny)
     (TEMPL cognizer-theme-xp-templ) ; like regard
     )
    )
   )
  (W::pester
   (wordfeats (W::morph (:forms (-vb) :past W::pestered :ing W::pestering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-annoyance)
     (TEMPL cause-experiencer-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     )
    )
   )
  (W::photocopy
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("transcribe-25.4") :wn ("photocopy%2:36:00"))
     (LF-PARENT ONT::record)
 ; like tape,record
     )
    )
   )
  (W::photograph
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("transcribe-25.4") :wn ("photograph%2:32:00"))
     (LF-PARENT ONT::record)
 ; like tape,record
     )
    )
   )
  (W::picnic
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on)))) ; like dine
     )
    )
   )
  (W::picture
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("characterize-29.2"))
     (LF-PARENT ONT::categorization)
     (TEMPL cognizer-theme-as-predicate-optional-templ) ; like interpret,classify
     )
    )
   )

  (W::plaster
   (wordfeats (W::morph (:forms (-vb) :past W::plastered :ing W::plastering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::plumb
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("plumb%2:31:02"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::plunge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("escape-51.1-2"))
     (LF-PARENT ONT::move-downward)
     (TEMPL theme-templ) ; like go,fall
     )
    )
   )
  (W::pop-up
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("appear-48.1.1"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-to-loc-xp-templ (xp (% w::pp (w::ptype w::at)))) ; like show-up
     )
    )
   )
  (W::potter
   (wordfeats (W::morph (:forms (-vb) :past W::pottered :ing W::pottering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::pour
   (SENSES
    ((meta-data :origin "kitchen" :entry-date 20101118 :change-date nil :comments nil :wn ("pour%2:38:00"))
     (LF-PARENT ont::pour)
     (templ agent-theme-xp-templ)
     (example "he poured the water over the floor")
     )
    ((meta-data :origin "kitchen" :entry-date 20101118 :change-date nil :comments nil :wn ("pour%2:38:00"))
     (LF-PARENT ont::pour)
     (templ theme-templ)
     (example "the water poured over the floor")
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("pour%2:43:00"))
     (LF-PARENT ont::precipitating)
     (example "when it rains it pours")
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::pout
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("pout%2:29:00" "pout%2:42:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::praise
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("praise%2:32:00"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he praised their proposal")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::precipitate
   (wordfeats (W::morph (:forms (-vb) :nom w::precipitation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("precipitate%2:43:00"))
     (LF-PARENT ont::precipitating)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::pressure
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He pressured him [to run for office]")  
     )
    )
   )

  (W::prevent
   (wordfeats (W::morph (:forms (-vb) :nom w::prevention)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::prevent)
     (example "prevent the sale")
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 					; like block
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::prevent)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It prevents him from doing something")
     )
    )
   )

  (W::paralyze
   (SENSES
    ((meta-data :origin ptb :entry-date 20100701 :change-date nil :comments nil)
     (LF-PARENT ONT::prevent)
     (example "the construction paralyzed traffic")
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 				   
     )
    ((meta-data :origin ptb :entry-date 20100701 :change-date nil :comments nil)
     (LF-PARENT ONT::prevent)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It paralyzed congress from acting on the budget")
     )
    )
   )
  
  (W::price
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090522 :comments nil :vn ("price-54.4") :wn ("price%2:31:00" "price%2:40:00"))
     (LF-PARENT ONT::scrutiny)
     (templ cognizer-theme-xp-templ)
     )
    )
   )
  (W::probe
   (wordfeats (W::morph (:forms (-vb) :nom w::probe)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("probe%2:32:00" "probe%2:35:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::procrastinate
   (wordfeats (W::morph (:forms (-vb) :nom w::procrastination)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::prod
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He pressured him [to run for office]")  
     )
    ((LF-PARENT ONT::PUSH)
     (SEM (F::cause F::agentive) (F::aspect F::unbounded) (F::time-span F::extended))
     (TEMPL CAUSE-THEME-XP-TEMPL)
     )
    )
   )
  
  (W::prohibit
   (wordfeats (W::morph (:forms (-vb) :past W::prohibited :ing W::prohibiting :nom prohibition)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::prohibit)
     (TEMPL CAUSE-EFFECT-XP-TEMPL)
     (example "The hospital prohibits smoking")
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090528 :change-date nil :comments nil)
     (LF-PARENT ONT::prohibit)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL  (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "The hospital prohibits visitors from smoking")
     )
    )
   )
  (W::prosecute
   (wordfeats (W::morph (:forms (-vb) :nom w::prosecution)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("?prosecute%2:41:01"))
     (LF-PARENT ONT::accuse)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::prospect
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("prospect%2:31:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::publish
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("create-26.4-1"))
     (LF-PARENT ONT::invention)
     (TEMPL cognizer-result-templ) ; like design
     )
    )
   )
  (W::pulverize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carve-21.2-1"))
     (LF-PARENT ONT::crush)
 ; like mash,squash,squish,crush,bruise
     )
    )
   )
  (W::pump
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::punish
   (wordfeats (W::morph (:forms (-vb) :nom w::punishment)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090513 :comments nil :vn ("judgement-33") :wn ("punish%2:41:00"))
     (LF-PARENT ont::punish)
     (TEMPL agent-affected-xp-templ)
     )
    )
   )
  (W::purge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("cheat-10.6") :wn ("purge%2:30:00"))
     (LF-PARENT ONT::push-out-of)
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )
  (W::purify
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("purify%2:30:00" "purify%2:30:01"))
     (LF-PARENT ONT::remove-parts)
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )
  (W::quaff
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("gobble-39.3-2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-xp-templ)
 ; like swallow
     )
    )
   )
  (W::quarry
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     (preference .95)
     )
    )
   )
  (W::quench
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::cause-body-effect)
     (TEMPL cause-theme-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     )
    )
   )
  (W::quiz
   (wordfeats (W::morph (:forms (-vb) :past W::quizzed :ing W::quizzing :nom w::quiz)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("investigate-35.4") :wn ("quiz%2:32:00"))
     (LF-PARENT ONT::scrutiny)
     (TEMPL cognizer-theme-xp-templ) ; like explore,investigate,examine,test,survey,inspect
     )
    )
   )
  (W::rake
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("rake%2:39:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::ransack
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6") :wn ("ransack%2:40:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL AGENT-theme-xp-TEMPL) ; like rid but different template
     )
    )
   )
  (W::ration
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("future_having-13.3"))
     (LF-PARENT ONT::assign)
     (TEMPL agent-theme-to-recipient-optional-templ) ; like yield
     )
    )
   )
  (W::ravish
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ont::experiencer-obj)
     (TEMPL cause-theme-xp-templ) ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     )
    )
   )
  (W::re_emerge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("appear-48.1.1"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-to-loc-xp-templ (xp (% w::pp (w::ptype w::at)))) ; like show-up
     )
    )
   )
  (W::ready
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("preparing-26.3-1"))
     (LF-PARENT ONT::cause-make)
 ; like prepare
     )
    )
   )
  (W::reappear
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("appear-48.1.1"))
     (LF-PARENT ONT::arrive)
     (TEMPL theme-to-loc-xp-templ (xp (% w::pp (w::ptype w::at)))) ; like show-up
     )
    )
   )
  (W::rebuke
   (wordfeats (W::morph (:forms (-vb) :nom w::rebuke)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("rebuke%2:32:00"))
     (LF-PARENT ont::reprimand)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::recall
   (wordfeats (W::morph (:forms (-vb) :nom w::recall)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("banish-10.2") :wn ("recall%2:32:02" "recall%2:40:00" "recall%2:41:00"))
     (LF-PARENT ONT::socially-remove)
     (templ agent-theme-source-optional-templ)
     )
    )
   )
  (W::recede
     (wordfeats (W::morph (:forms (-vb) :nom w::recession)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("escape-51.1-2"))
     (LF-PARENT ONT::move-away)
     (TEMPL theme-templ) ; like go,fall
     )
    )
   )
  (W::recharge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-excitement)
     (example "the pep talk recharged him")
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin step :entry-date 20080626 :change-date nil :comments nil)
     (EXAMPLE "recharge the battery")
     (LF-PARENT ONT::fill-container)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    )
   )
  (W::recommence
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20091008 :comments nil :vn ("begin-55.1-1"))
     (LF-PARENT ONT::resume-action)
     (TEMPL agent-action-subjcontrol-templ (xp (% w::vp (w::vform w::ing))))   ;; like resume
     )
    )
   )
  (W::recompense
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("recompense%2:40:01"))
     (LF-PARENT ont::reward)
     (TEMPL agent-affected-xp-templ)
     )
    )
   )
  (W::reconstitute
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("create-26.4-1"))
     (LF-PARENT ONT::invention)
     (TEMPL cognizer-result-templ) ; like design
     )
    )
   )
  (W::recur
   (wordfeats (W::morph (:forms (-vb) :nom w::recurrence)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("occurrence-48.3") :wn ("recur%2:30:00"))
     (LF-PARENT ONT::happen)
     (TEMPL theme-templ) ; like occur,happen
     )
    )
   )
  (W::regain
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("obtain-13.5.2") :wn ("regain%2:40:00" "regain%2:40:01"))
     (LF-PARENT ONT::acquire)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::rejuvenate
   (wordfeats (W::morph (:forms (-vb) :nom w::rejuvenation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-excitement)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::remunerate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("remunerate%2:40:00"))
     (LF-PARENT ont::reward)
     (TEMPL agent-affected-xp-templ)
     )
    )
   )
  (W::repaint
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24"))
     (LF-PARENT ont::coloring)
     (TEMPL agent-theme-result-optional-templ (xp (% w::adjp (w::set-modifier -)))) ; like lacquer,paint,varnish,tint,spraypaint,dye,color,stain,shellac,distemper,enamel
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("coloring-24"))
     (LF-PARENT ont::coloring)
 ; like color
     )
    )
   )
  (W::repay
   (wordfeats (W::morph (:forms (-vb) :past W::repaid :ing W::repaying :nom w::repayment)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("pay-68"))
     (LF-PARENT ONT::commerce-pay)
     (TEMPL agent-cost-theme-templ (xp (% w::pp (w::ptype w::for)))) ; like pay
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("pay-68"))
     (LF-PARENT ONT::commerce-pay)
     (TEMPL agent-recipient-cost-templ) ; like pay
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("pay-68"))
     (LF-PARENT ONT::commerce-pay)
     (TEMPL agent-source-templ (xp (% w::pp (w::ptype w::with)))) ; like pay
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("judgement-33") :wn ("repay%2:40:02"))
     (LF-PARENT ONT::thank)
     (example "how can I repay you")
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::reprimand
   (wordfeats (W::morph (:forms (-vb) :nom w::reprimand)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("reprimand%2:32:01"))
     (LF-PARENT ont::reprimand)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::reproach
   (wordfeats (W::morph (:forms (-vb) :nom w::reproach)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("reproach%2:32:00"))
     (LF-PARENT ont::reprimand)
     (TEMPL agent-addressee-templ) ; like thank
     )
    )
   )
  (W::reprove
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("reprove%2:32:00"))
     (LF-PARENT ont::judgement)
     (TEMPL agent-affected-xp-templ)
     )
    )
   )
  (W::repudiate
   (wordfeats (W::morph (:forms (-vb) :nom w::repudiation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("repudiate%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he repudiated it")
     (TEMPL agent-theme-xp-templ) 
     )

    )
   )
  (W::rest
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put_spatial-9.2-1"))
     (LF-PARENT ONT::be-at-loc)
     (TEMPL theme-templ) ; like hang,stand,sit
     )
    )
   )
  (W::restrain
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("forbid-67"))
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
 ; like block
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It restrains him from doing something")
     )
    )
   )
  (W::restrict
   (wordfeats (W::morph (:forms (-vb) :nom w::restriction)))
   (SENSES
    ((meta-data :origin chf :entry-date 20070810 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     (example "have you been following the restricted plan")
     )
    ((meta-data :origin "gloss-training" :entry-date 20100217 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-TEMPL (xp (% w::cp (w::ctype w::s-from-ing))))
     (example "It restricts him from doing something")
     )
    )
   )
   (W::delimit
    (wordfeats (W::morph (:forms (-vb) :past W::delimited :ing W::delimiting :nom w::delimitation)))
   (SENSES
    ((meta-data :origin chf :entry-date 20070817 :change-date nil :comments nil)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    )
   )
   (W::limit
    (wordfeats (W::morph (:forms (-vb) :past W::limited :ing W::limiting w::limitation)))
   (SENSES
    ((meta-data :origin chf :entry-date 20070817 :change-date nil :comments chf-proposal)
     (LF-PARENT ONT::hindering)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     (example "are you limiting your fluid intake")
     )
    )
   )
  (W::retract
   (wordfeats (W::morph (:forms (-vb) :nom w::retraction)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090602 :comments nil :vn ("remove-10.1"))
     (LF-PARENT ONT::pull-out-of)
     (TEMPL agent-theme-source-optional-templ)
     (example "He retracted his bid from the auction")
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090602 :change-date nil :comments nil)
     (LF-PARENT ONT::pull-out-of)
     (TEMPL theme-source-optional-templ)
     (example "The CD tray retracted")
     )
    )
   )
  (W::revile
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("revile%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he reviled it")
     (TEMPL agent-theme-xp-templ) 
     )

    )
   )
  (W::revolve
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("revolve%2:38:00" "revolve%2:38:01" "revolve%2:38:02"))
     (LF-PARENT ONT::rotate)
     (TEMPL theme-templ)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("revolve%2:38:00" "revolve%2:38:01" "revolve%2:38:02"))
     (LF-PARENT ONT::rotate)
 ; like rotate,turn,spin
     )
    )
   )
  (W::reward
   (wordfeats (W::morph (:forms (-vb) :nom w::reward)))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::reward)
     (example "he rewarded their proposal")
     (TEMPL agent-theme-xp-templ) 
     )

    )
   )
  (W::rhapsodize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090513 :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-theme-xp-templ (xp (% w::pp (w::ptype (? p w::about)))))
     )
    )
   )
  (W::ridicule
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("ridicule%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he ridiculed it")
     (TEMPL agent-theme-xp-templ) 
     )

    )
   )
  (W::riffle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("investigate-35.4") :wn ("riffle%2:39:10"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like explore,investigate,examine,test,survey,inspect
     )
    )
   )
  (W::rifle
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("cheat-10.6") :wn ("rifle%2:40:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ (xp (% w::pp (w::ptype w::through)))) ; like rid but different template and lf
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("rifle%2:35:13"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::rim
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("rim%2:42:00"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::ring
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("ring%2:35:03"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )

  (W::rob
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090605 :comments nil :vn ("cheat-10.6") :wn ("rob%2:40:00"))
     (LF-PARENT ONT::appropriate)
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )
  (W::rouse
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He roused him [to run for office]")  
     )
    ((LF-PARENT ont::provoke)
     (TEMPL cause-effect-affected-optional-templ (xp (% w::pp (w::ptype (? pt w::in w::among))))) ; like annoy,bother,concern,hurt
     (example "the lecture roused anger [in the crowd]")
     )
    )
   )
  (W::rub
  (wordfeats (W::morph (:forms (-vb) :past W::rubbed :ing W::rubbing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     (example "he rubbed suntan lotion on his shoulders")
     )
    )
   )
  (W::salute
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("salute%2:34:00"))
     (LF-PARENT ONT::praise)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::praise)
     (example "he saluted the flag")
     (TEMPL agent-theme-xp-templ) 
     )

    )
   )
  (W::sanction
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::allow)
     (example "he sanctioned their proposal")
     (TEMPL cause-effect-xp-templ) 
     )

    )
   )
  (W::sap
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6"))
     (LF-PARENT ONT::take-incrementally)
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )
  (W::satiate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090511 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-joy)
     (TEMPL cause-experiencer-xp-templ)
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090515 :change-date nil :comments nil)
     (LF-PARENT ONT::evoke-comfort)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::scatter
   (wordfeats (W::morph (:forms (-vb) :past W::scattered :ing W::scattering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    ((meta-data :origin caet :entry-date 20110114 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
     (example "the seeds scattered in the wind")
     (templ theme-templ)
     )
    )
   )
  (W::scavenge
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("scavenge%2:35:01"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::schedule
   (wordfeats (W::morph (:forms (-vb) :nom W::schedule)))
   (SENSES
    ((LF-PARENT ONT::planning)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-EFFECT-OBJCONTROL-TEMPL)
     (example "schedule the meeting to start at 10 pm" "schedule the action for 10pm")
     (meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090515 :comments nil :vn ("create-26.4-1"))
     )
    )
   )
   (W::reschedule
   (wordfeats (W::morph (:forms (-vb) :ing W::rescheduling)))
   (SENSES
    ((LF-PARENT ONT::planning)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-EFFECT-OBJCONTROL-TEMPL)
     (example "reschedule the meeting to start at 10 pm" "reschedule the action for 10pm")
     (meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090515 :comments nil :vn ("create-26.4-1"))
     )
    )
   )
   (W::program
   (wordfeats (W::morph (:forms (-vb) :nom W::program)))
   (SENSES
    ((LF-PARENT ONT::planning)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cognizer-EFFECT-OBJCONTROL-TEMPL)
     (example "program the vcr to start at 10 pm")
     (meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090515 :comments nil :vn ("create-26.4-1"))
     )
    )
   )
  (W::schlep
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carry-11.4") :wn ("schlep%2:35:00"))
     (LF-PARENT ONT::haul)
 ; like drag
     )
    )
   )
  (W::scoff
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::scold
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("scold%2:32:00"))
     (LF-PARENT ont::reprimand)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ont::reprimand)
     (example "he scolded it")
     (TEMPL agent-theme-xp-templ) 
     )

    )
   )
  (W::scorn
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("scorn%2:37:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he scorned it")
     (TEMPL agent-theme-xp-templ) 
     )

    )
   )
  (W::scour
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("scour%2:35:03"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::scout
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("scout%2:39:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::scowl
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("scowl%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::scram
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("scram%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like roll,scoot,walk,stomp,dart,roam,nip,parade,mosey,clamber,slither,troop,speed,leap,promenade,totter,trot,jog,stride,lope,hike,wander,somersault,cavort,tear,lurch,pad,canter,scramble,prance,plod,hobble,trudge,hurry,slog,slide,clump,saunter,skip,gallop,slink,skulk,prowl,gambol,carom,scurry,dash,journey,meander,swim,travel,slouch,file,romp,waddle,crawl,inch,creep,skitter,limp,dodder,mince,trek,stumble,race,climb,amble,rush,stray,hurtle,vault,charge,toddle,strut,stroll,sneak,trundle,shamble,backpack,tiptoe,tramp,whiz,scud,perambulate,scamper,scuttle,sashay,lollop,stump,rove,flit,wade,drift,stagger,float,sweep,traipse,run,hasten,coast,bolt,zigzag,ramble,sidle,sleepwalk,streak,frolic,march,swagger,glide,goose-step,bound,scutter,shuffle,lumber,bowl
     )
    )
   )
  (W::sculpt
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090504 :comments nil :vn ("build-26.1-1"))
     (LF-PARENT ONT::shape-change)
     (TEMPL agent-theme-result-templ (xp (% w::pp (w::ptype w::into)))) ; like carve
     )
    )
   )
  (W::segregate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("separate-23.1-1"))
     (LF-PARENT ONT::separation)
 ; like divide
     )
    )
   )
  (W::seize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090430 :comments nil :vn ("obtain-13.5.2") :wn ("seize%2:35:00" "seize%2:35:01" "seize%2:40:01" "seize%2:40:02"))
     (LF-PARENT ONT::appropriate)
     (example "the theif seized the jewels from the safe")
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    ((meta-data :origin cardiac :entry-date 20081215 :change-date 20090512 :comments nil :vn ("hurt-40.8.3-2") :wn ("injure%2:29:00"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL CAUSE-EXPERIENCER-XP-TEMPL)
     (example "pain seized his body")
     )
    ((meta-data :origin cardiac :entry-date 20081215 :change-date 20090512 :comments nil :vn ("hurt-40.8.3-2") :wn ("injure%2:29:00"))
     (LF-PARENT ONT::cause-body-effect)
     (TEMPL THEME-TEMPL)
     (example "his body seized (with pain/convulsions)")
     )
    )
   )

   ((W::seize w::up)
   (SENSES
    ((meta-data :origin cardiac :entry-date 20081215 :change-date 20090511 :comments nil :vn ("hurt-40.8.3-2") :wn ("injure%2:29:00"))
     (LF-PARENT ONT::cause-body-effect)
     (TEMPL THEME-TEMPL)
     (example "his body seized up (with pain/convulsions)")
     )
    )
   )

  (W::cramp
   (SENSES
    ((meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments nil :vn ("hurt-40.8.3-2") :wn ("injure%2:29:00"))
     (LF-PARENT ONT::objective-influence)
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     (example "restrictions cramp his style")
     (preference .95)
     )
    ((meta-data :origin cardiac :entry-date 20081215 :change-date 20090511 :comments nil :vn ("hurt-40.8.3-2") :wn ("injure%2:29:00"))
     (LF-PARENT ONT::cause-body-effect)
     (TEMPL THEME-TEMPL)
     (example "his body cramped (with pain/convulsions)")
     )
    )
   )

  ((W::cramp w::up)
   (SENSES
     ((meta-data :origin cardiac :entry-date 20081215 :change-date 20090511 :comments nil :vn ("hurt-40.8.3-2") :wn ("injure%2:29:00"))
     (LF-PARENT ONT::cause-body-effect)
     (TEMPL THEME-TEMPL)
     (example "his leg cramped up")
     )
    )
   )

  (W::sew
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::sewn
   (wordfeats (W::morph (:forms NIL)) (W::vform W::pastpart))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::shade
   (SENSES
    ((meta-data :origin cmap-testing :entry-date 20090929 :change-date nil :comments nil :wn-sense (1) :vn ("defend-85"))
     (LF-PARENT ONT::protecting)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "the tree shaded the courtyard")
     (templ cause-theme-xp-templ)
      )
    )
   )
  (W::ship
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::send)
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     )
    )
   )
  (W::shop
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("?shop%2:41:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::shower
   (wordfeats (W::morph (:forms (-vb) :past W::showered :ing W::showering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     (example "shower them with roses")
     )
    )
   )
  (W::sift
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("sift%2:35:02" "sift%2:38:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("disassemble-23.3") :wn ("sift%2:35:00"))
     (LF-PARENT ONT::separation)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype (? t w::from))))) ; like detach
     )
    )
   )
  (W::sigh
   (wordfeats (W::morph (:forms (-vb) :nom w::sigh)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("sigh%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::simper
   (wordfeats (W::morph (:forms (-vb) :past W::simpered :ing W::simpering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("simper%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::situate
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("put-9.1") :wn ("situate%2:35:00"))
     (LF-PARENT ONT::arranging)
     )
    )
   )
  (W::skedaddle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("run-51.3.2") :wn ("skedaddle%2:38:00"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like roll,scoot,walk,stomp,dart,roam,nip,parade,mosey,clamber,slither,troop,speed,leap,promenade,totter,trot,jog,stride,lope,hike,wander,somersault,cavort,tear,lurch,pad,canter,scramble,prance,plod,hobble,trudge,hurry,slog,slide,clump,saunter,skip,gallop,slink,skulk,prowl,gambol,carom,scurry,dash,journey,meander,swim,travel,slouch,file,romp,waddle,crawl,inch,creep,skitter,limp,dodder,mince,trek,stumble,race,climb,amble,rush,stray,hurtle,vault,charge,toddle,strut,stroll,sneak,trundle,shamble,backpack,tiptoe,tramp,whiz,scud,perambulate,scamper,scuttle,sashay,lollop,stump,rove,flit,wade,drift,stagger,float,sweep,traipse,run,hasten,coast,bolt,zigzag,ramble,sidle,sleepwalk,streak,frolic,march,swagger,glide,goose-step,bound,scutter,shuffle,lumber,bowl
     )
    )
   )
  (W::skirt
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("skirt%2:35:00"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::slander
   (wordfeats (W::morph (:forms (-vb) :past W::slandered :ing W::slandering)))
   (SENSES
     ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::defame)
     (TEMPL agent-addressee-templ) ; like thank
     )
     ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::defame)
     (example "he slandered it")
     (TEMPL agent-theme-xp-templ) 
     )

    )
   )
  (W::sleet
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("sleet%2:43:00"))
     (LF-PARENT ONT::precipitating)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::slip
   (wordfeats (W::morph (:forms (-vb) :nom w::slip)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::send)
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     )
    )
   )
  (W::smear
   (wordfeats (W::morph (:forms (-vb) :nom w::smear)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
     (example "he smeared the paint on the wall")
 ; like spray
     )
    ((meta-data :origin caet :entry-date 20110114 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
     (example "the paint smeared on the wall")
     (templ theme-templ)
     )
    )
   )
  (W::smile
   (wordfeats (W::morph (:forms (-vb) :nom w::smile)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("smile%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::smirk
   (wordfeats (W::morph (:forms (-vb) :nom w::smirk)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("smirk%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::smudge
   (wordfeats (W::morph (:forms (-vb) :nom w::smudge)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    ((meta-data :origin caet :entry-date 20110114 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
     (example "the paint smudged on the wall")
     (templ theme-templ)
     )
    )
   )
  (W::smuggle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("send-11.1-1"))
     (LF-PARENT ONT::send)
     (TEMPL agent-theme-recipient-alternation-templ) ; like mail,send,forward,transmit
     )
    )
   )
     (W::snack
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on)))) ; like dine
     )
    )
   )
  (W::snatch
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090430 :comments nil :vn ("obtain-13.5.2") :wn ("snatch%2:35:00"))
     (LF-PARENT ONT::appropriate)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype w::from)))) ; like recover
     )
    )
   )
  (W::sneer
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::sneeze
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("sneeze%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::snicker
   (wordfeats (W::morph (:forms (-vb) :past W::snickered :ing W::snickering :nom w::snicker)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("snicker%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::snigger
   (wordfeats (W::morph (:forms (-vb) :past W::sniggered :ing W::sniggering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("snigger%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::snivel   
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("snivel%2:29:01"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::sniveled
   (wordfeats (W::morph (:forms NIL)) (W::vform (? vf W::past)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::sniveling
   (wordfeats (W::morph (:forms NIL)) (W::vform W::ing))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::snore
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("snore%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::snort
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("snort%2:32:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::snub
   (wordfeats (W::morph (:forms (-vb) :nom w::snub)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("snub%2:32:00" "snub%2:32:01"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he snubbed it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::sob
   (wordfeats (W::morph (:forms (-vb) :nom w::sob)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("sob%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::sow
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::span
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("contiguous_location-47.8") :wn ("span%2:42:00"))
     (LF-PARENT ONT::surround)
     (TEMPL theme-co-theme-xp-templ) ; like cover,surround
     )
    )
   )
  (W::spatter
   (wordfeats (W::morph (:forms (-vb) :past W::spattered :ing W::spattering :nom w::spatter)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    ((meta-data :origin caet :entry-date 20110114 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
     (example "the paint spattered on the wall")
     (templ theme-templ)
     )
    )
   )
  (W::splash
   (wordfeats (W::morph (:forms (-vb) :nom w::splash)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    ((meta-data :origin caet :entry-date 20110114 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
     (example "the paint splashed on the wall")
     (templ theme-templ)
     )
    )
   )
  (W::splatter
   (wordfeats (W::morph (:forms (-vb) :past W::splattered :ing W::splattering :nom w::splatter)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    ((meta-data :origin caet :entry-date 20110114 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
     (example "the paint splattered on the wall")
     (templ theme-templ)
     )
    )
   )
  (W::spread
   (wordfeats (W::morph (:forms (-vb) :past W::spread :ing W::spreading)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     (example "he spread the peanut butter on the bread")
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::disperse)
     (example "electricity distribution spread to farmers and country towns" "windmill usage spread across the country")
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::sprinkle
   (wordfeats (W::morph (:forms (-vb) :nom w::sprinkle)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("sprinkle%2:43:00"))
     (LF-PARENT ONT::precipitating)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::spritz
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::spur
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He spurred him [to run for office]")  
     )
    ((LF-PARENT ont::provoke)
     (TEMPL cause-effect-affected-optional-templ (xp (% w::pp (w::ptype (? pt w::in w::among))))) ; like annoy,bother,concern,hurt
     (example "the lecture spurred anger [in the crowd]")
     )
    )
   )
  (W::spurt
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::squeeze
   (wordfeats (W::morph (:forms (-vb) :nom w::squeeze)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("funnel-9.3-2-1"))
     (LF-PARENT ONT::unload)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype (? t w::off w::from))))) ; like dump
     )
    ((LF-PARENT ONT::squeeze)
     (example "the engine squeezes gasoline from the line")
     (meta-data :origin mobius :entry-date 20080414 :change-date 20090529 :comments nil)
     (templ instrument-theme-xp-templ)
     (SEM (F::ASPECT F::DYNAMIC))
     )
    )
   )
  (W::squint
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("squint%2:29:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    )
   )
  (W::squirt
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::stack
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-2"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-goal-theme-optional-templ (xp (% w::pp (w::ptype (? t w::with))))) ; like load
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-2"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-theme-to-loc-optional-templ (xp (% w::pp (w::ptype (? t w::into w::in))))) ; like load
     )
    )
   )
  (W::stage
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("create-26.4-1"))
     (LF-PARENT ONT::arranging)
     )
    )
   )
  (W::stamp
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("stamp%2:35:02"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::stare
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("peer-30.3") :wn ("stare%2:39:00"))
     (LF-PARENT ONT::active-perception)
     (TEMPL experiencer-templ) ; like look
     )
    )
   )
  ((W::start (w::off))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("begin-55.1-1"))
    ;; (LF-PARENT ONT::start)
 ; like begin
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (example "he started off the discussion")
     (templ cause-effect-xp-templ)
     )
 ;   (;;(LF-PARENT ONT::START)
 ;    (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
 ;    (meta-data :origin fruit-carts :entry-date 20050331 :change-date nil :comments fruitcarts-11-3)
 ;    (example "start off with the triangle")
 ;    (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
 ;    (TEMPL cause-effect-xp-templ (xp (% W::pp (W::ptype W::with))))
 ;    )
   ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
     ;;(LF-PARENT ONT::START)
    (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (example "the managers started off working")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL cause-effect-subjcontrol-templ (xp (% w::vp (w::vform w::ing))))
     )
    ((meta-data :origin trips :entry-date 20060414 :change-date nil :comments nil :vn ("begin-55.1-1"))
     ;;(LF-PARENT ONT::START)
     (lf-parent ont::startoff-begin-commence-start) ;; 20120523 GUM change new parent
     (example "the computers started off working")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL affected-effect-subjcontrol-templ (xp (% w::vp (w::vform w::ing))))
     )
     )
   )
  (W::steal
   (wordfeats (W::morph (:forms (-vb) :past W::stole :pastpart W::stolen :ing W::stealing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090430 :comments nil :vn ("get-13.5.1-1"))
     (LF-PARENT ONT::appropriate)
     (TEMPL agent-theme-recipient-alternation-templ) ; like get
     )
    )
   )
  (W::step
    (wordfeats (W::morph (:forms (-vb) :nom W::step)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like roll,scoot,walk,stomp,dart,roam,nip,parade,mosey,clamber,slither,troop,speed,leap,promenade,totter,trot,jog,stride,lope,hike,wander,somersault,cavort,tear,lurch,pad,canter,scramble,prance,plod,hobble,trudge,hurry,slog,slide,clump,saunter,skip,gallop,slink,skulk,prowl,gambol,carom,scurry,dash,journey,meander,swim,travel,slouch,file,romp,waddle,crawl,inch,creep,skitter,limp,dodder,mince,trek,stumble,race,climb,amble,rush,stray,hurtle,vault,charge,toddle,strut,stroll,sneak,trundle,shamble,backpack,tiptoe,tramp,whiz,scud,perambulate,scamper,scuttle,sashay,lollop,stump,rove,flit,wade,drift,stagger,float,sweep,traipse,run,hasten,coast,bolt,zigzag,ramble,sidle,sleepwalk,streak,frolic,march,swagger,glide,goose-step,bound,scutter,shuffle,lumber,bowl
     )
    )
   )
  (W::stigmatize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("stigmatize%2:41:00"))
     (LF-PARENT ONT::defame)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090508 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::defame)
     (example "he stigmatized it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::stock
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-2"))
     (LF-PARENT ONT::fill-container)
     (TEMPL agent-goal-theme-optional-templ (xp (% w::pp (w::ptype (? t w::with))))) ; like load
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("keep-15.2") :wn ("stock%2:40:00"))
     (LF-PARENT ONT::retain)
     (example "do you stock organic building supplies")
 ; like keep
     )
    )
   )

  (W::storm
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("storm%2:43:00" "storm%2:43:01"))
     (LF-PARENT ont::atmospheric-event)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
 
   (W::stretch
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090422 :change-date nil :comments nil)
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::stretch) ;; 20120523 GUM change new parent
     (TEMPL theme-templ)
     (preference .98)
     )
    ((meta-data :origin cardiac :entry-date 20090422 :change-date nil :comments nil)
     ;;(LF-PARENT ONT::body-movement)
     (lf-parent ont::stretch) ;; 20120523 GUM change new parent
     (example "he stretched his legs")
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
  (W::strew
     (wordfeats (W::morph (:forms (-vb) :pastpart W::strewn)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
   ;; alternate past
  (W::shone
   (wordfeats (W::morph (:forms NIL)) (W::vform W::past))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20081223 :change-date nil :comments LM-vocab)
     (LF-PARENT ONT::location-of-light)
     (templ theme-templ)
      )
    )
   )
  ;; alternate past
  (W::strew
   (wordfeats (W::morph (:forms NIL)) (W::vform W::past))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  (W::string
   (wordfeats (W::morph (:forms (-vb) :pastpart W::strung)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
     (example "he strung the beads")
 ; like spray
     )
    )
   )
  (W::strip
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("cheat-10.6") :wn ("strip%2:30:05" "strip%2:30:06" "strip%2:30:12" "strip%2:35:04" "strip%2:40:00" "strip%2:40:03"))
     (LF-PARENT ONT::pull-off)
     (TEMPL agent-source-theme-optional-templ)
     (example "strip the wire of insulation" "strip the officer of his rank")
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("cheat-10.6") :wn ("strip%2:30:05" "strip%2:30:06" "strip%2:30:12" "strip%2:35:04" "strip%2:40:00" "strip%2:40:03"))
     (LF-PARENT ONT::pull-off)
     (TEMPL agent-theme-source-optional-templ)
     (example "strip the insulation from the wire")
     )
    )
   )
  
  (W::stultify
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::objective-influence)
     (EXAMPLE "the weather stultified them")
     (TEMPL CAUSE-AFFECTED-XP-TEMPL) 
     )
    )
   )

   (W::sedate
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     (LF-PARENT ONT::subduing)
     (EXAMPLE "the doctor sedated the patient")
     (TEMPL CAUSE-experiencer-XP-TEMPL) 
     )
    )
   )
  (W::subdue
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil)
     (LF-PARENT ONT::subduing)
     (EXAMPLE "the weather subdued them")
     (TEMPL CAUSE-experiencer-XP-TEMPL) 
     )
    )
   )
 (W::sup
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-optional-templ  (xp (% W::pp (W::ptype W::on)))) ; like dine
     )
    )
   )
  (W::superimpose
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put-9.1"))
     (LF-PARENT ONT::put)
 ; like insert,position
     )
    )
   )
  (W::surmise
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("conjecture-29.5-1"))
     (LF-PARENT ONT::coming-to-believe)
     (TEMPL cognizer-theme-xp-templ (xp (% w::cp (w::ctype w::s-finite)))) ; like realize
     )
    )
   )
  (W::suspend
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("put_spatial-9.2-1"))
     (LF-PARENT ONT::be-at-loc)
     (TEMPL theme-templ) ; like hang,stand,sit
     )
    )
   )
  (W::swab
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("spray-9.7-1"))
     (LF-PARENT ONT::filling)
 ; like spray
     )
    )
   )
  ((W::sweet w::talk)
    (wordfeats (W::morph (:forms (-vb) :past (W::sweet w::talked) :ing (w::sweet w::talking))))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("59-force"))
     (LF-PARENT ont::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He spurred him [to run for office]")  
     )
    )
   )
  
  (W::swig
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("gobble-39.3-2"))
     (LF-PARENT ONT::consume)
     (templ agent-affected-xp-templ)
 ; like swallow
     )
    )
   )
  ((W::switch (w::over))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("convert-26.6.2-1"))
     (LF-PARENT ONT::replacement)
 ; like switch
     )
    )
   )
  ((W::take w::a w::chance)
   (wordfeats (W::morph (:forms (-vb) :past W::took :pastpart W::taken :ing W::taking)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("rely-70"))
     (LF-PARENT ont::rely)
     (TEMPL theme-co-theme-xp-templ (xp (% w::pp (w::ptype w::on)))) ; like rely,depend,count
     )
    )
   )
  (W::tarry
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("tarry%2:38:00" "tarry%2:42:00"))
     (LF-PARENT ONT::stay)
     (TEMPL theme-templ) ; like pause
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("linger-53.1") :wn ("tarry%2:38:00" "tarry%2:42:00"))
     (LF-PARENT ONT::wait)
     (TEMPL agent-time-duration-templ) ; like pause
     )
    )
   )
  (W::tattoo
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("image_impression-25.1") :wn ("tattoo%2:36:00"))
     (LF-PARENT ONT::write)
 ; like sign
     )
    )
   )
  (W::taunt
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date 20090501 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::provoke)
     (TEMPL CAUSE-EFFECT-AFFECTED-OBJCONTROL-optional-TEMPL)  ; like dare
     (example "He taunted him [to run for office]")  ; like wound,weary,revolt,disgruntle,dumbfound,entrance,horrify,stagger,fluster,amuse,floor,offend,discourage,disturb,tire,insult,annoy,disillusion,titillate,miff,incense,enlighten,amaze,hurt,tantalize,shock,stir,disappoint,exhaust,nettle,dissatisfy,afflict,enrapture,irk,cow,repulse,madden,alienate,dishearten,uplift,stupefy,please,perplex,excite,astound,revitalize,interest,gratify,enliven,stun,elate,sting,captivate,placate,entertain,infuriate,refresh,stimulate,demoralize,preoccupy,electrify,rankle,perturb,distract,bewitch,content,depress,demolish,irritate,embolden,disgust,pain,hearten,stump,inspire,surprise,anger,daunt,unnerve,repel,terrorize,discomfit,gall,spellbind,frighten,disgrace,startle,dismay,intimidate,bore,invigorate,mystify,disconcert,assuage,peeve,disarm,affront,embarrass,mortify,outrage,numb,arouse,roil,rile,strike,confound,agonize,provoke,gladden,vex,disquiet,deject,flabbergast,daze,touch,flatter,lull,overawe,sober,bug,awe,muddle,tempt,plague,hypnotize,solace,convince,chagrin,bewilder,overwhelm,threaten,affect,engross,tease,satisfy,impress,spook,discombobulate,move,baffle,obsess,nauseate,reassure,charm,beguile,engage,sadden,console,cheer,distress,astonish,enchant,shake,jar,scandalize,terrify,jolt,enrage,encourage,exhilarate,entice,alarm,devastate,enthrall,discompose,boggle,comfort,tickle,trouble,scare,faze,appall,relieve,antagonize,haunt,sicken,dazzle,delight,intrigue,concern,abash,upset,pique,dispirit,thrill,appease,jollify,torment,puzzle,try,unsettle,harass,frustrate,ruffle,aggravate,fascinate,galvanize,grieve,mollify,bother,displease,enthuse,exasperate,agitate,wow,shame,humiliate,mesmerize,pacify,intoxicate,humble
     )
    )
   )
  (W::teem
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57"))
     (LF-PARENT ONT::precipitating)
     (TEMPL expletive-templ) ; like rain
     )
     ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57"))
     (LF-PARENT ONT::precipitating)
     (TEMPL theme-templ)
     )
    )
   )
  (W::thaw
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("?thaw%2:30:00"))
     (LF-PARENT ont::atmospheric-event)
     (TEMPL expletive-templ) ; like rain
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("?thaw%2:30:00"))
     (LF-PARENT ont::atmospheric-event)
     (TEMPL theme-templ)
     (example "the ice thawed")
     )
    )
   )
  (W::thunder
   (wordfeats (W::morph (:forms (-vb) :past W::thundered :ing W::thundering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("weather-57") :wn ("thunder%2:43:00"))
     (LF-PARENT ont::atmospheric-event)
     (TEMPL expletive-templ) ; like rain
     )
    )
   )
  (W::titter
   (wordfeats (W::morph (:forms (-vb) :past W::tittered :ing W::tittering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("titter%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::toil
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like roll,scoot,walk,stomp,dart,roam,nip,parade,mosey,clamber,slither,troop,speed,leap,promenade,totter,trot,jog,stride,lope,hike,wander,somersault,cavort,tear,lurch,pad,canter,scramble,prance,plod,hobble,trudge,hurry,slog,slide,clump,saunter,skip,gallop,slink,skulk,prowl,gambol,carom,scurry,dash,journey,meander,swim,travel,slouch,file,romp,waddle,crawl,inch,creep,skitter,limp,dodder,mince,trek,stumble,race,climb,amble,rush,stray,hurtle,vault,charge,toddle,strut,stroll,sneak,trundle,shamble,backpack,tiptoe,tramp,whiz,scud,perambulate,scamper,scuttle,sashay,lollop,stump,rove,flit,wade,drift,stagger,float,sweep,traipse,run,hasten,coast,bolt,zigzag,ramble,sidle,sleepwalk,streak,frolic,march,swagger,glide,goose-step,bound,scutter,shuffle,lumber,bowl
     )
    )
   )
  (W::torture
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-distress)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::tote
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("carry-11.4") :wn ("tote%2:35:00"))
     (LF-PARENT ONT::haul)
 ; like drag
     )
    )
   )
  (W::tour
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("run-51.3.2"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ) ; like roll,scoot,walk,stomp,dart,roam,nip,parade,mosey,clamber,slither,troop,speed,leap,promenade,totter,trot,jog,stride,lope,hike,wander,somersault,cavort,tear,lurch,pad,canter,scramble,prance,plod,hobble,trudge,hurry,slog,slide,clump,saunter,skip,gallop,slink,skulk,prowl,gambol,carom,scurry,dash,journey,meander,swim,travel,slouch,file,romp,waddle,crawl,inch,creep,skitter,limp,dodder,mince,trek,stumble,race,climb,amble,rush,stray,hurtle,vault,charge,toddle,strut,stroll,sneak,trundle,shamble,backpack,tiptoe,tramp,whiz,scud,perambulate,scamper,scuttle,sashay,lollop,stump,rove,flit,wade,drift,stagger,float,sweep,traipse,run,hasten,coast,bolt,zigzag,ramble,sidle,sleepwalk,streak,frolic,march,swagger,glide,goose-step,bound,scutter,shuffle,lumber,bowl
     )
    )
   )
  (W::tow
   ;; adding :nom for obtw demo
   (wordfeats (W::morph (:forms (-vb) :nom W::tow)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20110928 :comments nil :vn ("carry-11.4") :wn ("tow%2:35:00"))
     (LF-PARENT ONT::haul)
 ; like drag
     )
    )
   )
  (W::transcribe
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("transcribe-25.4") :wn ("transcribe%2:32:00" "transcribe%2:32:01" "transcribe%2:32:02" "transcribe%2:36:00"))
     (LF-PARENT ONT::record)
 ; like tape,record
     )
    )
   )
  (W::transfix
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090512 :comments nil :vn ("amuse-31.1"))
     (LF-PARENT ONT::evoke-attention)
     (TEMPL cause-experiencer-xp-templ)
     )
    )
   )
  (W::transmute
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("turn-26.6.1") :wn ("transmute%2:30:00" "transmute%2:30:01" "transmute%2:30:02"))
     (LF-PARENT ONT::adjust)
     (TEMPL agent-theme-result-optional-templ (xp (% w::pp (w::ptype w::into)))) ; like translate but pp is into not to
     )
    )
   )
  (W::transpire
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("occurrence-48.3") :wn ("transpire%2:30:09"))
     (LF-PARENT ONT::happen)
     (TEMPL theme-templ) ; like occur,happen
     )
    )
   )
  (W::trawl
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("trawl%2:33:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::troll
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20061005 :comments nil :vn ("search-35.2") :wn ("troll%2:33:00"))
     (LF-PARENT ONT::physical-scrutiny)
     (TEMPL agent-theme-xp-templ) ; like check,search
     )
    )
   )
  (W::truck
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("drive-11.5-1"))
     (LF-PARENT ONT::transport)
 ; like shuttle
     )
    )
   )
  (W::tumble
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("escape-51.1-2"))
     (LF-PARENT ONT::fall)
     (TEMPL theme-templ) ; like go,fall
     )
    )
   )
  ((W::turn w::out)
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("occurrence-48.3"))
     (LF-PARENT ONT::happen)
     (example "it happens to be true")
     (TEMPL theme-affected-xp-templ (xp (% w::cp (w::ctype w::s-to)))) ; like happen
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("occurrence-48.3"))
     (LF-PARENT ONT::happen)
     (TEMPL theme-templ) ; like occur,happen
     )
    )
   )
  (W::twirl
   (SENSES
    ((meta-data :origin "verbnet-2.0-corrected" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("twirl%2:38:00" "twirl%2:38:01"))
     (LF-PARENT ONT::rotate)
     (TEMPL theme-templ) ; like move,bounce
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("twirl%2:38:00" "twirl%2:38:01"))
     (LF-PARENT ONT::rotate)
 ; like rotate,turn,spin
     )
    )
   )
  (W::twist
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("twist%2:35:06" "twist%2:38:01" "twist%2:38:02"))
     (LF-PARENT ONT::rotate)
     (TEMPL theme-templ) ; like move,bounce
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("twist%2:35:06" "twist%2:38:01" "twist%2:38:02"))
     (LF-PARENT ONT::rotate)
 ; like rotate,turn,spin
     )
    )
   )
  (W::unburden
   (wordfeats (W::morph (:forms (-vb) :past W::unburdened :ing W::unburdening)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("unburden%2:35:00" "unburden%2:40:00"))
     (LF-PARENT ONT::remove-from)
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )
  (W::undertake
   (wordfeats (W::morph (:forms (-vb) :past W::undertook :pastpart W::undertaken :ing W::undertaking)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("begin-55.1-1"))
     (LF-PARENT ONT::start)
 ; like begin
     (templ cause-effect-xp-templ)
     )
    )
   )
  (W::unfix
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("disassemble-23.3"))
     (LF-PARENT ONT::unattach)
 ; like unclip,unleash,unbolt,unhitch,unpin,unlatch,unglue,unstaple,unscrew,unlace,unbutton,unhook,unclamp,unclasp,sunder,unhinge,unshackle,detach,unlock,unpeg,unfasten,untie,unchain,unstitch,unbuckle,unzip
     (TEMPL agent-theme-co-theme-optional-templ (xp (% w::pp (w::ptype w::from))))	  
     )
    )
   )
  (W::upbraid
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("upbraid%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he upbraidede it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::uproot
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090528 :comments nil :vn ("remove-10.1") :wn ("uproot%2:35:00" "uproot%2:41:00"))
     (LF-PARENT ONT::socially-remove)
     (TEMPL agent-theme-source-optional-templ)
     )
    )
   )
  (W::victimize
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090508 :comments nil :vn ("judgement-33") :wn ("victimize%2:41:00" "victimize%2:41:01"))
     (LF-PARENT ont::punish)
     (TEMPL agent-affected-xp-templ)
     )
    )
   )
  (W::vilify
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090507 :comments nil :vn ("judgement-33") :wn ("vilify%2:32:00"))
     (LF-PARENT ONT::criticize)
     (TEMPL agent-addressee-templ) ; like thank
     )
    ((meta-data :origin cardiac :entry-date 20090121 :change-date 20090507 :comments nil :vn ("judgement-33"))
     (LF-PARENT ONT::criticize)
     (example "he vilified it")
     (TEMPL agent-theme-xp-templ) 
     )
    )
   )
  (W::voice
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090505 :comments nil :vn ("say-37.7"))
     ;;(LF-PARENT ONT::talk)
 ; like respond,reply
     (lf-parent ont::discuss-mention-recount-reiterate-relate-voice-claim-proclaim-state-articulate-blab-blurt) ;; 20120523 GUM change new parent
     )
    )
   )
  (W::void
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090601 :comments nil :vn ("cheat-10.6") :wn ("void%2:30:04"))
     (LF-PARENT ONT::remove-from)
     (TEMPL agent-source-theme-optional-templ)
     )
    )
   )
  (W::wager
   (wordfeats (W::morph (:forms (-vb) :past W::wagered :ing W::wagering)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("rely-70"))
     (LF-PARENT ont::rely)
     (TEMPL theme-co-theme-xp-templ (xp (% w::pp (w::ptype w::on)))) ; like rely,depend,count
     )
    )
   )
  (W::wean
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("cheat-10.6") :wn ("wean%2:37:00"))
     (LF-PARENT ONT::deprive)
     (TEMPL cause-affected-effect-optional-templ (xp (% w::cp (w::ctype w::s-from-ing))))
     )
    )
   )
  (W::whirl
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("whirl%2:38:00" "whirl%2:38:01" "whirl%2:38:02" "whirl%2:38:03" "whirl%2:38:04"))
     (LF-PARENT ONT::rotate)
     (TEMPL theme-templ) ; like move,bounce
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("whirl%2:38:00" "whirl%2:38:01" "whirl%2:38:02" "whirl%2:38:03" "whirl%2:38:04"))
     (LF-PARENT ONT::rotate)
 ; like rotate,turn,spin
     )
    )
   )
  (W::whistle
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("whistle%2:32:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
  (W::win
   (wordfeats (W::morph (:forms (-vb) :past W::won :ing W::winning)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("get-13.5.1") :wn ("win%2:40:00"))
     (LF-PARENT ONT::acquire)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype (? pt w::from))))) ; like catch
     )
    )
   )
  (W::overcome
   (wordfeats (W::morph (:forms (-vb) :past W::overcame)))
   (SENSES
    ((meta-data :origin "text processing" :entry-date 20060315 :change-date nil :comments nil :wn ("overcome%2:33:03"))
     (LF-PARENT ONT::overcome)
     (example "he overcame the obstacle")
     )
    )
   )
  (W::score
   (SENSES
    ((meta-data :origin "wordnet-3.0" :entry-date 20090429 :change-date nil :comments nil :vn ("get-13.5.1"))
     (LF-PARENT ONT::acquire)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype (? pt w::from))))) ; like catch
     )
    )
   )
  (W::wind
   (wordfeats (W::morph (:forms (-vb) :past W::wound :ing W::winding)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("roll-51.3.1") :wn ("wind%2:35:06" "wind%2:38:00"))
     (LF-PARENT ONT::rotate)
     (example "it wound around the fence")
     (TEMPL theme-templ) ; like move,bounce
     )
    )
   )
  (W::withdraw
   (wordfeats (W::morph (:forms (-vb) :past W::withdrew :pastpart W::withdrawn :ing W::withdrawing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090527 :comments nil :vn ("remove-10.1") :wn ("withdraw%2:30:01" "withdraw%2:40:00" "withdraw%2:40:01"))
     (LF-PARENT ONT::cause-out-of)
     (TEMPL agent-theme-source-optional-templ)
     )
    ((lf-parent ont::remove-from)
     (example "he withdrew from the field")
     (templ agent-source-templ (xp (% W::PP (W::ptype W::from))))
    )
    )
   )

  (W::wrench
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date 20090529 :comments nil :vn ("remove-10.1") :wn ("wrench%2:35:00"))
     (LF-PARENT ONT::pull)
     (TEMPL agent-theme-source-optional-templ (xp (% w::pp (w::ptype w::from)))) ; like eliminate
     )
    )
   )
  (W::yawn
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("nonverbal_expression-40.2") :wn ("yawn%2:29:00"))
     (LF-PARENT ont::nonverbal-expression)
     (TEMPL agent-templ) ; like laugh
     )
    )
   )
; begin words manually added from top 100 words in verbnet but not trips --wdebeaum
  (W::bear
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060505 :change-date 20090511 :comments nil :vn ("admire-31.2"))
     (EXAMPLE "I can't bear it")
     (LF-PARENT ONT::enduring)
     (TEMPL experiencer-theme-xp-templ) ; like admire,adore,appreciate,despise,detest,dislike,loathe,miss,tolerate
     )
    )
   )
  (W::seek
   (wordfeats (W::morph (:forms (-vb) :past W::sought :ing W::seeking)))
   (senses
    ((EXAMPLE "seek something else")
     (LF-PARENT ONT::seek)
     (TEMPL cognizer-THEME-XP-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060505 :change-date nil :comments nil :vn ("ferret-35.6") :wn ("seek%2:40:00" "seek%2:32:00"))
     )
    )
   )
  (W::demand
   (wordfeats (W::morph (:forms (-vb) :nom W::demand)))
   (SENSES
    ((EXAMPLE "demand something")
     ;;(LF-PARENT ONT::REQUEST)
     (lf-parent ont::appeal-apply-demand) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (meta-data :origin "verbnet-2.0" :entry-date 20060505 :change-date nil :comments nil :vn ("order-60"))
     )
    ((EXAMPLE "demand that he do something")
     ;(LF-PARENT ONT::REQUEST)
     (lf-parent ont::appeal-apply-demand) ;; 20120523 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-effect-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-that w::s-that-subjunctive)))))
     (meta-data :origin "verbnet-2.0" :entry-date 20060505 :change-date nil :comments nil :vn ("order-60"))
     )
    )
   )
  (W::disappear
   (wordfeats (W::morph (:forms (-vb) :nom W::disappearance)))
   (SENSES
    ((EXAMPLE "He disappeared")
     (LF-PARENT ONT::departing) ; by analogy with W::appear/ONT::arrive
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("disappearance-48.2") :wn ("disappear%2:30:00" "disappear%2:39:00" "disappear%2:30:02"))
     )
    )
   )
  (W::shout ; like talk
   (wordfeats (W::morph (:forms (-vb) :nom W::shout)))
   (SENSES
     (;(LF-PARENT ONT::TALK)
      (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he shouted at/to her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL 
	    (xp1 (% w::pp (w::ptype (? ptp W::at w::to)))))
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("shout%2:32:08"))
     )
    (;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he shouted about it [to/with her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("shout%2:32:08"))
     )
     ;;;; he shouted at 5 pm
    (;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL AGENT-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("shout%2:32:08"))
     )
    )
   )
  (W::imply
   (wordfeats (W::morph (:forms (-vb) :nom W::implication)))
   (SENSES
    ((LF-PARENT ONT::correlation) ; like indicate
     (example "a cough implies a cold")
     (TEMPL theme-co-theme-xp-templ)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("indicate-78"))
     )
    )
   )
  (W::wash
   (SENSES
    ((LF-PARENT ONT::clean)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (example "tidy the room")
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("dress-41.1.1" "floss-41.2.1" "preparing-26.3" "spray-9.7" "wipe_manner-10.4.1") :wn ("wash%2:29:00" "wash%2:30:05" "wash%2:35:00" "wash%2:35:01" "wash%2:35:02" "wash%2:35:10"))
     )
    )
   )
  (W::house
   (SENSES
    ((LF-PARENT ONT::CONTAINMENT)
      (EXAMPLE "The hangar houses an airplane")
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL LOCATION-THEME-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("fit-54.3" "pocket-9.10") :wn ("house%2:41:00"))
     )
    )
   )
  (W::abandon
   (wordfeats (W::morph (:forms (-vb) :past W::abandoned :ing W::abandoning :nom w::abandonment)))
   (SENSES
    ((LF-PARENT ONT::LEAVE-behind)
     (example "he abandoned his dog at the house")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (templ agent-theme-xp-templ)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("leave-51.2") :wn ("abandon%2:40:00" "abandon%2:38:00"))
     )
    )
   )
  (W::cope
   (SENSES
    (;(LF-PARENT ONT::managing) ; like deal, (not entirely sure this is correct --wdebeaum)
     (lf-parent ont::cope-deal) ;; 20120524 GUM change new parent
     (example "cope with it")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::with))))
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("cope-81-1"))
     )
    )
   )
  (W::kiss
   (wordfeats (W::morph (:forms (-vb) :nom w::kiss)))
   (SENSES
    ((LF-PARENT ONT::kissing)
     (EXAMPLE "John kissed Marsha")
     (TEMPL agent-THEME-XP-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("marry-36.2" "touch-20") :wn ("kiss%2:35:00" "kiss%2:35:01"))
     )
    ((LF-PARENT ONT::kissing)
     (EXAMPLE "John and Marsha kissed")
     (TEMPL THEME-PLURAL-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("marry-36.2" "touch-20") :wn ("kiss%2:35:00" "kiss%2:35:01"))
     )
    )
   )
  (W::breathe
   (wordfeats (W::morph (:forms (-vb) :nom w::breath)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )

   (W::hyperventilate
    (wordfeats (W::morph (:forms (-vb) :nom w::hyperventilation)))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090408 :change-date nil :comments nil)
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )

   (W::emit
     (wordfeats (W::morph (:forms (-vb) :nom w::emission)))
   (SENSES
    ((meta-data :origin text-processing :entry-date 20091216 :change-date nil :comments wf-missing-mappings)
     (LF-PARENT ONT::emit)
     (example "it emitted steam")
     (TEMPL cause-effect-xp-templ)
     )
    )
   )

    (W::secrete
     (wordfeats (W::morph (:forms (-vb) :nom w::secretion)))
   (SENSES
    ((meta-data :origin text-processing :entry-date 20091216 :change-date nil :comments wf-missing-mappings)
     (LF-PARENT ONT::emit)
     (example "it secreted fluid")
     (TEMPL cause-effect-xp-templ)
     )
    )
   )

   (W::sound
    (wordfeats (W::morph (:forms (-vb) :nom w::sound)))
   (SENSES
    ((meta-data :origin text-processing :entry-date 20091216 :change-date nil :comments wf-missing-mappings)
     (LF-PARENT ONT::make-sound)
     (example "the alarm sounded")
     (TEMPL effect-templ)
     )
    ((meta-data :origin text-processing :entry-date 20091216 :change-date nil :comments wf-missing-mappings)
     (LF-PARENT ONT::make-sound)
     (example "he sounded the alarm")
     (TEMPL cause-effect-xp-templ)
     )
    ((LF-PARENT ONT::APPEARS-TO-HAVE-PROPERTY)
     (example "the wind sounds fierce")
     (TEMPL THEME-PRED-EXPERIENCER-OPTIONAL-TEMPL)
     )
    )
   )

  ((W::breathe (w::in))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )

    ((W::breathe (w::out))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-co-theme-xp-templ) ; like vomit
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
  
   (W::inhale
     (wordfeats (W::morph (:forms (-vb) :nom w::inhalation)))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-co-theme-xp-templ)
     (example "he inhaled the air")
     )
     ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
      (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )

      (W::exhale
       (wordfeats (W::morph (:forms (-vb) :nom w::exhalation)))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-co-theme-xp-templ)
     (example "he exhaled smoke")
     )
     ((meta-data :origin cardiac :entry-date 20090130 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("breathe%2:29:00" "breathe%2:32:00"))
      (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
  (W::expose
    (wordfeats (W::morph (:forms (-vb) :nom w::exposure)))
   (SENSES
    ((LF-PARENT ONT::visual-display)
     (EXAMPLE "he exposed the truth")
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date 20090506 :comments nil :vn ("reflexive_appearance-48.1.2"))
     )
    )
   )
  (W::sink
   (wordfeats (W::morph (:forms (-vb) :past W::sank :pastpart W::sunk :ing W::sinking :nom w::sink)))
   (SENSES
    ((LF-PARENT ONT::move-downward)
     (EXAMPLE "He sank the boat")
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("other_cos-45.4") :wn ("sink%2:38:02" "sink%2:38:00"))
     )
    ((LF-PARENT ONT::move-downward)
     (TEMPL THEME-TEMPL)
     (EXAMPLE "The boat sank")
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("other_cos-45.4") :wn ("sink%2:38:02" "sink%2:38:00"))
     )
    )
   )
  (W::whisper
   (wordfeats (W::morph (:forms (-vb) :past W::whispered :ing W::whispering :nom w::whisper)))
   (SENSES
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "He whispered that three teams are going to Delta")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-finite)))))
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("whisper%2:32:00"))
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "he whispered go over there")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% w::utt)))
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("whisper%2:32:00"))
     )
    (;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "whisper it to him")
     (TEMPL AGENT-THEME-to-addressee-optional-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("whisper%2:32:00"))
     )
    (;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "whisper")
     (TEMPL AGENT-TEMPL)
     (preference .96)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("whisper%2:32:00"))
     )
    )
   )
    (W::murmur
   (wordfeats (W::morph (:forms (-vb) :past W::murmured :ing W::murmuring :nom w::murmur)))
   (SENSES
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "He whispered that three teams are going to Delta")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-finite)))))
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("whisper%2:32:00"))
     )
    ((LF-PARENT ONT::REPORT-SPEECH)
     (example "he whispered go over there")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% w::utt)))
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("whisper%2:32:00"))
     )
    (;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "whisper it to him")
     (TEMPL AGENT-THEME-to-addressee-optional-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("whisper%2:32:00"))
     )
      (;(LF-PARENT ONT::talk)
       (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "whisper")
     (TEMPL AGENT-TEMPL)
     (preference .96)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3") :wn ("whisper%2:32:00"))
     )
    )
   )
  (W::bury
    (wordfeats (W::morph (:forms (-vb) :nom w::burial)))
   (SENSES
    ((LF-PARENT ONT::put) ; like insert, embed
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("put-9.1"))
     (example "bury the chest")
     (SEM (F::Cause F::agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::capture
    (wordfeats (W::morph (:forms (-vb) :nom w::capture)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date 20090430 :comments nil :vn ("steal-10.5") :wn ("capture%2:40:00"))
     (LF-PARENT ONT::capture)
     (TEMPL agent-theme-recipient-alternation-templ) ; like get, steal
     )
    )
   )
  (W::consult
    (wordfeats (W::morph (:forms (-vb) :nom w::consultation)))
   (SENSES
    ((LF-PARENT ONT::interview)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ADDRESSEE-ASSOCIATED-INFORMATION-TEMPL)
     (example "consult him about it")
     (meta-data :origin task-learning :entry-date 20060512 :change-date nil :comments nil :vn ("battle-36.4" "inquire-37.1.2" "meet-36.3-1") :wn ("consult%2:32:02" "consult%2:32:01" "consult%2:32:03"))
     )
      ;; have to have this straight transitive sense for passive to work
    ((LF-PARENT ONT::interview)
     (example "consult the boss" "he was consulted")
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL agent-addressee-templ)
     )
    ;; consult the manual
    )
   )
  (W::scream ; like talk
    (wordfeats (W::morph (:forms (-vb) :nom w::scream)))
   (SENSES
    ;;;; ?
    (;(LF-PARENT ONT::talk)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3" "sound_emission-43.2") :wn ("scream%2:32:01" "scream%2:32:08" "scream%2:39:00"))
     )
    (;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he screamed at her [about it]")
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL 
	    (xp1 (% w::pp (w::ptype (? ptp W::at)))))
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3" "sound_emission-43.2") :wn ("scream%2:32:01" "scream%2:32:08" "scream%2:39:00"))
     )
    (;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he screamed about it [to/with her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3" "sound_emission-43.2") :wn ("scream%2:32:01" "scream%2:32:08" "scream%2:39:00"))
     )
     ;;;; he screamed all day
    (;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (TEMPL AGENT-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date nil :comments nil :vn ("manner_speaking-37.3" "sound_emission-43.2") :wn ("scream%2:32:01" "scream%2:32:08" "scream%2:39:00"))
     )
    )
   )
   (W::rage
     (wordfeats (W::morph (:forms (-vb) :nom w::rage)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060315 :change-date nil :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::disliking)
     (TEMPL experiencer-theme-xp-templ (xp (% w::pp (w::ptype (? p w::about w::against))))) ; like mind,worry
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("marvel-31.3-2"))
     (LF-PARENT ONT::experiencer-emotion)
     (TEMPL experiencer-templ) ; like mind
     )
    ((example "the storm raged")
     (meta-data :origin cardiac :entry-date 20080508 :change-date nil :comments LM-vocab :vn ("entity_specific_cos-45.5"))
     (LF-PARENT ONT::atmospheric-event)
     (TEMPL theme-templ) 
     )
    )
   )

  (W::protest
    (wordfeats (W::morph (:forms (-vb) :nom w::protest)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date 20090508 :comments nil :vn ("conspire-71"))
     ;(LF-PARENT ONT::contest)
     (lf-parent ont::contest-deny-oppose-protest) ;; 20120523 GUM change new parent
     (example "I protest the plan")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::injure ; like hurt
    (wordfeats (W::morph (:forms (-vb) :past W::injured :ing W::injuring :nom w::injury)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date 20090512 :comments nil :vn ("hurt-40.8.3-2") :wn ("injure%2:29:00"))
     (LF-PARENT ONT::evoke-injury)
     (TEMPL CAUSE-EXPERIENCER-XP-TEMPL)
     )
    )
   )
  (W::INJUR ; misspelling
    (wordfeats (W::morph (:forms (-vb) :past W::injured :ing W::injuring)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060512 :change-date 20090512 :comments nil :vn ("hurt-40.8.3-2") :wn ("injure%2:29:00"))
     (LF-PARENT ONT::evoke-injury)
     (TEMPL CAUSE-EXPERIENCER-XP-TEMPL)
     )
    )
   )
  (W::collapse
   (SENSES
    ((LF-PARENT ONT::BREAK-OBJECT)
     (meta-data :origin "verbnet-2.0" :entry-date 20060519 :change-date nil :comments nil :vn ("other_cos-45.4") :wn ("collapse%2:38:00" "collapse%2:38:02" "collapse%2:38:03"))
     (example "the bridge collapsed")
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::remark
    (wordfeats (W::morph (:forms (-vb) :nom W::remark)))
   (SENSES
    ((LF-PARENT ONT::REPORT-SPEECH)
     (meta-data :origin "verbnet-2.0" :entry-date 20060519 :change-date nil :comments nil :vn ("say-37.7-1" "lecture-37.11-1") :wn ("remark%2:32:00" "remark%2:32:01"))
     (example "He remarked that three teams are going to Delta")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-finite)))))
     )
    (;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (meta-data :origin "verbnet-2.0" :entry-date 20060519 :change-date nil :comments nil :vn ("say-37.7-1" "lecture-37.11-1") :wn ("remark%2:32:00" "remark%2:32:01"))
     (example "he remarked about it [to her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
    )
   )
   (W::comment
    (wordfeats (W::morph (:forms (-vb) :nom W::comment)))
   (SENSES
    ((LF-PARENT ONT::REPORT-SPEECH)
     (meta-data :origin "verbnet-2.0" :entry-date 20060519 :change-date nil :comments nil :vn ("say-37.7-1" "lecture-37.11-1") :wn ("remark%2:32:00" "remark%2:32:01"))
     (example "He commented that three teams are going to Delta")
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-XP-TEMPL (xp (% W::cp (W::ctype (? c W::s-finite)))))
     )
    (;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (meta-data :origin "verbnet-2.0" :entry-date 20060519 :change-date nil :comments nil :vn ("say-37.7-1" "lecture-37.11-1") :wn ("remark%2:32:00" "remark%2:32:01"))
     (example "he commented about it [to her]")
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
    )
   )
  (W::murder
   (wordfeats (W::morph (:forms (-vb) :past W::murdered :ing W::murdering :nom w::murder)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060519 :change-date 20090504 :comments nil :vn ("murder-42.1") :wn ("murder%2:41:00"))
     (LF-PARENT ONT::destroy)
     )
    )
   )
  (W::knit
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060519 :change-date nil :comments nil :vn ("build-26.1" "crane-40.3.2") :wn ("?knit%2:35:00" "knit%2:36:00"))
     (LF-PARENT ONT::create)
     )
    )
   )
  (W::trap
   (wordfeats (W::morph (:forms (-vb) :nom w::trap)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060519 :change-date nil :comments nil :vn ("force-59-1" "pocket-9.10") :wn ("trap%2:35:00"))
     (LF-PARENT ONT::acquire)
     (example "he trapped (him) a fish")
     (TEMPL agent-theme-recipient-alternation-templ) ; like get, steal
     )
    )
   )
  (W::assert
   (wordfeats (W::morph (:forms (-vb) :nom w::assertion)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060605 :change-date 20090506 :comments nil :vn ("conjecture-29.5-2" "reflexive_appearance-48.1.2") :wn ("assert%2:32:00" "assert%2:32:01"))
     ;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL agent-theme-xp-templ (xp (% w::cp (w::ctype (? c w::s-that))))) ; like acknowledge
     )
    ((meta-data :origin jr :entry-date 20060605 :comments gloss-variant)
     ;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (example "he asserted his independence")
     (TEMPL agent-theme-xp-templ)
     )
    )
   )
  (W::recruit
   (wordfeats (W::morph (:forms (-vb) :nom w::recruitment)))
   (SENSES
    ((lf-parent ont::acquire)
     (example "recruit the basketball player")
     (meta-data :origin "verbnet-2.0" :entry-date 20060605 :change-date nil :comments nil :vn ("orphan-29.7") :wn ("recruit%2:40:00" "recruit%2:33:00"))
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic) (F::trajectory F::-))
     (TEMPL agent-theme-SOURCE-templ (xp (% W::PP (W::ptype W::from))))
     )
    )
   )
  (W::command
   (wordfeats (W::morph (:forms (-vb) :nom w::command)))
   (SENSES
    ((LF-PARENT ONT::Command)
     (example "command him to do it")
     (meta-data :origin "verbnet-2.0" :entry-date 20060605 :change-date nil :comments nil :vn ("order-60-1"))
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-addressee-effect-OBJCONTROL-TEMPL)
     )
    ((LF-PARENT ONT::command)
     (example "he commands that you send this message")
     (meta-data :origin ptb :entry-date 20100421 :change-date nil :comments nil)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-effect-XP-TEMPL (xp (% W::cp (W::ctype (? c w::s-that-subjunctive)))))
     )
    )
   )
  (W::debate
   (SENSES
    (;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he debated with her [about it]")
     (meta-data :origin "verbnet-2.0" :entry-date 20060605 :change-date nil :comments nil :vn ("correspond-36.1-1-1" "meet-36.3-2") :wn ("debate%2:31:00" "debate%2:32:01"))
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL
            (xp1 (% w::pp (w::ptype w::with))))
     )
    (;(LF-PARENT ONT::TALK)
     (LF-PARENT  ONT::schmooze-talk-utter-yak-remark-say-speak) ;; 20120521 GUM change new parent
     (example "he debated about it [with her]")
     (meta-data :origin "verbnet-2.0" :entry-date 20060605 :change-date nil :comments nil :vn ("correspond-36.1-1-1" "meet-36.3-2") :wn ("debate%2:31:00" "debate%2:32:01"))
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     )
    )
   )
  (W::descend
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060605 :change-date nil :comments nil :vn ("escape-51.1-1") :wn ("descend%2:38:00"))
     (LF-PARENT ONT::move-downward)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::unite
   (SENSES
    ((EXAMPLE "unite this cell with the next cell")
     (LF-PARENT ONT::joining)
     (TEMPL AGENT-THEME-CO-THEME-optional-TEMPL (xp (% W::PP (W::ptype W::with))))
     (meta-data :origin "verbnet-2.0" :entry-date 20060605 :change-date nil :comments nil :vn ("amalgamate-22.2-2-1") :wn ("unite%2:30:00" "?unite%2:42:01" "unite%2:42:02" "unite%2:30:02"))
     )
    ; need more senses
    )
   )
  (W::exhibit
     (wordfeats (W::morph (:forms (-vb) :past W::exhibited :ing W::exhibiting)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date 20090506 :comments nil :vn ("reflexive_appearance-48.1.2"))
     (LF-PARENT ONT::visual-display)
     (example "he exhibited confidence")
     )
    )
   )
  (W::conceal
   (SENSES
    ((LF-PARENT ONT::HIDE)
     (example "conceal the objects")
     (meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("concealment-16") :wn ("conceal%2:39:01" "conceal%2:39:00"))
     )
    )
   )
  (W::function
   (SENSES
    ((LF-PARENT ONT::FUNCTION)
     (SEM (F::Aspect F::stage-level) (F::Time-span F::extended))
     (TEMPL THEME-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("masquerade-29.6"))
     (example "the truck functions")
     )
    )
   )
  (W::guard
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 200060606 :change-date nil :comments nil :vn ("captain-29.8-1") :wn ("guard%2:41:00" "guard%2:33:00" "guard%2:33:03"))
     (LF-PARENT ont::protecting)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "guard my possessions while I'm away")
     )
    ((meta-data :origin cmap-testing :entry-date 20090929 :change-date nil :comments nil)
     (LF-PARENT ONT::protecting)
     (SEM (F::Aspect F::Stage-level) (F::Time-span F::extended))
     (example "the fence guarded the compound")
     (templ cause-theme-xp-templ)
     (preference .98) ;; prefer agentive
     )
    )
   )
  (w::warm
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date 20090504 :comments nil :vn ("other_cos-45.4") :wn ("warm%2:30:00" "warm%2:30:01"))
     (LF-PARENT ONT::heat)
     (example "warm the water")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::vanish
   (SENSES
    ((EXAMPLE "He vanished")
     (LF-PARENT ONT::departing) ; like disappear
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("disappearance-48.2") :wn ("vanish%2:30:00" "vanish%2:39:00" "vanish%2:38:05" "vanish%2:30:02" "vanish%2:30:01"))
     )
    )
   )
  (W::telephone
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date 20090508 :comments nil :vn ("instr_communication-37.4") :wn ("telephone%2:32:00"))
     (EXAMPLE "telephone the doctor")
     (LF-PARENT ONT::establish-communication)
     (TEMPL AGENT-ADDRESSEE-TEMPL)
     (preference .97) ;; prefer noun sense
     )
    )
   )
  (w::tighten
   (senses
    ((meta-data :origin "verbnet2.0" :entry-date 20060606 :change-date 20090504 :comments nil :vn ("other_cos-45.4") :wn ("tighten%2:30:01" "tighten%2:30:00"))
     (LF-PARENT ONT::increase)
     (syntax (w::resultative +)) ;; the tightened screw
     (example "tighten the screw")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((meta-data :origin "verbnet2.0" :entry-date 20060606 :change-date 20090504 :comments nil :vn ("other_cos-45.4") :wn ("tighten%2:30:01" "tighten%2:30:00"))
     (LF-PARENT ONT::increase)
     (templ theme-templ)
     (example "the screws tightened")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
   (w::constrict
   (senses
    ((meta-data :origin "verbnet2.0" :entry-date 20060606 :change-date 20090504 :comments nil :vn ("other_cos-45.4") :wn ("tighten%2:30:01" "tighten%2:30:00"))
     (LF-PARENT ONT::decrease)
     (syntax (w::resultative +)) ;; the tightened screw
     (example "the chains constricted his movement")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((LF-PARENT ONT::decrease)
     (templ theme-templ)
     (example "the arteries constricted")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::post
   (SENSES
    ((LF-PARENT ONT::SEND)
     (meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("send-11.1") :wn ("post%2:32:02"))
     (example "post the website to the network")
     (SEM (F::aspect F::bounded) (F::time-span F::atomic))
     )
    )
   )
  (W::thrust
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("push-12-1-1"))
     (LF-PARENT ONT::push)
     (TEMPL cause-theme-xp-templ) ; like push
     )
    )
   )
  (w::widen
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date 20090504 :comments nil :vn ("other_cos-45.4") :wn ("widen%2:30:00" "widen%2:30:05" "widen%2:30:03"))
     (LF-PARENT ONT::increase)
     (example "widen the hole")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::shed
   (wordfeats (W::morph (:forms (-vb) :past W::shed :ing W::shedding)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("substance_emission-43.4") :wn ("shed%2:35:02" "shed%2:35:00" "shed%2:29:00"))
     (EXAMPLE "The dog is shedding")
     (LF-PARENT ONT::bodily-process)
     (TEMPL THEME-TEMPL)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("substance_emission-43.4") :wn ("shed%2:35:02" "shed%2:35:00" "shed%2:29:00"))
     (EXAMPLE "The snake shed its skin")
     (LF-PARENT ONT::bodily-process)
     (TEMPL THEME-CO-THEME-XP-TEMPL)
     )
    )
   )
  (W::coincide
   (SENSES
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL THEME-PLURAL-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("amalgamate-22.2-2-1" "correlate-86") :wn ("coincide%2:30:00"))
     )
    ((LF-PARENT ONT::INTERSECT)
     (SEM (F::Aspect F::indiv-level) (F::Time-span F::extended))
     (TEMPL theme-CO-THEME-XP-TEMPL (xp (% W::pp (W::ptype W::with))))
     (meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("amalgamate-22.2-2-1" "correlate-86") :wn ("coincide%2:30:00"))
     )
    )
   )
  (w::diminish
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date 20090504 :comments nil :vn ("calibratable_cos-45.6-1" "other_cos-45.4") :wn ("diminish%2:30:00"))
     (LF-PARENT ONT::decrease)
     (example "diminish the clock speed [to 1Ghz]")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype W::to))))
     )
    )
   )
  (W::compile
   (wordfeats (W::morph (:forms (-vb) :nom w::compilation)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060606 :change-date nil :comments nil :vn ("build-26.1") :wn ("compile%2:36:00"))
      (LF-PARENT ONT::arranging)
     )
    )
   )
  (W::joke
   (wordfeats (W::morph (:forms (-vb) :nom w::joke)))
   (SENSES
    (;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL AGENT-ADDRESSEE-THEME-OPTIONAL-TEMPL 
	    (xp1 (% w::pp (w::ptype (? ptp w::with)))))
     (meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date 20090506 :comments nil :vn ("correspond-36.1") :wn ("joke%2:32:00"))
     (example "he joked with her [about it]")
     )
    (;(LF-PARENT ONT::announce)
     (lf-parent ont::admit-assert-claim-confess-disclose-exclaim-insinuate-intimate-lie-joke-proclaim-report-reveal) ;; 20120523 GUM change new parent
     (TEMPL AGENT-ABOUT-THEME-ADDRESSEE-OPTIONAL-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date 20090506 :comments nil :vn ("correspond-36.1") :wn ("joke%2:32:00"))
     (example "he joked about it [to/with her]")
     )
    )
   )
  (W::heal
    (wordfeats (W::morph (:forms (-vb) :ing w::healing)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date nil :comments nil :vn ("other_cos-45.4") :wn ("heal%2:30:00" "heal%2:29:00" "heal%2:29:01"))
     (EXAMPLE "The doctor healed my wound")
     (LF-PARENT ONT::CURE)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date nil :comments nil :vn ("other_cos-45.4") :wn ("heal%2:30:00" "heal%2:29:00" "heal%2:29:01"))
     (EXAMPLE "The medicine healed my wound")
     (LF-PARENT ONT::CURE)
     (TEMPL INSTRUMENT-THEME-TEMPL)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date nil :comments nil :vn ("other_cos-45.4") :wn ("heal%2:30:00" "heal%2:29:00" "heal%2:29:01"))
     (EXAMPLE "My wound healed")
     (LF-PARENT ONT::CURE)
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::dictate
   (wordfeats (W::morph (:forms (-vb) :nom w::dictation)))
   (SENSES
    ((LF-PARENT ONT::transfer-information)
     (example "He dictated a letter to her")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date nil :comments nil :vn ("transfer_mesg-37.1-1") :wn ("dictate%2:31:00"))
     )
    )
   )
  (w::narrow
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date 20090504 :comments nil :vn ("other_cos-45.4") :wn ("narrow%2:30:00"))
     (LF-PARENT ONT::decrease)
     (example "narrow the gap")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::dip
   (wordfeats (W::morph (:forms (-vb) :nom w::dip)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date nil :comments nil :vn ("calibratable_cos-45.6-1" "funnel-9.3-1") :wn ("dip%2:30:01" "dip%2:35:00" "dip%2:34:00"))
     (EXAMPLE "the plane dipped")
     (LF-PARENT ONT::move-downward)
     (SEM (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL THEME-TEMPL)
     )
    )
   )
  (W::weave
   (wordfeats (W::morph (:forms (-vb) :past W::wove :pastpart W::woven :ing W::weaving :nom w::weave)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date nil :comments nil :vn ("build-26.1" "meander-47.7") :wn ("weave%2:36:00" "weave%2:38:00"))
     (EXAMPLE "weave a basket")
     (LF-PARENT ONT::CREATE)
     )
    )
   )
  (W::shiver
   (wordfeats (W::morph (:forms (-vb) :past W::shivered :ing W::shivering :nom w::shiver)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060607 :change-date nil :comments nil :vn ("body_internal_states-40.6") :wn ("shiver%2:38:00" "shiver%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
   (W::shudder
    (wordfeats (W::morph (:forms (-vb) :past W::shuddered :ing W::shuddering :nom w::shudder)))
   (SENSES
    ((meta-data :origin cardiac :entry-date 20081215 :change-date nil :comments nil :vn ("body_internal_states-40.6") :wn ("shiver%2:38:00" "shiver%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
  (W::rock
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date nil :comments nil :vn ("modes_of_being_with_motion-47.3") :wn ("rock%2:38:00"))
     (LF-PARENT ONT::move-back-and-forth)
     (example "the ship rocked")
     (TEMPL theme-templ)
     )
    )
   )
  (W::flush
    (wordfeats (W::morph (:forms (-vb) :nom w::flush)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date 20090528 :comments nil :vn ("hiccup-40.1.1" "wipe_manner-10.4.1") :wn ("flush%2:29:00" "flush%2:30:01" "flush%2:30:02" "flush%2:30:03"))
     (LF-PARENT ONT::push-out-of)
     (TEMPL agent-theme-source-optional-templ)
     )
    ((meta-data :origin "verbnet-1.5" :entry-date 20051219 :change-date nil :comments nil :vn ("breathe-40.1.2") :wn ("sweat%2:29:00"))
     (LF-PARENT ONT::bodily-process)
     (example "he was flushed")
     (TEMPL theme-templ) ; like bleed
     )
    )
   )
  (W::frame
    (wordfeats (W::morph (:forms (-vb) :nom w::frame)))
   (SENSES
    ((LF-PARENT ONT::surround)
     (TEMPL theme-CO-THEME-XP-TEMPL)
     (example "you hair frames you face")
     (meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date nil :comments nil :vn ("butter-9.9" "contiguous_location-47.8" "fill-9.8") :wn ("frame%2:35:00" "frame%2:42:00"))
     )
    )
   )
  (W::shrink
   (wordfeats (W::morph (:forms (-vb) :past W::shrank :pastpart W::shrunk :ing W::shrinking)))
   (SENSES
    ((LF-PARENT ONT::shrink)
     (EXAMPLE "I've shrunk the kids")
     (meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date 20090504 :comments nil :vn ("flinch-40.5" "other_cos-45.4") :wn ("shrink%2:30:02" "shrink%2:30:01" "shrink%2:30:00" "shrink%2:38:00"))
     )
    ((LF-PARENT ONT::shrink)
     (TEMPL THEME-TEMPL)
     (EXAMPLE "The kids shrank")
     (meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date 20090504 :comments nil :vn ("flinch-40.5" "other_cos-45.4") :wn ("shrink%2:30:02" "shrink%2:30:01" "shrink%2:30:00" "shrink%2:38:00"))
     )
    )
   )
  (w::straighten
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date 20090507 :comments nil :vn ("other_cos-45.4") :wn ("straighten%2:38:00" "straighten%2:35:00" "straighten%2:30:02"))
     (LF-PARENT ONT::arranging)
     (example "straighten the wire")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
;  (W::punch
;    (wordfeats (W::morph (:forms (-vb) :nom w::punch)))
;   (SENSES
;    ((meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date nil :comments nil :vn ("carve-21.2-2" "swat-18.2") :wn ("punch%2:35:00" "punch%2:35:01"))
;     (EXAMPLE "punch a hole in the paper")
;     (LF-PARENT ONT::hit)
;     )
;    )
;   )
  (W::distort
    (wordfeats (W::morph (:forms (-vb) :nom w::distortion)))
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date nil :comments nil :vn ("knead-26.5"))
     (LF-PARENT ONT::fold)
 ; like fold
     )
    )
   )
  (w::soften
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date 20090505 :comments nil :vn ("other_cos-45.4") :wn ("soften%2:30:01" "soften%2:30:00"))
     ;(LF-PARENT ONT::shape-change)
     (LF-PARENT ONT::sharpen-soft) ;; GUM change : new parent
     (example "soften the butter")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090505 :change-date nil :comments nil)
     (LF-PARENT ONT::visual-adjust)
     (example "soften the image")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (w::sharpen
   (senses
    ((meta-data :origin "wordnet-3.0" :entry-date 20090505 :change-date nil :comments nil)
     ;(LF-PARENT ONT::shape-change)
     (LF-PARENT ONT::sharpen-soft) ;; GUM change : new parent
     (example "sharpen the pencil")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    ((meta-data :origin "wordnet-3.0" :entry-date 20090505 :change-date nil :comments nil)
     (LF-PARENT ONT::visual-adjust)
     (example "sharpen the image")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     )
    )
   )
  (W::nominate
   (SENSES
    (;(LF-PARENT ONT::suggest)
     (lf-parent ont::nominate-refer) ;; 20120524 GUM change new parent
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     (TEMPL AGENT-THEME-xp-TEMPL)
     (meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date 20090513 :comments nil :vn ("appoint-29.1") :wn ("nominate%2:32:00" "nominate%2:41:02" "nominate%2:41:01" "nominate%2:41:00"))
     )
    )
   )
  (W::filter
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date 20090601 :comments nil :vn ("wipe_instr-10.4.2") :wn ("filter%2:35:00"))
     (EXAMPLE "filter the dirt from the water")
     (LF-PARENT ONT::remove-parts)
     (TEMPL agent-theme-source-templ (xp (% w::pp (w::ptype (? ptp w::from)))))
     (PREFERENCE 0.96)
     )
    ((meta-data :origin "verbnet-2.0" :entry-date 20060608 :change-date nil :comments nil :vn ("wipe_instr-10.4.2") :wn ("filter%2:35:00"))
     (example "filter the water")
     (LF-PARENT ONT::clean)
     (SEM (F::Aspect F::bounded) (F::Time-span F::extended))
     )
    )
   )
  (W::scrape
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060609 :change-date nil :comments nil :vn ("cut-21.1-1" "funnel-9.3-2" "wipe_manner-10.4.1-1") :wn ("scrape%2:35:00" "scrape%2:35:02" "scrape%2:35:01" "scrape%2:29:00"))
     (LF-PARENT ONT::cut)
 ; like grate
     )
    )
   )
 
  (w::revert
   (senses
    ((meta-data :origin "verbnet-2.0" :entry-date 20060609 :change-date nil :comments nil :vn ("convert-26.6.2"))
     (LF-PARENT ONT::adjust)
     (example "revert the document to the saved version")
     (SEM (F::Cause F::Agentive) (F::Aspect F::bounded) (F::Time-span F::atomic))
     (TEMPL AGENT-THEME-RESULT-OPTIONAL-TEMPL (xp (% W::PP (W::ptype (? pt W::to)))))
     )
    )
   )
  (W::tread
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060609 :change-date nil :comments nil :vn ("carve-21.2-2"))
     (LF-PARENT ONT::self-locomote)
     (TEMPL agent-templ)
     )
    )
   )
  (W::sway
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060609 :change-date nil :comments nil :vn ("body_internal_motion-49" "modes_of_being_with_motion-47.3") :wn ("sway%2:38:00" "sway%2:38:01" "sway%2:41:00" "sway%2:38:02" "sway%2:38:03"))
     (LF-PARENT ONT::move-back-and-forth)
     (example "the ship swayed")
     (TEMPL theme-templ)
     )
    )
   )
  (W::manifest
   (SENSES
    ((meta-data :origin "verbnet-2.0" :entry-date 20060609 :change-date 20090506 :comments nil :vn ("reflexive_appearance-48.1.2"))
     (LF-PARENT ONT::visual-display)
     (example "he manifested confidence")
     )
    )
   )
  )
 )

(define-words :pos W::v :templ agent-theme-xp-templ
 :words (
 (W::urge
   (SENSES
    ((LF-PARENT ONT::request)
     (example "Abrams urged Browne to hire Chiang")
     (meta-data :origin csli-ts :entry-date 20070313 :change-date nil :comments nil :wn nil)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ADDRESSEE-THEME-OBJCONTROL-REQ-TEMPL)
     )
    ((LF-PARENT ONT::request)
     (example "Abrams urged Browne")
     (meta-data :origin csli-ts :entry-date 20070313 :change-date nil :comments nil :wn nil)
     (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
     (TEMPL AGENT-ADDRESSEE-TEMPL)
     )
    )
   )
  (W::employ
   (wordfeats (W::morph (:forms (-vb) :nom w::employment)))
   (SENSES
    ((LF-PARENT ONT::employ)
     (example "Who does Chiang employ (to write his papers)")
     (meta-data :origin csli-ts :entry-date 20070313 :change-date 20090508 :comments nil :wn nil)
     (templ agent-effect-objcontrol-req-templ)
     )
    ;; need this transitive separate to get passive right
     ((LF-PARENT ONT::employ)
     (example "Abrams hired this employee")
     (meta-data :origin csli-ts :entry-date 20070316 :change-date 20090508 :comments nil :wn nil)
     (templ agent-theme-xp-templ)
     )
    )
   )

  ((W::lay (w::off))
   (wordfeats (W::morph (:forms (-vb) :past W::laid)))
   (SENSES
    ((LF-PARENT ONT::terminate)
     (example "Abrams laid off a programmer")
     (meta-data :origin csli-ts :entry-date 20070313 :change-date 20090508 :comments nil :wn nil)
     )
    )
   )
 (w::appeal
  (senses
   (;(LF-PARENT ONT::request)
    (lf-parent ont::appeal-apply-demand) ;; 20120523 GUM change new parent
    (example "Abrams appealed to Browne to hire Chiang")
    (meta-data :origin csli-ts :entry-date 20070313 :change-date nil :comments nil :wn nil)
    (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
    (templ agent-to-addressee-theme-objcontrol-req-templ)
    )
   ;; need this so passive rule will work
   (;(LF-PARENT ONT::request)
    (lf-parent ont::appeal-apply-demand) ;; 20120523 GUM change new parent
    (example "Abrams appealed to Browne to hire Chiang")
    (meta-data :origin csli-ts :entry-date 20070313 :change-date nil :comments nil :wn nil)
    (SEM (F::Aspect F::unbounded) (F::Time-span F::extended))
    (templ agent-to-addressee-templ)
    )
   )
  )

(W::sing
   (wordfeats (W::morph (:forms (-vb) :past W::sang :pastpart w::sung)))
   (SENSES
    ((LF-PARENT ONT::communication)
     (meta-data :origin bolt :entry-date 20120516 :comments top500)
     (example "sing him the song")
     (TEMPL AGENT-ADDRESSEE-IOBJ-THEME-TEMPL)
     )
    ((LF-PARENT ONT::communication)
     (meta-data :origin bolt :entry-date 20120516 :comments top500)
     (example "he sang the song")
     (TEMPL AGENT-THEME-XP-TEMPL)
     )
    ((LF-PARENT ONT::communication)
     (meta-data :origin bolt-e :entry-date 20120516 :comments top500)
     (example "he sang")
     (TEMPL AGENT-TEMPL)
     )
    )
   )

 (W::govern
   (SENSES
    ((lf-parent ont::managing)
     (SEM (F::Cause F::Agentive) (F::Aspect F::unbounded) (F::Time-span F::extended))
     (example "the device governs the flow of oxygen")
     (TEMPL cause-theme-xp-templ)
     (meta-data :origin bolt-e :entry-date 20120516 :comments top500)
     )
    ))

(W::differ
   (SENSES
    ((lf-parent ont::in-relation)
      (example "they differ")
     (TEMPL theme-plural-templ)
     (meta-data :origin bolt-e :entry-date 20120516 :comments top500)
     (preference 0.97)
     )
    ((lf-parent ont::in-relation)
      (example "they differ in size")
     (templ theme-co-theme-xp-templ (xp (% w::pp (w::ptype (? pptp w::in w::by)))))
     (meta-data :origin bolt-e :entry-date 20120516 :comments top500)
     )
    ))


 ))

(define-list-of-words :pos W::v
  :senses (
   ((LF-PARENT ONT::location-of-light)
    (TEMPL theme-TEMPL)
    (meta-data :origin cardiac :entry-date 20081223 :change-date nil :comments LM-vocab)
    )
   )
 :words (w::shine w::gleam w::glow w::sparkle w::glimmer w::glint))
